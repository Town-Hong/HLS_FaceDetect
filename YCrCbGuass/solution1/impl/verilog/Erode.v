// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Erode (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state10 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [7:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    p_src_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] or_cond_i_i_i_reg_804;
reg   [0:0] ap_reg_pp0_iter1_or_cond_i_i_i_reg_804;
reg   [0:0] icmp_reg_766;
reg   [0:0] tmp_s_reg_757;
reg    p_dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter6;
reg   [0:0] or_cond_i_i_reg_825;
reg   [0:0] ap_reg_pp0_iter5_or_cond_i_i_reg_825;
reg   [8:0] t_V_5_reg_215;
wire   [0:0] exitcond389_i_i_fu_226_p2;
wire    ap_CS_fsm_state2;
wire   [9:0] i_V_fu_232_p2;
reg   [9:0] i_V_reg_752;
wire   [0:0] tmp_s_fu_238_p2;
wire   [0:0] tmp_112_not_fu_244_p2;
reg   [0:0] tmp_112_not_reg_761;
wire   [0:0] icmp_fu_260_p2;
wire   [0:0] tmp_9_fu_266_p2;
reg   [0:0] tmp_9_reg_771;
wire   [0:0] tmp_142_2_fu_272_p2;
reg   [0:0] tmp_142_2_reg_775;
wire   [0:0] tmp_1_fu_278_p2;
reg   [0:0] tmp_1_reg_779;
wire   [1:0] row_assign_7_1_t_fu_288_p2;
reg   [1:0] row_assign_7_1_t_reg_785;
wire   [1:0] row_assign_7_2_t_fu_294_p2;
reg   [1:0] row_assign_7_2_t_reg_790;
wire   [0:0] exitcond388_i_i_fu_304_p2;
reg   [0:0] exitcond388_i_i_reg_795;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
reg    ap_predicate_op94_read_state5;
reg    ap_predicate_op102_read_state5;
reg    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
reg    ap_block_state9_pp0_stage0_iter6;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] ap_reg_pp0_iter1_exitcond388_i_i_reg_795;
reg   [0:0] ap_reg_pp0_iter2_exitcond388_i_i_reg_795;
reg   [0:0] ap_reg_pp0_iter3_exitcond388_i_i_reg_795;
reg   [0:0] ap_reg_pp0_iter4_exitcond388_i_i_reg_795;
wire   [8:0] j_V_fu_310_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] or_cond_i_i_i_fu_364_p2;
wire   [8:0] x_fu_386_p3;
reg   [8:0] x_reg_808;
wire   [1:0] tmp_50_fu_394_p1;
reg   [1:0] tmp_50_reg_813;
reg   [1:0] ap_reg_pp0_iter1_tmp_50_reg_813;
wire   [0:0] brmerge_fu_398_p2;
reg   [0:0] brmerge_reg_818;
reg   [0:0] ap_reg_pp0_iter1_brmerge_reg_818;
wire   [0:0] or_cond_i_i_fu_403_p2;
reg   [0:0] ap_reg_pp0_iter1_or_cond_i_i_reg_825;
reg   [0:0] ap_reg_pp0_iter2_or_cond_i_i_reg_825;
reg   [0:0] ap_reg_pp0_iter3_or_cond_i_i_reg_825;
reg   [0:0] ap_reg_pp0_iter4_or_cond_i_i_reg_825;
reg   [8:0] k_buf_0_val_3_addr_reg_829;
reg   [8:0] k_buf_0_val_4_addr_reg_835;
reg   [8:0] k_buf_0_val_5_addr_reg_841;
wire   [7:0] col_buf_0_val_0_0_fu_440_p3;
reg   [7:0] col_buf_0_val_0_0_reg_847;
reg   [7:0] ap_reg_pp0_iter3_col_buf_0_val_0_0_reg_847;
reg   [7:0] ap_reg_pp0_iter4_col_buf_0_val_0_0_reg_847;
reg   [7:0] ap_reg_pp0_iter5_col_buf_0_val_0_0_reg_847;
wire   [7:0] src_kernel_win_0_va_8_fu_511_p3;
reg   [7:0] src_kernel_win_0_va_8_reg_854;
reg   [7:0] ap_reg_pp0_iter3_src_kernel_win_0_va_8_reg_854;
reg   [7:0] ap_reg_pp0_iter4_src_kernel_win_0_va_8_reg_854;
wire   [7:0] src_kernel_win_0_va_9_fu_529_p3;
reg   [7:0] src_kernel_win_0_va_9_reg_861;
wire   [7:0] temp_0_i_i_i_059_i_1_fu_561_p3;
reg   [7:0] temp_0_i_i_i_059_i_1_reg_868;
wire   [7:0] temp_0_i_i_i_059_i_3_fu_604_p3;
reg   [7:0] temp_0_i_i_i_059_i_3_reg_874;
wire   [0:0] tmp_188_1_2_fu_612_p2;
reg   [0:0] tmp_188_1_2_reg_879;
wire   [7:0] temp_0_i_i_i_059_i_6_fu_660_p3;
reg   [7:0] temp_0_i_i_i_059_i_6_reg_884;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
wire   [8:0] k_buf_0_val_3_address0;
reg    k_buf_0_val_3_ce0;
wire   [7:0] k_buf_0_val_3_q0;
reg    k_buf_0_val_3_ce1;
reg    k_buf_0_val_3_we1;
wire   [8:0] k_buf_0_val_4_address0;
reg    k_buf_0_val_4_ce0;
wire   [7:0] k_buf_0_val_4_q0;
reg    k_buf_0_val_4_ce1;
reg    k_buf_0_val_4_we1;
reg   [7:0] k_buf_0_val_4_d1;
wire   [8:0] k_buf_0_val_5_address0;
reg    k_buf_0_val_5_ce0;
wire   [7:0] k_buf_0_val_5_q0;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
reg   [7:0] k_buf_0_val_5_d1;
reg   [9:0] t_V_reg_204;
reg    ap_block_state1;
wire    ap_CS_fsm_state10;
wire   [63:0] tmp_6_fu_408_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] src_kernel_win_0_va_fu_96;
reg   [7:0] src_kernel_win_0_va_1_fu_100;
reg   [7:0] src_kernel_win_0_va_2_fu_104;
reg   [7:0] src_kernel_win_0_va_3_fu_108;
reg   [7:0] src_kernel_win_0_va_4_fu_112;
reg   [7:0] src_kernel_win_0_va_5_fu_116;
reg   [7:0] src_kernel_win_0_va_6_fu_120;
reg   [7:0] right_border_buf_0_s_fu_124;
wire   [7:0] col_buf_0_val_2_0_fu_478_p3;
reg   [7:0] right_border_buf_0_1_fu_128;
wire   [7:0] col_buf_0_val_1_0_fu_459_p3;
wire   [8:0] tmp_fu_250_p4;
wire   [1:0] tmp_46_fu_284_p1;
wire   [7:0] tmp_47_fu_316_p4;
wire   [9:0] t_V_5_cast_fu_300_p1;
wire   [9:0] ImagLoc_x_fu_332_p2;
wire   [0:0] tmp_48_fu_344_p3;
wire   [0:0] tmp_5_fu_358_p2;
wire   [0:0] rev_fu_352_p2;
wire   [0:0] tmp_49_fu_370_p3;
wire   [8:0] ImagLoc_x_cast_fu_338_p2;
wire   [8:0] p_assign_1_cast_cast_fu_378_p3;
wire   [0:0] icmp1_fu_326_p2;
wire   [1:0] col_assign_1_t_fu_423_p2;
wire   [7:0] tmp_26_fu_428_p5;
wire   [7:0] tmp_27_fu_447_p5;
wire   [7:0] tmp_28_fu_466_p5;
wire   [7:0] tmp_29_fu_500_p5;
wire   [7:0] tmp_30_fu_518_p5;
wire   [0:0] tmp_188_0_1_fu_542_p2;
wire   [7:0] temp_0_i_i_i_059_i_s_fu_548_p3;
wire   [0:0] tmp_188_0_2_fu_556_p2;
wire   [0:0] tmp_188_1_fu_586_p2;
wire   [7:0] temp_0_i_i_i_059_i_2_fu_591_p3;
wire   [0:0] tmp_188_1_1_fu_598_p2;
wire   [7:0] temp_0_i_i_i_059_i_4_fu_635_p3;
wire   [0:0] tmp_188_2_fu_640_p2;
wire   [7:0] temp_0_i_i_i_059_i_5_fu_646_p3;
wire   [0:0] tmp_188_2_1_fu_654_p2;
wire   [0:0] tmp_188_2_2_fu_680_p2;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_351;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
end

Erode_k_buf_0_val_3 #(
    .DataWidth( 8 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
k_buf_0_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_3_address0),
    .ce0(k_buf_0_val_3_ce0),
    .q0(k_buf_0_val_3_q0),
    .address1(k_buf_0_val_3_addr_reg_829),
    .ce1(k_buf_0_val_3_ce1),
    .we1(k_buf_0_val_3_we1),
    .d1(p_src_data_stream_V_dout)
);

Erode_k_buf_0_val_3 #(
    .DataWidth( 8 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
k_buf_0_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_4_address0),
    .ce0(k_buf_0_val_4_ce0),
    .q0(k_buf_0_val_4_q0),
    .address1(k_buf_0_val_4_addr_reg_835),
    .ce1(k_buf_0_val_4_ce1),
    .we1(k_buf_0_val_4_we1),
    .d1(k_buf_0_val_4_d1)
);

Erode_k_buf_0_val_3 #(
    .DataWidth( 8 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_address0),
    .ce0(k_buf_0_val_5_ce0),
    .q0(k_buf_0_val_5_q0),
    .address1(k_buf_0_val_5_addr_reg_841),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(k_buf_0_val_5_d1)
);

ImgProcess_Top_muxdS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
ImgProcess_Top_muxdS_U134(
    .din0(src_kernel_win_0_va_6_fu_120),
    .din1(8'd0),
    .din2(8'd0),
    .din3(col_assign_1_t_fu_423_p2),
    .dout(tmp_26_fu_428_p5)
);

ImgProcess_Top_muxdS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
ImgProcess_Top_muxdS_U135(
    .din0(right_border_buf_0_1_fu_128),
    .din1(8'd0),
    .din2(8'd0),
    .din3(col_assign_1_t_fu_423_p2),
    .dout(tmp_27_fu_447_p5)
);

ImgProcess_Top_muxdS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
ImgProcess_Top_muxdS_U136(
    .din0(right_border_buf_0_s_fu_124),
    .din1(8'd0),
    .din2(8'd0),
    .din3(col_assign_1_t_fu_423_p2),
    .dout(tmp_28_fu_466_p5)
);

ImgProcess_Top_muxdS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
ImgProcess_Top_muxdS_U137(
    .din0(col_buf_0_val_0_0_fu_440_p3),
    .din1(col_buf_0_val_1_0_fu_459_p3),
    .din2(col_buf_0_val_2_0_fu_478_p3),
    .din3(row_assign_7_1_t_reg_785),
    .dout(tmp_29_fu_500_p5)
);

ImgProcess_Top_muxdS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
ImgProcess_Top_muxdS_U138(
    .din0(col_buf_0_val_0_0_fu_440_p3),
    .din1(col_buf_0_val_1_0_fu_459_p3),
    .din2(col_buf_0_val_2_0_fu_478_p3),
    .din3(row_assign_7_2_t_reg_790),
    .dout(tmp_30_fu_518_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((exitcond389_i_i_fu_226_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond389_i_i_fu_226_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end else if (((exitcond389_i_i_fu_226_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_i_fu_304_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_5_reg_215 <= j_V_fu_310_p2;
    end else if (((exitcond389_i_i_fu_226_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_5_reg_215 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        t_V_reg_204 <= i_V_reg_752;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_204 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_reg_pp0_iter1_brmerge_reg_818 <= brmerge_reg_818;
        ap_reg_pp0_iter1_exitcond388_i_i_reg_795 <= exitcond388_i_i_reg_795;
        ap_reg_pp0_iter1_or_cond_i_i_i_reg_804 <= or_cond_i_i_i_reg_804;
        ap_reg_pp0_iter1_or_cond_i_i_reg_825 <= or_cond_i_i_reg_825;
        ap_reg_pp0_iter1_tmp_50_reg_813 <= tmp_50_reg_813;
        exitcond388_i_i_reg_795 <= exitcond388_i_i_fu_304_p2;
        k_buf_0_val_3_addr_reg_829 <= tmp_6_fu_408_p1;
        k_buf_0_val_4_addr_reg_835 <= tmp_6_fu_408_p1;
        k_buf_0_val_5_addr_reg_841 <= tmp_6_fu_408_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_reg_pp0_iter2_exitcond388_i_i_reg_795 <= ap_reg_pp0_iter1_exitcond388_i_i_reg_795;
        ap_reg_pp0_iter2_or_cond_i_i_reg_825 <= ap_reg_pp0_iter1_or_cond_i_i_reg_825;
        ap_reg_pp0_iter3_col_buf_0_val_0_0_reg_847 <= col_buf_0_val_0_0_reg_847;
        ap_reg_pp0_iter3_exitcond388_i_i_reg_795 <= ap_reg_pp0_iter2_exitcond388_i_i_reg_795;
        ap_reg_pp0_iter3_or_cond_i_i_reg_825 <= ap_reg_pp0_iter2_or_cond_i_i_reg_825;
        ap_reg_pp0_iter3_src_kernel_win_0_va_8_reg_854 <= src_kernel_win_0_va_8_reg_854;
        ap_reg_pp0_iter4_col_buf_0_val_0_0_reg_847 <= ap_reg_pp0_iter3_col_buf_0_val_0_0_reg_847;
        ap_reg_pp0_iter4_exitcond388_i_i_reg_795 <= ap_reg_pp0_iter3_exitcond388_i_i_reg_795;
        ap_reg_pp0_iter4_or_cond_i_i_reg_825 <= ap_reg_pp0_iter3_or_cond_i_i_reg_825;
        ap_reg_pp0_iter4_src_kernel_win_0_va_8_reg_854 <= ap_reg_pp0_iter3_src_kernel_win_0_va_8_reg_854;
        ap_reg_pp0_iter5_col_buf_0_val_0_0_reg_847 <= ap_reg_pp0_iter4_col_buf_0_val_0_0_reg_847;
        ap_reg_pp0_iter5_or_cond_i_i_reg_825 <= ap_reg_pp0_iter4_or_cond_i_i_reg_825;
        col_buf_0_val_0_0_reg_847 <= col_buf_0_val_0_0_fu_440_p3;
        src_kernel_win_0_va_8_reg_854 <= src_kernel_win_0_va_8_fu_511_p3;
        src_kernel_win_0_va_9_reg_861 <= src_kernel_win_0_va_9_fu_529_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_i_fu_304_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_reg_818 <= brmerge_fu_398_p2;
        or_cond_i_i_i_reg_804 <= or_cond_i_i_i_fu_364_p2;
        or_cond_i_i_reg_825 <= or_cond_i_i_fu_403_p2;
        tmp_50_reg_813 <= tmp_50_fu_394_p1;
        x_reg_808 <= x_fu_386_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_752 <= i_V_fu_232_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond389_i_i_fu_226_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_reg_766 <= icmp_fu_260_p2;
        row_assign_7_1_t_reg_785 <= row_assign_7_1_t_fu_288_p2;
        row_assign_7_2_t_reg_790 <= row_assign_7_2_t_fu_294_p2;
        tmp_112_not_reg_761 <= tmp_112_not_fu_244_p2;
        tmp_142_2_reg_775 <= tmp_142_2_fu_272_p2;
        tmp_1_reg_779 <= tmp_1_fu_278_p2;
        tmp_9_reg_771 <= tmp_9_fu_266_p2;
        tmp_s_reg_757 <= tmp_s_fu_238_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op102_read_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        right_border_buf_0_1_fu_128 <= col_buf_0_val_1_0_fu_459_p3;
        right_border_buf_0_s_fu_124 <= col_buf_0_val_2_0_fu_478_p3;
        src_kernel_win_0_va_6_fu_120 <= col_buf_0_val_0_0_fu_440_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter4_exitcond388_i_i_reg_795 == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_1_fu_100 <= src_kernel_win_0_va_fu_96;
        src_kernel_win_0_va_fu_96 <= ap_reg_pp0_iter4_col_buf_0_val_0_0_reg_847;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter3_exitcond388_i_i_reg_795 == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_2_fu_104 <= ap_reg_pp0_iter3_src_kernel_win_0_va_8_reg_854;
        src_kernel_win_0_va_3_fu_108 <= src_kernel_win_0_va_2_fu_104;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_exitcond388_i_i_reg_795 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_4_fu_112 <= src_kernel_win_0_va_9_reg_861;
        src_kernel_win_0_va_5_fu_116 <= src_kernel_win_0_va_4_fu_112;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_or_cond_i_i_reg_825 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        temp_0_i_i_i_059_i_1_reg_868 <= temp_0_i_i_i_059_i_1_fu_561_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter3_or_cond_i_i_reg_825 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        temp_0_i_i_i_059_i_3_reg_874 <= temp_0_i_i_i_059_i_3_fu_604_p3;
        tmp_188_1_2_reg_879 <= tmp_188_1_2_fu_612_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter4_or_cond_i_i_reg_825 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        temp_0_i_i_i_059_i_6_reg_884 <= temp_0_i_i_i_059_i_6_fu_660_p3;
    end
end

always @ (*) begin
    if ((exitcond388_i_i_fu_304_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond389_i_i_fu_226_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond389_i_i_fu_226_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_ce0 = 1'b1;
    end else begin
        k_buf_0_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_reg_766 == 1'd0) & (tmp_142_2_reg_775 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_i_reg_804 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op102_read_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_ce1 = 1'b1;
    end else begin
        k_buf_0_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_reg_766 == 1'd0) & (tmp_142_2_reg_775 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_i_reg_804 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op102_read_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_we1 = 1'b1;
    end else begin
        k_buf_0_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_ce0 = 1'b1;
    end else begin
        k_buf_0_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_reg_766 == 1'd0) & (tmp_9_reg_771 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_i_reg_804 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op102_read_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_ce1 = 1'b1;
    end else begin
        k_buf_0_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op102_read_state5 == 1'b1)) begin
            k_buf_0_val_4_d1 = k_buf_0_val_3_q0;
        end else if ((1'b1 == ap_condition_351)) begin
            k_buf_0_val_4_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_4_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_reg_766 == 1'd0) & (tmp_9_reg_771 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_i_reg_804 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op102_read_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_we1 = 1'b1;
    end else begin
        k_buf_0_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_reg_766 == 1'd0) & (tmp_9_reg_771 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_i_reg_804 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op102_read_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op102_read_state5 == 1'b1)) begin
            k_buf_0_val_5_d1 = k_buf_0_val_4_q0;
        end else if ((1'b1 == ap_condition_351)) begin
            k_buf_0_val_5_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_5_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_reg_766 == 1'd0) & (tmp_9_reg_771 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_i_reg_804 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op102_read_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter5_or_cond_i_i_reg_825 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter5_or_cond_i_i_reg_825 == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_757 == 1'd1) & (icmp_reg_766 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_i_reg_804 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_reg_766 == 1'd0) & (ap_reg_pp0_iter1_or_cond_i_i_i_reg_804 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        p_src_data_stream_V_blk_n = p_src_data_stream_V_empty_n;
    end else begin
        p_src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op102_read_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op94_read_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        p_src_data_stream_V_read = 1'b1;
    end else begin
        p_src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond389_i_i_fu_226_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond388_i_i_fu_304_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter5 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter6 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter5 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((exitcond388_i_i_fu_304_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_cast_fu_338_p2 = ($signed(9'd511) + $signed(t_V_5_reg_215));

assign ImagLoc_x_fu_332_p2 = ($signed(10'd1023) + $signed(t_V_5_cast_fu_300_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_reg_pp0_iter5_or_cond_i_i_reg_825 == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op102_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op94_read_state5 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_reg_pp0_iter5_or_cond_i_i_reg_825 == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op102_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op94_read_state5 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_reg_pp0_iter5_or_cond_i_i_reg_825 == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op102_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op94_read_state5 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter2 = (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op102_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op94_read_state5 == 1'b1)));
end

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_pp0_stage0_iter6 = ((ap_reg_pp0_iter5_or_cond_i_i_reg_825 == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_351 = ((icmp_reg_766 == 1'd0) & (tmp_9_reg_771 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_i_reg_804 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op102_read_state5 = ((tmp_s_reg_757 == 1'd1) & (icmp_reg_766 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_i_reg_804 == 1'd1));
end

always @ (*) begin
    ap_predicate_op94_read_state5 = ((icmp_reg_766 == 1'd0) & (ap_reg_pp0_iter1_or_cond_i_i_i_reg_804 == 1'd1));
end

assign ap_ready = internal_ap_ready;

assign brmerge_fu_398_p2 = (tmp_5_fu_358_p2 | tmp_112_not_reg_761);

assign col_assign_1_t_fu_423_p2 = (ap_reg_pp0_iter1_tmp_50_reg_813 ^ 2'd3);

assign col_buf_0_val_0_0_fu_440_p3 = ((ap_reg_pp0_iter1_brmerge_reg_818[0:0] === 1'b1) ? k_buf_0_val_3_q0 : tmp_26_fu_428_p5);

assign col_buf_0_val_1_0_fu_459_p3 = ((ap_reg_pp0_iter1_brmerge_reg_818[0:0] === 1'b1) ? k_buf_0_val_4_q0 : tmp_27_fu_447_p5);

assign col_buf_0_val_2_0_fu_478_p3 = ((ap_reg_pp0_iter1_brmerge_reg_818[0:0] === 1'b1) ? k_buf_0_val_5_q0 : tmp_28_fu_466_p5);

assign exitcond388_i_i_fu_304_p2 = ((t_V_5_reg_215 == 9'd482) ? 1'b1 : 1'b0);

assign exitcond389_i_i_fu_226_p2 = ((t_V_reg_204 == 10'd722) ? 1'b1 : 1'b0);

assign i_V_fu_232_p2 = (t_V_reg_204 + 10'd1);

assign icmp1_fu_326_p2 = ((tmp_47_fu_316_p4 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_fu_260_p2 = ((tmp_fu_250_p4 != 9'd0) ? 1'b1 : 1'b0);

assign j_V_fu_310_p2 = (t_V_5_reg_215 + 9'd1);

assign k_buf_0_val_3_address0 = tmp_6_fu_408_p1;

assign k_buf_0_val_4_address0 = tmp_6_fu_408_p1;

assign k_buf_0_val_5_address0 = tmp_6_fu_408_p1;

assign or_cond_i_i_fu_403_p2 = (icmp_reg_766 & icmp1_fu_326_p2);

assign or_cond_i_i_i_fu_364_p2 = (tmp_5_fu_358_p2 & rev_fu_352_p2);

assign p_assign_1_cast_cast_fu_378_p3 = ((tmp_49_fu_370_p3[0:0] === 1'b1) ? 9'd0 : 9'd479);

assign p_dst_data_stream_V_din = ((tmp_188_2_2_fu_680_p2[0:0] === 1'b1) ? ap_reg_pp0_iter5_col_buf_0_val_0_0_reg_847 : temp_0_i_i_i_059_i_6_reg_884);

assign rev_fu_352_p2 = (tmp_48_fu_344_p3 ^ 1'd1);

assign row_assign_7_1_t_fu_288_p2 = (tmp_46_fu_284_p1 ^ 2'd1);

assign row_assign_7_2_t_fu_294_p2 = ($signed(2'd2) - $signed(tmp_46_fu_284_p1));

assign src_kernel_win_0_va_8_fu_511_p3 = ((tmp_1_reg_779[0:0] === 1'b1) ? tmp_29_fu_500_p5 : col_buf_0_val_1_0_fu_459_p3);

assign src_kernel_win_0_va_9_fu_529_p3 = ((tmp_1_reg_779[0:0] === 1'b1) ? tmp_30_fu_518_p5 : col_buf_0_val_2_0_fu_478_p3);

assign start_out = real_start;

assign t_V_5_cast_fu_300_p1 = t_V_5_reg_215;

assign temp_0_i_i_i_059_i_1_fu_561_p3 = ((tmp_188_0_2_fu_556_p2[0:0] === 1'b1) ? src_kernel_win_0_va_9_reg_861 : temp_0_i_i_i_059_i_s_fu_548_p3);

assign temp_0_i_i_i_059_i_2_fu_591_p3 = ((tmp_188_1_fu_586_p2[0:0] === 1'b1) ? src_kernel_win_0_va_3_fu_108 : temp_0_i_i_i_059_i_1_reg_868);

assign temp_0_i_i_i_059_i_3_fu_604_p3 = ((tmp_188_1_1_fu_598_p2[0:0] === 1'b1) ? src_kernel_win_0_va_2_fu_104 : temp_0_i_i_i_059_i_2_fu_591_p3);

assign temp_0_i_i_i_059_i_4_fu_635_p3 = ((tmp_188_1_2_reg_879[0:0] === 1'b1) ? ap_reg_pp0_iter4_src_kernel_win_0_va_8_reg_854 : temp_0_i_i_i_059_i_3_reg_874);

assign temp_0_i_i_i_059_i_5_fu_646_p3 = ((tmp_188_2_fu_640_p2[0:0] === 1'b1) ? src_kernel_win_0_va_1_fu_100 : temp_0_i_i_i_059_i_4_fu_635_p3);

assign temp_0_i_i_i_059_i_6_fu_660_p3 = ((tmp_188_2_1_fu_654_p2[0:0] === 1'b1) ? src_kernel_win_0_va_fu_96 : temp_0_i_i_i_059_i_5_fu_646_p3);

assign temp_0_i_i_i_059_i_s_fu_548_p3 = ((tmp_188_0_1_fu_542_p2[0:0] === 1'b1) ? src_kernel_win_0_va_4_fu_112 : src_kernel_win_0_va_5_fu_116);

assign tmp_112_not_fu_244_p2 = (tmp_s_fu_238_p2 ^ 1'd1);

assign tmp_142_2_fu_272_p2 = ((t_V_reg_204 == 10'd1) ? 1'b1 : 1'b0);

assign tmp_188_0_1_fu_542_p2 = ((src_kernel_win_0_va_4_fu_112 < src_kernel_win_0_va_5_fu_116) ? 1'b1 : 1'b0);

assign tmp_188_0_2_fu_556_p2 = ((src_kernel_win_0_va_9_reg_861 < temp_0_i_i_i_059_i_s_fu_548_p3) ? 1'b1 : 1'b0);

assign tmp_188_1_1_fu_598_p2 = ((src_kernel_win_0_va_2_fu_104 < temp_0_i_i_i_059_i_2_fu_591_p3) ? 1'b1 : 1'b0);

assign tmp_188_1_2_fu_612_p2 = ((ap_reg_pp0_iter3_src_kernel_win_0_va_8_reg_854 < temp_0_i_i_i_059_i_3_fu_604_p3) ? 1'b1 : 1'b0);

assign tmp_188_1_fu_586_p2 = ((src_kernel_win_0_va_3_fu_108 < temp_0_i_i_i_059_i_1_reg_868) ? 1'b1 : 1'b0);

assign tmp_188_2_1_fu_654_p2 = ((src_kernel_win_0_va_fu_96 < temp_0_i_i_i_059_i_5_fu_646_p3) ? 1'b1 : 1'b0);

assign tmp_188_2_2_fu_680_p2 = ((ap_reg_pp0_iter5_col_buf_0_val_0_0_reg_847 < temp_0_i_i_i_059_i_6_reg_884) ? 1'b1 : 1'b0);

assign tmp_188_2_fu_640_p2 = ((src_kernel_win_0_va_1_fu_100 < temp_0_i_i_i_059_i_4_fu_635_p3) ? 1'b1 : 1'b0);

assign tmp_1_fu_278_p2 = ((t_V_reg_204 > 10'd720) ? 1'b1 : 1'b0);

assign tmp_46_fu_284_p1 = t_V_reg_204[1:0];

assign tmp_47_fu_316_p4 = {{t_V_5_reg_215[8:1]}};

assign tmp_48_fu_344_p3 = ImagLoc_x_fu_332_p2[32'd9];

assign tmp_49_fu_370_p3 = ImagLoc_x_fu_332_p2[32'd9];

assign tmp_50_fu_394_p1 = x_fu_386_p3[1:0];

assign tmp_5_fu_358_p2 = (($signed(ImagLoc_x_fu_332_p2) < $signed(10'd480)) ? 1'b1 : 1'b0);

assign tmp_6_fu_408_p1 = x_reg_808;

assign tmp_9_fu_266_p2 = ((t_V_reg_204 == 10'd0) ? 1'b1 : 1'b0);

assign tmp_fu_250_p4 = {{t_V_reg_204[9:1]}};

assign tmp_s_fu_238_p2 = ((t_V_reg_204 < 10'd720) ? 1'b1 : 1'b0);

assign x_fu_386_p3 = ((or_cond_i_i_i_fu_364_p2[0:0] === 1'b1) ? ImagLoc_x_cast_fu_338_p2 : p_assign_1_cast_cast_fu_378_p3);

endmodule //Erode
