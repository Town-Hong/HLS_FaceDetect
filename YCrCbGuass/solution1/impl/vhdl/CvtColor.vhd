-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity CvtColor is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    rows : IN STD_LOGIC_VECTOR (31 downto 0);
    cols : IN STD_LOGIC_VECTOR (31 downto 0);
    src_mat_data_stream_s_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    src_mat_data_stream_s_empty_n : IN STD_LOGIC;
    src_mat_data_stream_s_read : OUT STD_LOGIC;
    src_mat_data_stream_1_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    src_mat_data_stream_1_empty_n : IN STD_LOGIC;
    src_mat_data_stream_1_read : OUT STD_LOGIC;
    src_mat_data_stream_2_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    src_mat_data_stream_2_empty_n : IN STD_LOGIC;
    src_mat_data_stream_2_read : OUT STD_LOGIC;
    YCrCb_IMG_data_strea_i_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    YCrCb_IMG_data_strea_i_full_n : IN STD_LOGIC;
    YCrCb_IMG_data_strea_i_write : OUT STD_LOGIC;
    YCrCb_IMG_data_strea_1_i_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    YCrCb_IMG_data_strea_1_i_full_n : IN STD_LOGIC;
    YCrCb_IMG_data_strea_1_i_write : OUT STD_LOGIC;
    YCrCb_IMG_data_strea_2_i_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    YCrCb_IMG_data_strea_2_i_full_n : IN STD_LOGIC;
    YCrCb_IMG_data_strea_2_i_write : OUT STD_LOGIC );
end;


architecture behav of CvtColor is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv29_1322D0 : STD_LOGIC_VECTOR (28 downto 0) := "00000000100110010001011010000";
    constant ap_const_lv30_259168 : STD_LOGIC_VECTOR (29 downto 0) := "000000001001011001000101101000";
    constant ap_const_lv28_74BC6 : STD_LOGIC_VECTOR (27 downto 0) := "0000000001110100101111000110";
    constant ap_const_lv32_2DA1CA : STD_LOGIC_VECTOR (31 downto 0) := "00000000001011011010000111001010";
    constant ap_const_lv32_20000000 : STD_LOGIC_VECTOR (31 downto 0) := "00100000000000000000000000000000";
    constant ap_const_lv32_241893 : STD_LOGIC_VECTOR (31 downto 0) := "00000000001001000001100010010011";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal src_mat_data_stream_s_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_i_reg_713 : STD_LOGIC_VECTOR (0 downto 0);
    signal src_mat_data_stream_1_blk_n : STD_LOGIC;
    signal src_mat_data_stream_2_blk_n : STD_LOGIC;
    signal YCrCb_IMG_data_strea_i_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_reg_pp0_iter5_exitcond_i_reg_713 : STD_LOGIC_VECTOR (0 downto 0);
    signal YCrCb_IMG_data_strea_1_i_blk_n : STD_LOGIC;
    signal YCrCb_IMG_data_strea_2_i_blk_n : STD_LOGIC;
    signal j_i_reg_184 : STD_LOGIC_VECTOR (8 downto 0);
    signal rows_1_fu_195_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal cols_1_fu_199_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond1_i_fu_203_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_fu_208_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_reg_708 : STD_LOGIC_VECTOR (9 downto 0);
    signal exitcond_i_fu_214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_reg_pp0_iter1_exitcond_i_reg_713 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_exitcond_i_reg_713 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_exitcond_i_reg_713 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_exitcond_i_reg_713 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_fu_219_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_76_reg_722 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter2_tmp_76_reg_722 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter3_tmp_76_reg_722 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_77_reg_728 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter2_tmp_77_reg_728 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_78_reg_733 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter2_tmp_78_reg_733 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter3_tmp_78_reg_733 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_4_i_i_fu_644_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_4_i_i_reg_739 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_650_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal r_V_1_reg_744 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal p_Val2_8_reg_749 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_reg_754 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_s_fu_288_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_reg_759 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter5_p_Val2_s_reg_759 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_op_assign_3_i_fu_303_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_op_assign_3_i_reg_764 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_op_assign_4_i_fu_312_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_op_assign_4_i_reg_769 : STD_LOGIC_VECTOR (8 downto 0);
    signal signbit_fu_321_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_reg_774 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_14_fu_355_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_14_reg_780 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_38_i_i_i_i_i_fu_410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_i_i_i_reg_786 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_39_demorgan_i_i_i_i_fu_416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_39_demorgan_i_i_i_i_reg_792 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_1_fu_425_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_1_reg_798 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_19_fu_459_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_19_reg_804 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_38_i_i_i14_i_i_fu_514_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_i14_i_i_reg_810 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_39_demorgan_i_i_i17_fu_520_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_39_demorgan_i_i_i17_reg_816 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal i_i_reg_173 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal grp_fu_660_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_26_i_i_i_i_fu_253_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_9_fu_263_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_63_fu_256_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_64_fu_268_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_9_i_i_not_fu_276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_carry_i_i_fu_282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_cast_i_i_fu_296_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_31_cast_i_i_fu_299_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_33_cast_i_i_fu_309_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_668_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_66_fu_337_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_13_fu_328_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_23_i_i_i_i_fu_344_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_68_fu_361_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_67_fu_348_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_i_i_i_i_fu_369_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_125_fu_381_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal carry_fu_375_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_fu_390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_fu_396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_fu_402_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_681_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_70_fu_441_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_18_fu_432_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_23_i_i5_i_i_fu_448_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_72_fu_465_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_71_fu_452_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_i_i9_i_i_fu_473_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_i_fu_485_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal carry_1_fu_479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_1_fu_494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_1_fu_500_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_1_fu_506_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_i_i_i_i_fu_526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_not_i_i_i_fu_536_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_not_i_i_i_i_fu_541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_39_demorgan_i_not_i_fu_551_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_not_i_i_s_fu_546_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_fu_531_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_i_fu_556_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux_i_i1_i_i_fu_562_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_i_i_i_i_fu_569_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_25_i_i15_i_i_fu_585_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_not_i18_i_i_fu_595_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_not_i_i19_i_s_fu_600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_39_demorgan_i_not_i_1_fu_610_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_not_i_i2_fu_605_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_4_fu_590_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i22_i_i_fu_615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux_i_i23_i_i_fu_621_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_i_i24_i_i_fu_628_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_4_i_i_fu_644_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_4_i_i_fu_644_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_650_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_650_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_650_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_660_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_660_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_668_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_668_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_681_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_681_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_650_p00 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_650_p20 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_660_p00 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_4_i_i_fu_644_p00 : STD_LOGIC_VECTOR (28 downto 0);

    component ImgProcess_Top_mubkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (21 downto 0);
        dout : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;


    component ImgProcess_Top_macud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (22 downto 0);
        din2 : IN STD_LOGIC_VECTOR (28 downto 0);
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component ImgProcess_Top_madEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (19 downto 0);
        din2 : IN STD_LOGIC_VECTOR (28 downto 0);
        dout : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;


    component ImgProcess_Top_maeOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (22 downto 0);
        din2 : IN STD_LOGIC_VECTOR (30 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    ImgProcess_Top_mubkb_U17 : component ImgProcess_Top_mubkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 22,
        dout_WIDTH => 29)
    port map (
        din0 => r_V_4_i_i_fu_644_p0,
        din1 => r_V_4_i_i_fu_644_p1,
        dout => r_V_4_i_i_fu_644_p2);

    ImgProcess_Top_macud_U18 : component ImgProcess_Top_macud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 23,
        din2_WIDTH => 29,
        dout_WIDTH => 30)
    port map (
        din0 => grp_fu_650_p0,
        din1 => grp_fu_650_p1,
        din2 => grp_fu_650_p2,
        dout => grp_fu_650_p3);

    ImgProcess_Top_madEe_U19 : component ImgProcess_Top_madEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 20,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        din0 => grp_fu_660_p0,
        din1 => grp_fu_660_p1,
        din2 => r_V_4_i_i_reg_739,
        dout => grp_fu_660_p3);

    ImgProcess_Top_maeOg_U20 : component ImgProcess_Top_maeOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 23,
        din2_WIDTH => 31,
        dout_WIDTH => 32)
    port map (
        din0 => i_op_assign_3_i_reg_764,
        din1 => grp_fu_668_p1,
        din2 => grp_fu_668_p2,
        dout => grp_fu_668_p3);

    ImgProcess_Top_maeOg_U21 : component ImgProcess_Top_maeOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 23,
        din2_WIDTH => 31,
        dout_WIDTH => 32)
    port map (
        din0 => i_op_assign_4_i_reg_769,
        din1 => grp_fu_681_p1,
        din2 => grp_fu_681_p2,
        dout => grp_fu_681_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_i_fu_203_p2 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((exitcond1_i_fu_203_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                elsif (((exitcond1_i_fu_203_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_i_reg_173_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                i_i_reg_173 <= i_reg_708;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_i_reg_173 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    j_i_reg_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_fu_214_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                j_i_reg_184 <= j_fu_219_p2;
            elsif (((exitcond1_i_fu_203_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                j_i_reg_184 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_reg_pp0_iter1_exitcond_i_reg_713 <= exitcond_i_reg_713;
                exitcond_i_reg_713 <= exitcond_i_fu_214_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_reg_pp0_iter2_exitcond_i_reg_713 <= ap_reg_pp0_iter1_exitcond_i_reg_713;
                ap_reg_pp0_iter2_tmp_76_reg_722 <= tmp_76_reg_722;
                ap_reg_pp0_iter2_tmp_77_reg_728 <= tmp_77_reg_728;
                ap_reg_pp0_iter2_tmp_78_reg_733 <= tmp_78_reg_733;
                ap_reg_pp0_iter3_exitcond_i_reg_713 <= ap_reg_pp0_iter2_exitcond_i_reg_713;
                ap_reg_pp0_iter3_tmp_76_reg_722 <= ap_reg_pp0_iter2_tmp_76_reg_722;
                ap_reg_pp0_iter3_tmp_78_reg_733 <= ap_reg_pp0_iter2_tmp_78_reg_733;
                ap_reg_pp0_iter4_exitcond_i_reg_713 <= ap_reg_pp0_iter3_exitcond_i_reg_713;
                ap_reg_pp0_iter5_exitcond_i_reg_713 <= ap_reg_pp0_iter4_exitcond_i_reg_713;
                ap_reg_pp0_iter5_p_Val2_s_reg_759 <= p_Val2_s_reg_759;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter3_exitcond_i_reg_713 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                i_op_assign_3_i_reg_764 <= i_op_assign_3_i_fu_303_p2;
                i_op_assign_4_i_reg_769 <= i_op_assign_4_i_fu_312_p2;
                p_Val2_s_reg_759 <= p_Val2_s_fu_288_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_reg_708 <= i_fu_208_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter4_exitcond_i_reg_713 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_38_i_i_i14_i_i_reg_810 <= p_38_i_i_i14_i_i_fu_514_p2;
                p_38_i_i_i_i_i_reg_786 <= p_38_i_i_i_i_i_fu_410_p2;
                p_39_demorgan_i_i_i17_reg_816 <= p_39_demorgan_i_i_i17_fu_520_p2;
                p_39_demorgan_i_i_i_i_reg_792 <= p_39_demorgan_i_i_i_i_fu_416_p2;
                p_Val2_14_reg_780 <= p_Val2_14_fu_355_p2;
                p_Val2_19_reg_804 <= p_Val2_19_fu_459_p2;
                signbit_1_reg_798 <= grp_fu_681_p3(31 downto 31);
                signbit_reg_774 <= grp_fu_668_p3(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter2_exitcond_i_reg_713 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_8_reg_749 <= grp_fu_650_p3(29 downto 22);
                tmp_reg_754 <= grp_fu_650_p3(21 downto 21);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter2_exitcond_i_reg_713 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                r_V_1_reg_744 <= grp_fu_650_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_exitcond_i_reg_713 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                r_V_4_i_i_reg_739 <= r_V_4_i_i_fu_644_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_reg_713 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_76_reg_722 <= src_mat_data_stream_s_dout;
                tmp_77_reg_728 <= src_mat_data_stream_1_dout;
                tmp_78_reg_733 <= src_mat_data_stream_2_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter6, exitcond1_i_fu_203_p2, ap_CS_fsm_state2, exitcond_i_fu_214_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter5)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_i_fu_203_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_i_fu_214_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_i_fu_214_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    Range1_all_ones_1_fu_494_p2 <= "1" when (tmp_45_i_fu_485_p4 = ap_const_lv2_3) else "0";
    Range1_all_ones_fu_390_p2 <= "1" when (tmp_i_125_fu_381_p4 = ap_const_lv2_3) else "0";
    Range1_all_zeros_1_fu_500_p2 <= "1" when (tmp_45_i_fu_485_p4 = ap_const_lv2_0) else "0";
    Range1_all_zeros_fu_396_p2 <= "1" when (tmp_i_125_fu_381_p4 = ap_const_lv2_0) else "0";

    YCrCb_IMG_data_strea_1_i_blk_n_assign_proc : process(YCrCb_IMG_data_strea_1_i_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter6, ap_reg_pp0_iter5_exitcond_i_reg_713)
    begin
        if (((ap_reg_pp0_iter5_exitcond_i_reg_713 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            YCrCb_IMG_data_strea_1_i_blk_n <= YCrCb_IMG_data_strea_1_i_full_n;
        else 
            YCrCb_IMG_data_strea_1_i_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    YCrCb_IMG_data_strea_1_i_din <= 
        p_mux_i_i1_i_i_fu_562_p3 when (brmerge_i_i_i_i_fu_556_p2(0) = '1') else 
        p_i_i_i_i_fu_569_p3;

    YCrCb_IMG_data_strea_1_i_write_assign_proc : process(ap_enable_reg_pp0_iter6, ap_reg_pp0_iter5_exitcond_i_reg_713, ap_block_pp0_stage0_11001)
    begin
        if (((ap_reg_pp0_iter5_exitcond_i_reg_713 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            YCrCb_IMG_data_strea_1_i_write <= ap_const_logic_1;
        else 
            YCrCb_IMG_data_strea_1_i_write <= ap_const_logic_0;
        end if; 
    end process;


    YCrCb_IMG_data_strea_2_i_blk_n_assign_proc : process(YCrCb_IMG_data_strea_2_i_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter6, ap_reg_pp0_iter5_exitcond_i_reg_713)
    begin
        if (((ap_reg_pp0_iter5_exitcond_i_reg_713 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            YCrCb_IMG_data_strea_2_i_blk_n <= YCrCb_IMG_data_strea_2_i_full_n;
        else 
            YCrCb_IMG_data_strea_2_i_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    YCrCb_IMG_data_strea_2_i_din <= 
        p_mux_i_i23_i_i_fu_621_p3 when (brmerge_i_i22_i_i_fu_615_p2(0) = '1') else 
        p_i_i24_i_i_fu_628_p3;

    YCrCb_IMG_data_strea_2_i_write_assign_proc : process(ap_enable_reg_pp0_iter6, ap_reg_pp0_iter5_exitcond_i_reg_713, ap_block_pp0_stage0_11001)
    begin
        if (((ap_reg_pp0_iter5_exitcond_i_reg_713 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            YCrCb_IMG_data_strea_2_i_write <= ap_const_logic_1;
        else 
            YCrCb_IMG_data_strea_2_i_write <= ap_const_logic_0;
        end if; 
    end process;


    YCrCb_IMG_data_strea_i_blk_n_assign_proc : process(YCrCb_IMG_data_strea_i_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter6, ap_reg_pp0_iter5_exitcond_i_reg_713)
    begin
        if (((ap_reg_pp0_iter5_exitcond_i_reg_713 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            YCrCb_IMG_data_strea_i_blk_n <= YCrCb_IMG_data_strea_i_full_n;
        else 
            YCrCb_IMG_data_strea_i_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    YCrCb_IMG_data_strea_i_din <= ap_reg_pp0_iter5_p_Val2_s_reg_759;

    YCrCb_IMG_data_strea_i_write_assign_proc : process(ap_enable_reg_pp0_iter6, ap_reg_pp0_iter5_exitcond_i_reg_713, ap_block_pp0_stage0_11001)
    begin
        if (((ap_reg_pp0_iter5_exitcond_i_reg_713 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            YCrCb_IMG_data_strea_i_write <= ap_const_logic_1;
        else 
            YCrCb_IMG_data_strea_i_write <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(3);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(src_mat_data_stream_s_empty_n, src_mat_data_stream_1_empty_n, src_mat_data_stream_2_empty_n, YCrCb_IMG_data_strea_i_full_n, YCrCb_IMG_data_strea_1_i_full_n, YCrCb_IMG_data_strea_2_i_full_n, ap_enable_reg_pp0_iter1, exitcond_i_reg_713, ap_enable_reg_pp0_iter6, ap_reg_pp0_iter5_exitcond_i_reg_713)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (((ap_reg_pp0_iter5_exitcond_i_reg_713 = ap_const_lv1_0) and (ap_const_logic_0 = YCrCb_IMG_data_strea_2_i_full_n)) or ((ap_reg_pp0_iter5_exitcond_i_reg_713 = ap_const_lv1_0) and (ap_const_logic_0 = YCrCb_IMG_data_strea_1_i_full_n)) or ((ap_reg_pp0_iter5_exitcond_i_reg_713 = ap_const_lv1_0) and (ap_const_logic_0 = YCrCb_IMG_data_strea_i_full_n)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((exitcond_i_reg_713 = ap_const_lv1_0) and (src_mat_data_stream_2_empty_n = ap_const_logic_0)) or ((exitcond_i_reg_713 = ap_const_lv1_0) and (src_mat_data_stream_1_empty_n = ap_const_logic_0)) or ((exitcond_i_reg_713 = ap_const_lv1_0) and (src_mat_data_stream_s_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(src_mat_data_stream_s_empty_n, src_mat_data_stream_1_empty_n, src_mat_data_stream_2_empty_n, YCrCb_IMG_data_strea_i_full_n, YCrCb_IMG_data_strea_1_i_full_n, YCrCb_IMG_data_strea_2_i_full_n, ap_enable_reg_pp0_iter1, exitcond_i_reg_713, ap_enable_reg_pp0_iter6, ap_reg_pp0_iter5_exitcond_i_reg_713)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (((ap_reg_pp0_iter5_exitcond_i_reg_713 = ap_const_lv1_0) and (ap_const_logic_0 = YCrCb_IMG_data_strea_2_i_full_n)) or ((ap_reg_pp0_iter5_exitcond_i_reg_713 = ap_const_lv1_0) and (ap_const_logic_0 = YCrCb_IMG_data_strea_1_i_full_n)) or ((ap_reg_pp0_iter5_exitcond_i_reg_713 = ap_const_lv1_0) and (ap_const_logic_0 = YCrCb_IMG_data_strea_i_full_n)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((exitcond_i_reg_713 = ap_const_lv1_0) and (src_mat_data_stream_2_empty_n = ap_const_logic_0)) or ((exitcond_i_reg_713 = ap_const_lv1_0) and (src_mat_data_stream_1_empty_n = ap_const_logic_0)) or ((exitcond_i_reg_713 = ap_const_lv1_0) and (src_mat_data_stream_s_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(src_mat_data_stream_s_empty_n, src_mat_data_stream_1_empty_n, src_mat_data_stream_2_empty_n, YCrCb_IMG_data_strea_i_full_n, YCrCb_IMG_data_strea_1_i_full_n, YCrCb_IMG_data_strea_2_i_full_n, ap_enable_reg_pp0_iter1, exitcond_i_reg_713, ap_enable_reg_pp0_iter6, ap_reg_pp0_iter5_exitcond_i_reg_713)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (((ap_reg_pp0_iter5_exitcond_i_reg_713 = ap_const_lv1_0) and (ap_const_logic_0 = YCrCb_IMG_data_strea_2_i_full_n)) or ((ap_reg_pp0_iter5_exitcond_i_reg_713 = ap_const_lv1_0) and (ap_const_logic_0 = YCrCb_IMG_data_strea_1_i_full_n)) or ((ap_reg_pp0_iter5_exitcond_i_reg_713 = ap_const_lv1_0) and (ap_const_logic_0 = YCrCb_IMG_data_strea_i_full_n)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((exitcond_i_reg_713 = ap_const_lv1_0) and (src_mat_data_stream_2_empty_n = ap_const_logic_0)) or ((exitcond_i_reg_713 = ap_const_lv1_0) and (src_mat_data_stream_1_empty_n = ap_const_logic_0)) or ((exitcond_i_reg_713 = ap_const_lv1_0) and (src_mat_data_stream_s_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(src_mat_data_stream_s_empty_n, src_mat_data_stream_1_empty_n, src_mat_data_stream_2_empty_n, exitcond_i_reg_713)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((exitcond_i_reg_713 = ap_const_lv1_0) and (src_mat_data_stream_2_empty_n = ap_const_logic_0)) or ((exitcond_i_reg_713 = ap_const_lv1_0) and (src_mat_data_stream_1_empty_n = ap_const_logic_0)) or ((exitcond_i_reg_713 = ap_const_lv1_0) and (src_mat_data_stream_s_empty_n = ap_const_logic_0)));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_pp0_stage0_iter6_assign_proc : process(YCrCb_IMG_data_strea_i_full_n, YCrCb_IMG_data_strea_1_i_full_n, YCrCb_IMG_data_strea_2_i_full_n, ap_reg_pp0_iter5_exitcond_i_reg_713)
    begin
                ap_block_state9_pp0_stage0_iter6 <= (((ap_reg_pp0_iter5_exitcond_i_reg_713 = ap_const_lv1_0) and (ap_const_logic_0 = YCrCb_IMG_data_strea_2_i_full_n)) or ((ap_reg_pp0_iter5_exitcond_i_reg_713 = ap_const_lv1_0) and (ap_const_logic_0 = YCrCb_IMG_data_strea_1_i_full_n)) or ((ap_reg_pp0_iter5_exitcond_i_reg_713 = ap_const_lv1_0) and (ap_const_logic_0 = YCrCb_IMG_data_strea_i_full_n)));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(exitcond_i_fu_214_p2)
    begin
        if ((exitcond_i_fu_214_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, exitcond1_i_fu_203_p2, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_i_fu_203_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    brmerge_i_i22_i_i_fu_615_p2 <= (p_39_demorgan_i_not_i_1_fu_610_p2 or neg_src_not_i_i19_i_s_fu_600_p2);
    brmerge_i_i_i_i_fu_556_p2 <= (p_39_demorgan_i_not_i_fu_551_p2 or neg_src_not_i_i_i_i_fu_541_p2);
    brmerge_i_i_not_i_i2_fu_605_p2 <= (p_39_demorgan_i_i_i17_reg_816 and neg_src_not_i_i19_i_s_fu_600_p2);
    brmerge_i_i_not_i_i_s_fu_546_p2 <= (p_39_demorgan_i_i_i_i_reg_792 and neg_src_not_i_i_i_i_fu_541_p2);
    carry_1_fu_479_p2 <= (tmp_71_fu_452_p3 and tmp_24_i_i9_i_i_fu_473_p2);
    carry_fu_375_p2 <= (tmp_67_fu_348_p3 and tmp_24_i_i_i_i_fu_369_p2);
    cols_1_fu_199_p1 <= cols(9 - 1 downto 0);
    deleted_zeros_1_fu_506_p3 <= 
        Range1_all_ones_1_fu_494_p2 when (carry_1_fu_479_p2(0) = '1') else 
        Range1_all_zeros_1_fu_500_p2;
    deleted_zeros_fu_402_p3 <= 
        Range1_all_ones_fu_390_p2 when (carry_fu_375_p2(0) = '1') else 
        Range1_all_zeros_fu_396_p2;
    exitcond1_i_fu_203_p2 <= "1" when (i_i_reg_173 = rows_1_fu_195_p1) else "0";
    exitcond_i_fu_214_p2 <= "1" when (j_i_reg_184 = cols_1_fu_199_p1) else "0";
    grp_fu_650_p0 <= grp_fu_650_p00(8 - 1 downto 0);
    grp_fu_650_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter2_tmp_77_reg_728),30));
    grp_fu_650_p1 <= ap_const_lv30_259168(23 - 1 downto 0);
    grp_fu_650_p2 <= grp_fu_650_p20(29 - 1 downto 0);
    grp_fu_650_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_660_p3),30));
    grp_fu_660_p0 <= grp_fu_660_p00(8 - 1 downto 0);
    grp_fu_660_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter2_tmp_78_reg_733),28));
    grp_fu_660_p1 <= ap_const_lv28_74BC6(20 - 1 downto 0);
    grp_fu_668_p1 <= ap_const_lv32_2DA1CA(23 - 1 downto 0);
    grp_fu_668_p2 <= ap_const_lv32_20000000(31 - 1 downto 0);
    grp_fu_681_p1 <= ap_const_lv32_241893(23 - 1 downto 0);
    grp_fu_681_p2 <= ap_const_lv32_20000000(31 - 1 downto 0);
    i_fu_208_p2 <= std_logic_vector(unsigned(i_i_reg_173) + unsigned(ap_const_lv10_1));
    i_op_assign_3_i_fu_303_p2 <= std_logic_vector(unsigned(tmp_30_cast_i_i_fu_296_p1) - unsigned(tmp_31_cast_i_i_fu_299_p1));
    i_op_assign_4_i_fu_312_p2 <= std_logic_vector(unsigned(tmp_33_cast_i_i_fu_309_p1) - unsigned(tmp_31_cast_i_i_fu_299_p1));

    internal_ap_ready_assign_proc : process(exitcond1_i_fu_203_p2, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_i_fu_203_p2 = ap_const_lv1_1))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    j_fu_219_p2 <= std_logic_vector(unsigned(j_i_reg_184) + unsigned(ap_const_lv9_1));
    neg_src_4_fu_590_p2 <= (tmp_25_i_i15_i_i_fu_585_p2 and signbit_1_reg_798);
    neg_src_fu_531_p2 <= (tmp_25_i_i_i_i_fu_526_p2 and signbit_reg_774);
    neg_src_not_i_i19_i_s_fu_600_p2 <= (signbit_not_i18_i_i_fu_595_p2 or p_38_i_i_i14_i_i_reg_810);
    neg_src_not_i_i_i_i_fu_541_p2 <= (signbit_not_i_i_i_fu_536_p2 or p_38_i_i_i_i_i_reg_786);
    not_carry_i_i_fu_282_p2 <= (tmp_64_fu_268_p3 or p_Result_9_i_i_not_fu_276_p2);
    p_38_i_i_i14_i_i_fu_514_p2 <= (carry_1_fu_479_p2 and Range1_all_ones_1_fu_494_p2);
    p_38_i_i_i_i_i_fu_410_p2 <= (carry_fu_375_p2 and Range1_all_ones_fu_390_p2);
    p_39_demorgan_i_i_i17_fu_520_p2 <= (signbit_1_fu_425_p3 or deleted_zeros_1_fu_506_p3);
    p_39_demorgan_i_i_i_i_fu_416_p2 <= (signbit_fu_321_p3 or deleted_zeros_fu_402_p3);
    p_39_demorgan_i_not_i_1_fu_610_p2 <= (p_39_demorgan_i_i_i17_reg_816 xor ap_const_lv1_1);
    p_39_demorgan_i_not_i_fu_551_p2 <= (p_39_demorgan_i_i_i_i_reg_792 xor ap_const_lv1_1);
    p_Result_9_i_i_not_fu_276_p2 <= (tmp_63_fu_256_p3 xor ap_const_lv1_1);
    p_Val2_13_fu_328_p4 <= grp_fu_668_p3(29 downto 22);
    p_Val2_14_fu_355_p2 <= std_logic_vector(unsigned(p_Val2_13_fu_328_p4) + unsigned(tmp_23_i_i_i_i_fu_344_p1));
    p_Val2_18_fu_432_p4 <= grp_fu_681_p3(29 downto 22);
    p_Val2_19_fu_459_p2 <= std_logic_vector(unsigned(p_Val2_18_fu_432_p4) + unsigned(tmp_23_i_i5_i_i_fu_448_p1));
    p_Val2_9_fu_263_p2 <= std_logic_vector(unsigned(p_Val2_8_reg_749) + unsigned(tmp_26_i_i_i_i_fu_253_p1));
    p_Val2_s_fu_288_p3 <= 
        p_Val2_9_fu_263_p2 when (not_carry_i_i_fu_282_p2(0) = '1') else 
        ap_const_lv8_FF;
    p_i_i24_i_i_fu_628_p3 <= 
        ap_const_lv8_0 when (neg_src_4_fu_590_p2(0) = '1') else 
        p_Val2_19_reg_804;
    p_i_i_i_i_fu_569_p3 <= 
        ap_const_lv8_0 when (neg_src_fu_531_p2(0) = '1') else 
        p_Val2_14_reg_780;
    p_mux_i_i1_i_i_fu_562_p3 <= 
        p_Val2_14_reg_780 when (brmerge_i_i_not_i_i_s_fu_546_p2(0) = '1') else 
        ap_const_lv8_FF;
    p_mux_i_i23_i_i_fu_621_p3 <= 
        p_Val2_19_reg_804 when (brmerge_i_i_not_i_i2_fu_605_p2(0) = '1') else 
        ap_const_lv8_FF;
    r_V_4_i_i_fu_644_p0 <= r_V_4_i_i_fu_644_p00(8 - 1 downto 0);
    r_V_4_i_i_fu_644_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_76_reg_722),29));
    r_V_4_i_i_fu_644_p1 <= ap_const_lv29_1322D0(22 - 1 downto 0);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    rows_1_fu_195_p1 <= rows(10 - 1 downto 0);
    signbit_1_fu_425_p3 <= grp_fu_681_p3(31 downto 31);
    signbit_fu_321_p3 <= grp_fu_668_p3(31 downto 31);
    signbit_not_i18_i_i_fu_595_p2 <= (signbit_1_reg_798 xor ap_const_lv1_1);
    signbit_not_i_i_i_fu_536_p2 <= (signbit_reg_774 xor ap_const_lv1_1);

    src_mat_data_stream_1_blk_n_assign_proc : process(src_mat_data_stream_1_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_i_reg_713)
    begin
        if (((exitcond_i_reg_713 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            src_mat_data_stream_1_blk_n <= src_mat_data_stream_1_empty_n;
        else 
            src_mat_data_stream_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src_mat_data_stream_1_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_i_reg_713, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_i_reg_713 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            src_mat_data_stream_1_read <= ap_const_logic_1;
        else 
            src_mat_data_stream_1_read <= ap_const_logic_0;
        end if; 
    end process;


    src_mat_data_stream_2_blk_n_assign_proc : process(src_mat_data_stream_2_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_i_reg_713)
    begin
        if (((exitcond_i_reg_713 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            src_mat_data_stream_2_blk_n <= src_mat_data_stream_2_empty_n;
        else 
            src_mat_data_stream_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src_mat_data_stream_2_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_i_reg_713, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_i_reg_713 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            src_mat_data_stream_2_read <= ap_const_logic_1;
        else 
            src_mat_data_stream_2_read <= ap_const_logic_0;
        end if; 
    end process;


    src_mat_data_stream_s_blk_n_assign_proc : process(src_mat_data_stream_s_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_i_reg_713)
    begin
        if (((exitcond_i_reg_713 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            src_mat_data_stream_s_blk_n <= src_mat_data_stream_s_empty_n;
        else 
            src_mat_data_stream_s_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src_mat_data_stream_s_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_i_reg_713, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_i_reg_713 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            src_mat_data_stream_s_read <= ap_const_logic_1;
        else 
            src_mat_data_stream_s_read <= ap_const_logic_0;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_23_i_i5_i_i_fu_448_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_70_fu_441_p3),8));
    tmp_23_i_i_i_i_fu_344_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_66_fu_337_p3),8));
    tmp_24_i_i9_i_i_fu_473_p2 <= (tmp_72_fu_465_p3 xor ap_const_lv1_1);
    tmp_24_i_i_i_i_fu_369_p2 <= (tmp_68_fu_361_p3 xor ap_const_lv1_1);
    tmp_25_i_i15_i_i_fu_585_p2 <= (p_38_i_i_i14_i_i_reg_810 xor ap_const_lv1_1);
    tmp_25_i_i_i_i_fu_526_p2 <= (p_38_i_i_i_i_i_reg_786 xor ap_const_lv1_1);
    tmp_26_i_i_i_i_fu_253_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_754),8));
    tmp_30_cast_i_i_fu_296_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter3_tmp_76_reg_722),9));
    tmp_31_cast_i_i_fu_299_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_s_fu_288_p3),9));
    tmp_33_cast_i_i_fu_309_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter3_tmp_78_reg_733),9));
    tmp_45_i_fu_485_p4 <= grp_fu_681_p3(31 downto 30);
    tmp_63_fu_256_p3 <= r_V_1_reg_744(29 downto 29);
    tmp_64_fu_268_p3 <= p_Val2_9_fu_263_p2(7 downto 7);
    tmp_66_fu_337_p3 <= grp_fu_668_p3(21 downto 21);
    tmp_67_fu_348_p3 <= grp_fu_668_p3(29 downto 29);
    tmp_68_fu_361_p3 <= p_Val2_14_fu_355_p2(7 downto 7);
    tmp_70_fu_441_p3 <= grp_fu_681_p3(21 downto 21);
    tmp_71_fu_452_p3 <= grp_fu_681_p3(29 downto 29);
    tmp_72_fu_465_p3 <= p_Val2_19_fu_459_p2(7 downto 7);
    tmp_i_125_fu_381_p4 <= grp_fu_668_p3(31 downto 30);
end behav;
