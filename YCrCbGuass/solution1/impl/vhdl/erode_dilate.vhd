-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity erode_dilate is
port (
    img_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    img_data_stream_V_empty_n : IN STD_LOGIC;
    img_data_stream_V_read : OUT STD_LOGIC;
    res_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    res_data_stream_V_full_n : IN STD_LOGIC;
    res_data_stream_V_write : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of erode_dilate is 
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';

    signal Erode_U0_ap_start : STD_LOGIC;
    signal Erode_U0_ap_done : STD_LOGIC;
    signal Erode_U0_ap_continue : STD_LOGIC;
    signal Erode_U0_ap_idle : STD_LOGIC;
    signal Erode_U0_ap_ready : STD_LOGIC;
    signal Erode_U0_start_out : STD_LOGIC;
    signal Erode_U0_start_write : STD_LOGIC;
    signal Erode_U0_p_src_data_stream_V_read : STD_LOGIC;
    signal Erode_U0_p_dst_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Erode_U0_p_dst_data_stream_V_write : STD_LOGIC;
    signal Dilate_U0_ap_start : STD_LOGIC;
    signal Dilate_U0_ap_done : STD_LOGIC;
    signal Dilate_U0_ap_continue : STD_LOGIC;
    signal Dilate_U0_ap_idle : STD_LOGIC;
    signal Dilate_U0_ap_ready : STD_LOGIC;
    signal Dilate_U0_p_src_data_stream_V_read : STD_LOGIC;
    signal Dilate_U0_p_dst_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Dilate_U0_p_dst_data_stream_V_write : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal tmp_img_data_stream_s_full_n : STD_LOGIC;
    signal tmp_img_data_stream_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_img_data_stream_s_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal start_for_Dilate_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Dilate_U0_full_n : STD_LOGIC;
    signal start_for_Dilate_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Dilate_U0_empty_n : STD_LOGIC;
    signal Dilate_U0_start_full_n : STD_LOGIC;
    signal Dilate_U0_start_write : STD_LOGIC;

    component Erode IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_V_read : OUT STD_LOGIC;
        p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_dst_data_stream_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_V_write : OUT STD_LOGIC );
    end component;


    component Dilate IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_V_read : OUT STD_LOGIC;
        p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_dst_data_stream_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_V_write : OUT STD_LOGIC );
    end component;


    component fifo_w8_d1_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Dilate_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    Erode_U0 : component Erode
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => Erode_U0_ap_start,
        start_full_n => start_for_Dilate_U0_full_n,
        ap_done => Erode_U0_ap_done,
        ap_continue => Erode_U0_ap_continue,
        ap_idle => Erode_U0_ap_idle,
        ap_ready => Erode_U0_ap_ready,
        start_out => Erode_U0_start_out,
        start_write => Erode_U0_start_write,
        p_src_data_stream_V_dout => img_data_stream_V_dout,
        p_src_data_stream_V_empty_n => img_data_stream_V_empty_n,
        p_src_data_stream_V_read => Erode_U0_p_src_data_stream_V_read,
        p_dst_data_stream_V_din => Erode_U0_p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n => tmp_img_data_stream_s_full_n,
        p_dst_data_stream_V_write => Erode_U0_p_dst_data_stream_V_write);

    Dilate_U0 : component Dilate
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => Dilate_U0_ap_start,
        ap_done => Dilate_U0_ap_done,
        ap_continue => Dilate_U0_ap_continue,
        ap_idle => Dilate_U0_ap_idle,
        ap_ready => Dilate_U0_ap_ready,
        p_src_data_stream_V_dout => tmp_img_data_stream_s_dout,
        p_src_data_stream_V_empty_n => tmp_img_data_stream_s_empty_n,
        p_src_data_stream_V_read => Dilate_U0_p_src_data_stream_V_read,
        p_dst_data_stream_V_din => Dilate_U0_p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n => res_data_stream_V_full_n,
        p_dst_data_stream_V_write => Dilate_U0_p_dst_data_stream_V_write);

    tmp_img_data_stream_s_U : component fifo_w8_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Erode_U0_p_dst_data_stream_V_din,
        if_full_n => tmp_img_data_stream_s_full_n,
        if_write => Erode_U0_p_dst_data_stream_V_write,
        if_dout => tmp_img_data_stream_s_dout,
        if_empty_n => tmp_img_data_stream_s_empty_n,
        if_read => Dilate_U0_p_src_data_stream_V_read);

    start_for_Dilate_U0_U : component start_for_Dilate_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Dilate_U0_din,
        if_full_n => start_for_Dilate_U0_full_n,
        if_write => Erode_U0_start_write,
        if_dout => start_for_Dilate_U0_dout,
        if_empty_n => start_for_Dilate_U0_empty_n,
        if_read => Dilate_U0_ap_ready);




    Dilate_U0_ap_continue <= ap_continue;
    Dilate_U0_ap_start <= start_for_Dilate_U0_empty_n;
    Dilate_U0_start_full_n <= ap_const_logic_1;
    Dilate_U0_start_write <= ap_const_logic_0;
    Erode_U0_ap_continue <= ap_const_logic_1;
    Erode_U0_ap_start <= ap_start;
    ap_done <= Dilate_U0_ap_done;
    ap_idle <= (Erode_U0_ap_idle and Dilate_U0_ap_idle);
    ap_ready <= Erode_U0_ap_ready;
    ap_sync_continue <= ap_continue;
    ap_sync_done <= Dilate_U0_ap_done;
    ap_sync_ready <= Erode_U0_ap_ready;
    img_data_stream_V_read <= Erode_U0_p_src_data_stream_V_read;
    res_data_stream_V_din <= Dilate_U0_p_dst_data_stream_V_din;
    res_data_stream_V_write <= Dilate_U0_p_dst_data_stream_V_write;
    start_for_Dilate_U0_din <= (0=>ap_const_logic_1, others=>'-');
end behav;
