// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Erode_HH_
#define _Erode_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "ImgProcess_Top_muxdS.h"
#include "Erode_k_buf_0_val_3.h"

namespace ap_rtl {

struct Erode : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<8> > p_src_data_stream_V_dout;
    sc_in< sc_logic > p_src_data_stream_V_empty_n;
    sc_out< sc_logic > p_src_data_stream_V_read;
    sc_out< sc_lv<8> > p_dst_data_stream_V_din;
    sc_in< sc_logic > p_dst_data_stream_V_full_n;
    sc_out< sc_logic > p_dst_data_stream_V_write;
    sc_signal< sc_lv<8> > ap_var_for_const0;


    // Module declarations
    Erode(sc_module_name name);
    SC_HAS_PROCESS(Erode);

    ~Erode();

    sc_trace_file* mVcdFile;

    Erode_k_buf_0_val_3* k_buf_0_val_3_U;
    Erode_k_buf_0_val_3* k_buf_0_val_4_U;
    Erode_k_buf_0_val_3* k_buf_0_val_5_U;
    ImgProcess_Top_muxdS<1,1,8,8,8,2,8>* ImgProcess_Top_muxdS_U134;
    ImgProcess_Top_muxdS<1,1,8,8,8,2,8>* ImgProcess_Top_muxdS_U135;
    ImgProcess_Top_muxdS<1,1,8,8,8,2,8>* ImgProcess_Top_muxdS_U136;
    ImgProcess_Top_muxdS<1,1,8,8,8,2,8>* ImgProcess_Top_muxdS_U137;
    ImgProcess_Top_muxdS<1,1,8,8,8,2,8>* ImgProcess_Top_muxdS_U138;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > p_src_data_stream_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > or_cond_i_i_i_reg_804;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_or_cond_i_i_i_reg_804;
    sc_signal< sc_lv<1> > icmp_reg_766;
    sc_signal< sc_lv<1> > tmp_s_reg_757;
    sc_signal< sc_logic > p_dst_data_stream_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_lv<1> > or_cond_i_i_reg_825;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter5_or_cond_i_i_reg_825;
    sc_signal< sc_lv<9> > t_V_5_reg_215;
    sc_signal< sc_lv<1> > exitcond389_i_i_fu_226_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<10> > i_V_fu_232_p2;
    sc_signal< sc_lv<10> > i_V_reg_752;
    sc_signal< sc_lv<1> > tmp_s_fu_238_p2;
    sc_signal< sc_lv<1> > tmp_112_not_fu_244_p2;
    sc_signal< sc_lv<1> > tmp_112_not_reg_761;
    sc_signal< sc_lv<1> > icmp_fu_260_p2;
    sc_signal< sc_lv<1> > tmp_9_fu_266_p2;
    sc_signal< sc_lv<1> > tmp_9_reg_771;
    sc_signal< sc_lv<1> > tmp_142_2_fu_272_p2;
    sc_signal< sc_lv<1> > tmp_142_2_reg_775;
    sc_signal< sc_lv<1> > tmp_1_fu_278_p2;
    sc_signal< sc_lv<1> > tmp_1_reg_779;
    sc_signal< sc_lv<2> > row_assign_7_1_t_fu_288_p2;
    sc_signal< sc_lv<2> > row_assign_7_1_t_reg_785;
    sc_signal< sc_lv<2> > row_assign_7_2_t_fu_294_p2;
    sc_signal< sc_lv<2> > row_assign_7_2_t_reg_790;
    sc_signal< sc_lv<1> > exitcond388_i_i_fu_304_p2;
    sc_signal< sc_lv<1> > exitcond388_i_i_reg_795;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_predicate_op94_read_state5;
    sc_signal< bool > ap_predicate_op102_read_state5;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter6;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_exitcond388_i_i_reg_795;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter2_exitcond388_i_i_reg_795;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter3_exitcond388_i_i_reg_795;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter4_exitcond388_i_i_reg_795;
    sc_signal< sc_lv<9> > j_V_fu_310_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > or_cond_i_i_i_fu_364_p2;
    sc_signal< sc_lv<9> > x_fu_386_p3;
    sc_signal< sc_lv<9> > x_reg_808;
    sc_signal< sc_lv<2> > tmp_50_fu_394_p1;
    sc_signal< sc_lv<2> > tmp_50_reg_813;
    sc_signal< sc_lv<2> > ap_reg_pp0_iter1_tmp_50_reg_813;
    sc_signal< sc_lv<1> > brmerge_fu_398_p2;
    sc_signal< sc_lv<1> > brmerge_reg_818;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_brmerge_reg_818;
    sc_signal< sc_lv<1> > or_cond_i_i_fu_403_p2;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_or_cond_i_i_reg_825;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter2_or_cond_i_i_reg_825;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter3_or_cond_i_i_reg_825;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter4_or_cond_i_i_reg_825;
    sc_signal< sc_lv<9> > k_buf_0_val_3_addr_reg_829;
    sc_signal< sc_lv<9> > k_buf_0_val_4_addr_reg_835;
    sc_signal< sc_lv<9> > k_buf_0_val_5_addr_reg_841;
    sc_signal< sc_lv<8> > col_buf_0_val_0_0_fu_440_p3;
    sc_signal< sc_lv<8> > col_buf_0_val_0_0_reg_847;
    sc_signal< sc_lv<8> > ap_reg_pp0_iter3_col_buf_0_val_0_0_reg_847;
    sc_signal< sc_lv<8> > ap_reg_pp0_iter4_col_buf_0_val_0_0_reg_847;
    sc_signal< sc_lv<8> > ap_reg_pp0_iter5_col_buf_0_val_0_0_reg_847;
    sc_signal< sc_lv<8> > src_kernel_win_0_va_8_fu_511_p3;
    sc_signal< sc_lv<8> > src_kernel_win_0_va_8_reg_854;
    sc_signal< sc_lv<8> > ap_reg_pp0_iter3_src_kernel_win_0_va_8_reg_854;
    sc_signal< sc_lv<8> > ap_reg_pp0_iter4_src_kernel_win_0_va_8_reg_854;
    sc_signal< sc_lv<8> > src_kernel_win_0_va_9_fu_529_p3;
    sc_signal< sc_lv<8> > src_kernel_win_0_va_9_reg_861;
    sc_signal< sc_lv<8> > temp_0_i_i_i_059_i_1_fu_561_p3;
    sc_signal< sc_lv<8> > temp_0_i_i_i_059_i_1_reg_868;
    sc_signal< sc_lv<8> > temp_0_i_i_i_059_i_3_fu_604_p3;
    sc_signal< sc_lv<8> > temp_0_i_i_i_059_i_3_reg_874;
    sc_signal< sc_lv<1> > tmp_188_1_2_fu_612_p2;
    sc_signal< sc_lv<1> > tmp_188_1_2_reg_879;
    sc_signal< sc_lv<8> > temp_0_i_i_i_059_i_6_fu_660_p3;
    sc_signal< sc_lv<8> > temp_0_i_i_i_059_i_6_reg_884;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_lv<9> > k_buf_0_val_3_address0;
    sc_signal< sc_logic > k_buf_0_val_3_ce0;
    sc_signal< sc_lv<8> > k_buf_0_val_3_q0;
    sc_signal< sc_logic > k_buf_0_val_3_ce1;
    sc_signal< sc_logic > k_buf_0_val_3_we1;
    sc_signal< sc_lv<9> > k_buf_0_val_4_address0;
    sc_signal< sc_logic > k_buf_0_val_4_ce0;
    sc_signal< sc_lv<8> > k_buf_0_val_4_q0;
    sc_signal< sc_logic > k_buf_0_val_4_ce1;
    sc_signal< sc_logic > k_buf_0_val_4_we1;
    sc_signal< sc_lv<8> > k_buf_0_val_4_d1;
    sc_signal< sc_lv<9> > k_buf_0_val_5_address0;
    sc_signal< sc_logic > k_buf_0_val_5_ce0;
    sc_signal< sc_lv<8> > k_buf_0_val_5_q0;
    sc_signal< sc_logic > k_buf_0_val_5_ce1;
    sc_signal< sc_logic > k_buf_0_val_5_we1;
    sc_signal< sc_lv<8> > k_buf_0_val_5_d1;
    sc_signal< sc_lv<10> > t_V_reg_204;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<64> > tmp_6_fu_408_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<8> > src_kernel_win_0_va_fu_96;
    sc_signal< sc_lv<8> > src_kernel_win_0_va_1_fu_100;
    sc_signal< sc_lv<8> > src_kernel_win_0_va_2_fu_104;
    sc_signal< sc_lv<8> > src_kernel_win_0_va_3_fu_108;
    sc_signal< sc_lv<8> > src_kernel_win_0_va_4_fu_112;
    sc_signal< sc_lv<8> > src_kernel_win_0_va_5_fu_116;
    sc_signal< sc_lv<8> > src_kernel_win_0_va_6_fu_120;
    sc_signal< sc_lv<8> > right_border_buf_0_s_fu_124;
    sc_signal< sc_lv<8> > col_buf_0_val_2_0_fu_478_p3;
    sc_signal< sc_lv<8> > right_border_buf_0_1_fu_128;
    sc_signal< sc_lv<8> > col_buf_0_val_1_0_fu_459_p3;
    sc_signal< sc_lv<9> > tmp_fu_250_p4;
    sc_signal< sc_lv<2> > tmp_46_fu_284_p1;
    sc_signal< sc_lv<8> > tmp_47_fu_316_p4;
    sc_signal< sc_lv<10> > t_V_5_cast_fu_300_p1;
    sc_signal< sc_lv<10> > ImagLoc_x_fu_332_p2;
    sc_signal< sc_lv<1> > tmp_48_fu_344_p3;
    sc_signal< sc_lv<1> > tmp_5_fu_358_p2;
    sc_signal< sc_lv<1> > rev_fu_352_p2;
    sc_signal< sc_lv<1> > tmp_49_fu_370_p3;
    sc_signal< sc_lv<9> > ImagLoc_x_cast_fu_338_p2;
    sc_signal< sc_lv<9> > p_assign_1_cast_cast_fu_378_p3;
    sc_signal< sc_lv<1> > icmp1_fu_326_p2;
    sc_signal< sc_lv<2> > col_assign_1_t_fu_423_p2;
    sc_signal< sc_lv<8> > tmp_26_fu_428_p5;
    sc_signal< sc_lv<8> > tmp_27_fu_447_p5;
    sc_signal< sc_lv<8> > tmp_28_fu_466_p5;
    sc_signal< sc_lv<8> > tmp_29_fu_500_p5;
    sc_signal< sc_lv<8> > tmp_30_fu_518_p5;
    sc_signal< sc_lv<1> > tmp_188_0_1_fu_542_p2;
    sc_signal< sc_lv<8> > temp_0_i_i_i_059_i_s_fu_548_p3;
    sc_signal< sc_lv<1> > tmp_188_0_2_fu_556_p2;
    sc_signal< sc_lv<1> > tmp_188_1_fu_586_p2;
    sc_signal< sc_lv<8> > temp_0_i_i_i_059_i_2_fu_591_p3;
    sc_signal< sc_lv<1> > tmp_188_1_1_fu_598_p2;
    sc_signal< sc_lv<8> > temp_0_i_i_i_059_i_4_fu_635_p3;
    sc_signal< sc_lv<1> > tmp_188_2_fu_640_p2;
    sc_signal< sc_lv<8> > temp_0_i_i_i_059_i_5_fu_646_p3;
    sc_signal< sc_lv<1> > tmp_188_2_1_fu_654_p2;
    sc_signal< sc_lv<1> > tmp_188_2_2_fu_680_p2;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_351;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_state10;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<10> ap_const_lv10_2D2;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<10> ap_const_lv10_2D0;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<9> ap_const_lv9_1E2;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<10> ap_const_lv10_3FF;
    static const sc_lv<9> ap_const_lv9_1FF;
    static const sc_lv<10> ap_const_lv10_1E0;
    static const sc_lv<9> ap_const_lv9_1DF;
    static const sc_lv<2> ap_const_lv2_3;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ImagLoc_x_cast_fu_338_p2();
    void thread_ImagLoc_x_fu_332_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage0_iter2();
    void thread_ap_block_state6_pp0_stage0_iter3();
    void thread_ap_block_state7_pp0_stage0_iter4();
    void thread_ap_block_state8_pp0_stage0_iter5();
    void thread_ap_block_state9_pp0_stage0_iter6();
    void thread_ap_condition_351();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_predicate_op102_read_state5();
    void thread_ap_predicate_op94_read_state5();
    void thread_ap_ready();
    void thread_brmerge_fu_398_p2();
    void thread_col_assign_1_t_fu_423_p2();
    void thread_col_buf_0_val_0_0_fu_440_p3();
    void thread_col_buf_0_val_1_0_fu_459_p3();
    void thread_col_buf_0_val_2_0_fu_478_p3();
    void thread_exitcond388_i_i_fu_304_p2();
    void thread_exitcond389_i_i_fu_226_p2();
    void thread_i_V_fu_232_p2();
    void thread_icmp1_fu_326_p2();
    void thread_icmp_fu_260_p2();
    void thread_internal_ap_ready();
    void thread_j_V_fu_310_p2();
    void thread_k_buf_0_val_3_address0();
    void thread_k_buf_0_val_3_ce0();
    void thread_k_buf_0_val_3_ce1();
    void thread_k_buf_0_val_3_we1();
    void thread_k_buf_0_val_4_address0();
    void thread_k_buf_0_val_4_ce0();
    void thread_k_buf_0_val_4_ce1();
    void thread_k_buf_0_val_4_d1();
    void thread_k_buf_0_val_4_we1();
    void thread_k_buf_0_val_5_address0();
    void thread_k_buf_0_val_5_ce0();
    void thread_k_buf_0_val_5_ce1();
    void thread_k_buf_0_val_5_d1();
    void thread_k_buf_0_val_5_we1();
    void thread_or_cond_i_i_fu_403_p2();
    void thread_or_cond_i_i_i_fu_364_p2();
    void thread_p_assign_1_cast_cast_fu_378_p3();
    void thread_p_dst_data_stream_V_blk_n();
    void thread_p_dst_data_stream_V_din();
    void thread_p_dst_data_stream_V_write();
    void thread_p_src_data_stream_V_blk_n();
    void thread_p_src_data_stream_V_read();
    void thread_real_start();
    void thread_rev_fu_352_p2();
    void thread_row_assign_7_1_t_fu_288_p2();
    void thread_row_assign_7_2_t_fu_294_p2();
    void thread_src_kernel_win_0_va_8_fu_511_p3();
    void thread_src_kernel_win_0_va_9_fu_529_p3();
    void thread_start_out();
    void thread_start_write();
    void thread_t_V_5_cast_fu_300_p1();
    void thread_temp_0_i_i_i_059_i_1_fu_561_p3();
    void thread_temp_0_i_i_i_059_i_2_fu_591_p3();
    void thread_temp_0_i_i_i_059_i_3_fu_604_p3();
    void thread_temp_0_i_i_i_059_i_4_fu_635_p3();
    void thread_temp_0_i_i_i_059_i_5_fu_646_p3();
    void thread_temp_0_i_i_i_059_i_6_fu_660_p3();
    void thread_temp_0_i_i_i_059_i_s_fu_548_p3();
    void thread_tmp_112_not_fu_244_p2();
    void thread_tmp_142_2_fu_272_p2();
    void thread_tmp_188_0_1_fu_542_p2();
    void thread_tmp_188_0_2_fu_556_p2();
    void thread_tmp_188_1_1_fu_598_p2();
    void thread_tmp_188_1_2_fu_612_p2();
    void thread_tmp_188_1_fu_586_p2();
    void thread_tmp_188_2_1_fu_654_p2();
    void thread_tmp_188_2_2_fu_680_p2();
    void thread_tmp_188_2_fu_640_p2();
    void thread_tmp_1_fu_278_p2();
    void thread_tmp_46_fu_284_p1();
    void thread_tmp_47_fu_316_p4();
    void thread_tmp_48_fu_344_p3();
    void thread_tmp_49_fu_370_p3();
    void thread_tmp_50_fu_394_p1();
    void thread_tmp_5_fu_358_p2();
    void thread_tmp_6_fu_408_p1();
    void thread_tmp_9_fu_266_p2();
    void thread_tmp_fu_250_p4();
    void thread_tmp_s_fu_238_p2();
    void thread_x_fu_386_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
