// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _ImgProcess_Top_HH_
#define _ImgProcess_Top_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "AXIvideo2Mat.h"
#include "YCrCb_GUASSIAN.h"
#include "Mat2AXIvideo_1.h"
#include "Mat2AXIvideo.h"
#include "fifo_w8_d1_A_x_x.h"
#include "fifo_w32_d1_A_x.h"

namespace ap_rtl {

struct ImgProcess_Top : public sc_module {
    // Port declarations 37
    sc_in< sc_lv<32> > input_r_TDATA;
    sc_in< sc_lv<4> > input_r_TKEEP;
    sc_in< sc_lv<4> > input_r_TSTRB;
    sc_in< sc_lv<1> > input_r_TUSER;
    sc_in< sc_lv<1> > input_r_TLAST;
    sc_in< sc_lv<1> > input_r_TID;
    sc_in< sc_lv<1> > input_r_TDEST;
    sc_out< sc_lv<32> > output_r_TDATA;
    sc_out< sc_lv<4> > output_r_TKEEP;
    sc_out< sc_lv<4> > output_r_TSTRB;
    sc_out< sc_lv<1> > output_r_TUSER;
    sc_out< sc_lv<1> > output_r_TLAST;
    sc_out< sc_lv<1> > output_r_TID;
    sc_out< sc_lv<1> > output_r_TDEST;
    sc_out< sc_lv<32> > nor_output_TDATA;
    sc_out< sc_lv<4> > nor_output_TKEEP;
    sc_out< sc_lv<4> > nor_output_TSTRB;
    sc_out< sc_lv<1> > nor_output_TUSER;
    sc_out< sc_lv<1> > nor_output_TLAST;
    sc_out< sc_lv<1> > nor_output_TID;
    sc_out< sc_lv<1> > nor_output_TDEST;
    sc_in< sc_lv<32> > rows;
    sc_in< sc_lv<32> > cols;
    sc_out< sc_lv<64> > threshold;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > input_r_TVALID;
    sc_out< sc_logic > input_r_TREADY;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > threshold_ap_vld;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > output_r_TVALID;
    sc_in< sc_logic > output_r_TREADY;
    sc_out< sc_logic > nor_output_TVALID;
    sc_in< sc_logic > nor_output_TREADY;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > ap_idle;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    ImgProcess_Top(sc_module_name name);
    SC_HAS_PROCESS(ImgProcess_Top);

    ~ImgProcess_Top();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    AXIvideo2Mat* AXIvideo2Mat_U0;
    YCrCb_GUASSIAN* YCrCb_GUASSIAN_U0;
    Mat2AXIvideo_1* Mat2AXIvideo_1_U0;
    Mat2AXIvideo* Mat2AXIvideo_U0;
    fifo_w8_d1_A_x_x* src_mat_data_stream_s_U;
    fifo_w8_d1_A_x_x* src_mat_data_stream_1_U;
    fifo_w8_d1_A_x_x* src_mat_data_stream_2_U;
    fifo_w8_d1_A_x_x* dst_mat_data_stream_s_U;
    fifo_w32_d1_A_x* nor_mat_data_stream_s_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > AXIvideo2Mat_U0_ap_start;
    sc_signal< sc_logic > AXIvideo2Mat_U0_ap_done;
    sc_signal< sc_logic > AXIvideo2Mat_U0_ap_continue;
    sc_signal< sc_logic > AXIvideo2Mat_U0_ap_idle;
    sc_signal< sc_logic > AXIvideo2Mat_U0_ap_ready;
    sc_signal< sc_logic > AXIvideo2Mat_U0_input_r_TREADY;
    sc_signal< sc_lv<8> > AXIvideo2Mat_U0_src_mat_data_stream_s_din;
    sc_signal< sc_logic > AXIvideo2Mat_U0_src_mat_data_stream_s_write;
    sc_signal< sc_lv<8> > AXIvideo2Mat_U0_src_mat_data_stream_1_din;
    sc_signal< sc_logic > AXIvideo2Mat_U0_src_mat_data_stream_1_write;
    sc_signal< sc_lv<8> > AXIvideo2Mat_U0_src_mat_data_stream_2_din;
    sc_signal< sc_logic > AXIvideo2Mat_U0_src_mat_data_stream_2_write;
    sc_signal< sc_logic > YCrCb_GUASSIAN_U0_src_data_stream_0_V_read;
    sc_signal< sc_logic > YCrCb_GUASSIAN_U0_src_data_stream_1_V_read;
    sc_signal< sc_logic > YCrCb_GUASSIAN_U0_src_data_stream_2_V_read;
    sc_signal< sc_lv<8> > YCrCb_GUASSIAN_U0_res_data_stream_V_din;
    sc_signal< sc_logic > YCrCb_GUASSIAN_U0_res_data_stream_V_write;
    sc_signal< sc_lv<32> > YCrCb_GUASSIAN_U0_nor_data_stream_V_din;
    sc_signal< sc_logic > YCrCb_GUASSIAN_U0_nor_data_stream_V_write;
    sc_signal< sc_lv<64> > YCrCb_GUASSIAN_U0_threshold;
    sc_signal< sc_logic > YCrCb_GUASSIAN_U0_ap_start;
    sc_signal< sc_logic > YCrCb_GUASSIAN_U0_ap_done;
    sc_signal< sc_logic > YCrCb_GUASSIAN_U0_threshold_ap_vld;
    sc_signal< sc_logic > YCrCb_GUASSIAN_U0_ap_ready;
    sc_signal< sc_logic > YCrCb_GUASSIAN_U0_ap_idle;
    sc_signal< sc_logic > YCrCb_GUASSIAN_U0_ap_continue;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > Mat2AXIvideo_1_U0_ap_start;
    sc_signal< sc_logic > Mat2AXIvideo_1_U0_ap_done;
    sc_signal< sc_logic > Mat2AXIvideo_1_U0_ap_continue;
    sc_signal< sc_logic > Mat2AXIvideo_1_U0_ap_idle;
    sc_signal< sc_logic > Mat2AXIvideo_1_U0_ap_ready;
    sc_signal< sc_logic > Mat2AXIvideo_1_U0_dst_mat_data_stream_s_read;
    sc_signal< sc_lv<32> > Mat2AXIvideo_1_U0_output_r_TDATA;
    sc_signal< sc_logic > Mat2AXIvideo_1_U0_output_r_TVALID;
    sc_signal< sc_lv<4> > Mat2AXIvideo_1_U0_output_r_TKEEP;
    sc_signal< sc_lv<4> > Mat2AXIvideo_1_U0_output_r_TSTRB;
    sc_signal< sc_lv<1> > Mat2AXIvideo_1_U0_output_r_TUSER;
    sc_signal< sc_lv<1> > Mat2AXIvideo_1_U0_output_r_TLAST;
    sc_signal< sc_lv<1> > Mat2AXIvideo_1_U0_output_r_TID;
    sc_signal< sc_lv<1> > Mat2AXIvideo_1_U0_output_r_TDEST;
    sc_signal< sc_logic > Mat2AXIvideo_U0_ap_start;
    sc_signal< sc_logic > Mat2AXIvideo_U0_ap_done;
    sc_signal< sc_logic > Mat2AXIvideo_U0_ap_continue;
    sc_signal< sc_logic > Mat2AXIvideo_U0_ap_idle;
    sc_signal< sc_logic > Mat2AXIvideo_U0_ap_ready;
    sc_signal< sc_logic > Mat2AXIvideo_U0_nor_mat_data_stream_s_read;
    sc_signal< sc_lv<32> > Mat2AXIvideo_U0_nor_output_TDATA;
    sc_signal< sc_logic > Mat2AXIvideo_U0_nor_output_TVALID;
    sc_signal< sc_lv<4> > Mat2AXIvideo_U0_nor_output_TKEEP;
    sc_signal< sc_lv<4> > Mat2AXIvideo_U0_nor_output_TSTRB;
    sc_signal< sc_lv<1> > Mat2AXIvideo_U0_nor_output_TUSER;
    sc_signal< sc_lv<1> > Mat2AXIvideo_U0_nor_output_TLAST;
    sc_signal< sc_lv<1> > Mat2AXIvideo_U0_nor_output_TID;
    sc_signal< sc_lv<1> > Mat2AXIvideo_U0_nor_output_TDEST;
    sc_signal< sc_logic > src_mat_data_stream_s_full_n;
    sc_signal< sc_lv<8> > src_mat_data_stream_s_dout;
    sc_signal< sc_logic > src_mat_data_stream_s_empty_n;
    sc_signal< sc_logic > src_mat_data_stream_1_full_n;
    sc_signal< sc_lv<8> > src_mat_data_stream_1_dout;
    sc_signal< sc_logic > src_mat_data_stream_1_empty_n;
    sc_signal< sc_logic > src_mat_data_stream_2_full_n;
    sc_signal< sc_lv<8> > src_mat_data_stream_2_dout;
    sc_signal< sc_logic > src_mat_data_stream_2_empty_n;
    sc_signal< sc_logic > dst_mat_data_stream_s_full_n;
    sc_signal< sc_lv<8> > dst_mat_data_stream_s_dout;
    sc_signal< sc_logic > dst_mat_data_stream_s_empty_n;
    sc_signal< sc_logic > nor_mat_data_stream_s_full_n;
    sc_signal< sc_lv<32> > nor_mat_data_stream_s_dout;
    sc_signal< sc_logic > nor_mat_data_stream_s_empty_n;
    sc_signal< sc_logic > ap_sync_done;
    sc_signal< sc_logic > ap_sync_ready;
    sc_signal< sc_logic > AXIvideo2Mat_U0_start_full_n;
    sc_signal< sc_logic > AXIvideo2Mat_U0_start_write;
    sc_signal< sc_logic > YCrCb_GUASSIAN_U0_start_full_n;
    sc_signal< sc_logic > YCrCb_GUASSIAN_U0_start_write;
    sc_signal< sc_logic > Mat2AXIvideo_1_U0_start_full_n;
    sc_signal< sc_logic > Mat2AXIvideo_1_U0_start_write;
    sc_signal< sc_logic > Mat2AXIvideo_U0_start_full_n;
    sc_signal< sc_logic > Mat2AXIvideo_U0_start_write;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_AXIvideo2Mat_U0_ap_continue();
    void thread_AXIvideo2Mat_U0_ap_start();
    void thread_AXIvideo2Mat_U0_start_full_n();
    void thread_AXIvideo2Mat_U0_start_write();
    void thread_Mat2AXIvideo_1_U0_ap_continue();
    void thread_Mat2AXIvideo_1_U0_ap_start();
    void thread_Mat2AXIvideo_1_U0_start_full_n();
    void thread_Mat2AXIvideo_1_U0_start_write();
    void thread_Mat2AXIvideo_U0_ap_continue();
    void thread_Mat2AXIvideo_U0_ap_start();
    void thread_Mat2AXIvideo_U0_start_full_n();
    void thread_Mat2AXIvideo_U0_start_write();
    void thread_YCrCb_GUASSIAN_U0_ap_continue();
    void thread_YCrCb_GUASSIAN_U0_ap_start();
    void thread_YCrCb_GUASSIAN_U0_start_full_n();
    void thread_YCrCb_GUASSIAN_U0_start_write();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sync_continue();
    void thread_ap_sync_done();
    void thread_ap_sync_ready();
    void thread_input_r_TREADY();
    void thread_nor_output_TDATA();
    void thread_nor_output_TDEST();
    void thread_nor_output_TID();
    void thread_nor_output_TKEEP();
    void thread_nor_output_TLAST();
    void thread_nor_output_TSTRB();
    void thread_nor_output_TUSER();
    void thread_nor_output_TVALID();
    void thread_output_r_TDATA();
    void thread_output_r_TDEST();
    void thread_output_r_TID();
    void thread_output_r_TKEEP();
    void thread_output_r_TLAST();
    void thread_output_r_TSTRB();
    void thread_output_r_TUSER();
    void thread_output_r_TVALID();
    void thread_threshold();
    void thread_threshold_ap_vld();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
