// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _normalized_Loop_loop_HH_
#define _normalized_Loop_loop_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "ImgProcess_Top_fpfYi.h"
#include "ImgProcess_Top_fpkbM.h"
#include "ImgProcess_Top_dslbW.h"
#include "ImgProcess_Top_dmhbi.h"
#include "ImgProcess_Top_ddmb6.h"

namespace ap_rtl {

struct normalized_Loop_loop : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<64> > max_dout;
    sc_in< sc_logic > max_empty_n;
    sc_out< sc_logic > max_read;
    sc_in< sc_lv<64> > min_dout;
    sc_in< sc_logic > min_empty_n;
    sc_out< sc_logic > min_read;
    sc_in< sc_lv<32> > sim_data_stream_V_dout;
    sc_in< sc_logic > sim_data_stream_V_empty_n;
    sc_out< sc_logic > sim_data_stream_V_read;
    sc_out< sc_lv<32> > nor_data_stream_V_din;
    sc_in< sc_logic > nor_data_stream_V_full_n;
    sc_out< sc_logic > nor_data_stream_V_write;
    sc_out< sc_lv<8> > gray_data_stream_V_din;
    sc_in< sc_logic > gray_data_stream_V_full_n;
    sc_out< sc_logic > gray_data_stream_V_write;
    sc_signal< sc_lv<64> > ap_var_for_const0;


    // Module declarations
    normalized_Loop_loop(sc_module_name name);
    SC_HAS_PROCESS(normalized_Loop_loop);

    ~normalized_Loop_loop();

    sc_trace_file* mVcdFile;

    ImgProcess_Top_fpfYi<1,1,64,32>* ImgProcess_Top_fpfYi_U75;
    ImgProcess_Top_fpkbM<1,1,32,64>* ImgProcess_Top_fpkbM_U76;
    ImgProcess_Top_fpkbM<1,1,32,64>* ImgProcess_Top_fpkbM_U77;
    ImgProcess_Top_dslbW<1,5,64,64,64>* ImgProcess_Top_dslbW_U78;
    ImgProcess_Top_dmhbi<1,6,64,64,64>* ImgProcess_Top_dmhbi_U79;
    ImgProcess_Top_ddmb6<1,31,64,64,64>* ImgProcess_Top_ddmb6_U80;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > max_blk_n;
    sc_signal< sc_logic > min_blk_n;
    sc_signal< sc_logic > sim_data_stream_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_332;
    sc_signal< sc_logic > nor_data_stream_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter47;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter46_exitcond_flatten_reg_332;
    sc_signal< sc_logic > gray_data_stream_V_blk_n;
    sc_signal< sc_lv<19> > indvar_flatten_reg_130;
    sc_signal< sc_lv<64> > max_read_reg_317;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<64> > min_read_reg_322;
    sc_signal< sc_lv<64> > grp_fu_151_p2;
    sc_signal< sc_lv<64> > tmp_i_reg_327;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_164_p2;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter6;
    sc_signal< bool > ap_block_state14_pp0_stage0_iter7;
    sc_signal< bool > ap_block_state15_pp0_stage0_iter8;
    sc_signal< bool > ap_block_state16_pp0_stage0_iter9;
    sc_signal< bool > ap_block_state17_pp0_stage0_iter10;
    sc_signal< bool > ap_block_state18_pp0_stage0_iter11;
    sc_signal< bool > ap_block_state19_pp0_stage0_iter12;
    sc_signal< bool > ap_block_state20_pp0_stage0_iter13;
    sc_signal< bool > ap_block_state21_pp0_stage0_iter14;
    sc_signal< bool > ap_block_state22_pp0_stage0_iter15;
    sc_signal< bool > ap_block_state23_pp0_stage0_iter16;
    sc_signal< bool > ap_block_state24_pp0_stage0_iter17;
    sc_signal< bool > ap_block_state25_pp0_stage0_iter18;
    sc_signal< bool > ap_block_state26_pp0_stage0_iter19;
    sc_signal< bool > ap_block_state27_pp0_stage0_iter20;
    sc_signal< bool > ap_block_state28_pp0_stage0_iter21;
    sc_signal< bool > ap_block_state29_pp0_stage0_iter22;
    sc_signal< bool > ap_block_state30_pp0_stage0_iter23;
    sc_signal< bool > ap_block_state31_pp0_stage0_iter24;
    sc_signal< bool > ap_block_state32_pp0_stage0_iter25;
    sc_signal< bool > ap_block_state33_pp0_stage0_iter26;
    sc_signal< bool > ap_block_state34_pp0_stage0_iter27;
    sc_signal< bool > ap_block_state35_pp0_stage0_iter28;
    sc_signal< bool > ap_block_state36_pp0_stage0_iter29;
    sc_signal< bool > ap_block_state37_pp0_stage0_iter30;
    sc_signal< bool > ap_block_state38_pp0_stage0_iter31;
    sc_signal< bool > ap_block_state39_pp0_stage0_iter32;
    sc_signal< bool > ap_block_state40_pp0_stage0_iter33;
    sc_signal< bool > ap_block_state41_pp0_stage0_iter34;
    sc_signal< bool > ap_block_state42_pp0_stage0_iter35;
    sc_signal< bool > ap_block_state43_pp0_stage0_iter36;
    sc_signal< bool > ap_block_state44_pp0_stage0_iter37;
    sc_signal< bool > ap_block_state45_pp0_stage0_iter38;
    sc_signal< bool > ap_block_state46_pp0_stage0_iter39;
    sc_signal< bool > ap_block_state47_pp0_stage0_iter40;
    sc_signal< bool > ap_block_state48_pp0_stage0_iter41;
    sc_signal< bool > ap_block_state49_pp0_stage0_iter42;
    sc_signal< bool > ap_block_state50_pp0_stage0_iter43;
    sc_signal< bool > ap_block_state51_pp0_stage0_iter44;
    sc_signal< bool > ap_block_state52_pp0_stage0_iter45;
    sc_signal< bool > ap_block_state53_pp0_stage0_iter46;
    sc_signal< bool > ap_block_state54_pp0_stage0_iter47;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter2_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter3_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter4_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter5_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter6_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter7_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter8_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter9_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter10_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter11_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter12_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter13_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter14_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter15_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter16_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter17_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter18_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter19_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter20_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter21_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter22_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter23_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter24_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter25_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter26_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter27_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter28_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter29_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter30_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter31_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter32_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter33_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter34_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter35_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter36_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter37_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter38_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter39_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter40_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter41_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter42_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter43_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter44_exitcond_flatten_reg_332;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter45_exitcond_flatten_reg_332;
    sc_signal< sc_lv<19> > indvar_flatten_next_fu_170_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<64> > tmp_i_i_fu_144_p1;
    sc_signal< sc_lv<64> > tmp_i_i_reg_341;
    sc_signal< sc_lv<64> > tmp_26_i_i_reg_346;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_lv<64> > grp_fu_160_p2;
    sc_signal< sc_lv<64> > tmp_27_i_i_reg_351;
    sc_signal< sc_lv<32> > tmp_1_fu_141_p1;
    sc_signal< sc_lv<32> > tmp_1_reg_356;
    sc_signal< sc_lv<32> > ap_reg_pp0_iter39_tmp_1_reg_356;
    sc_signal< sc_lv<32> > ap_reg_pp0_iter40_tmp_1_reg_356;
    sc_signal< sc_lv<32> > ap_reg_pp0_iter41_tmp_1_reg_356;
    sc_signal< sc_lv<32> > ap_reg_pp0_iter42_tmp_1_reg_356;
    sc_signal< sc_lv<32> > ap_reg_pp0_iter43_tmp_1_reg_356;
    sc_signal< sc_lv<32> > ap_reg_pp0_iter44_tmp_1_reg_356;
    sc_signal< sc_lv<32> > ap_reg_pp0_iter45_tmp_1_reg_356;
    sc_signal< sc_lv<32> > ap_reg_pp0_iter46_tmp_1_reg_356;
    sc_signal< sc_lv<64> > tmp_29_i_i_fu_148_p1;
    sc_signal< sc_lv<64> > tmp_29_i_i_reg_362;
    sc_signal< sc_lv<64> > grp_fu_155_p2;
    sc_signal< sc_lv<64> > x_assign_reg_367;
    sc_signal< sc_lv<1> > p_Result_s_reg_372;
    sc_signal< sc_lv<8> > tmp_7_fu_297_p3;
    sc_signal< sc_lv<8> > tmp_7_reg_377;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state7;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter7;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter8;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter9;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter10;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter11;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter12;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter13;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter14;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter15;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter16;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter17;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter18;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter19;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter20;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter21;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter22;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter23;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter24;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter25;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter26;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter27;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter28;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter29;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter30;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter31;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter32;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter33;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter34;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter35;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter36;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter37;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter38;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter39;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter40;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter41;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter42;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter43;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter44;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter45;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter46;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<64> > grp_fu_151_p0;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > p_Val2_s_fu_176_p1;
    sc_signal< sc_lv<52> > loc_V_1_fu_197_p1;
    sc_signal< sc_lv<54> > tmp_i_i_i_fu_201_p4;
    sc_signal< sc_lv<11> > loc_V_fu_187_p4;
    sc_signal< sc_lv<12> > tmp_i_i_i_cast_i_fu_215_p1;
    sc_signal< sc_lv<12> > sh_assign_fu_219_p2;
    sc_signal< sc_lv<11> > tmp_59_i_i_i_fu_233_p2;
    sc_signal< sc_lv<1> > isNeg_fu_225_p3;
    sc_signal< sc_lv<12> > tmp_59_i_i_cast_i_fu_239_p1;
    sc_signal< sc_lv<12> > sh_assign_1_fu_243_p3;
    sc_signal< sc_lv<32> > sh_assign_1_i_i_cast_fu_251_p1;
    sc_signal< sc_lv<54> > tmp_60_i_i_cast_i_fu_259_p1;
    sc_signal< sc_lv<137> > tmp_i_i_cast_i_fu_211_p1;
    sc_signal< sc_lv<137> > tmp_60_i_i_i_fu_255_p1;
    sc_signal< sc_lv<54> > tmp_61_i_i_i_fu_263_p2;
    sc_signal< sc_lv<1> > tmp_19_fu_275_p3;
    sc_signal< sc_lv<137> > tmp_62_i_i_i_fu_269_p2;
    sc_signal< sc_lv<8> > tmp_5_fu_283_p1;
    sc_signal< sc_lv<8> > tmp_6_fu_287_p4;
    sc_signal< sc_lv<8> > p_Val2_i_i_i_fu_305_p2;
    sc_signal< sc_logic > grp_fu_151_ce;
    sc_signal< sc_logic > ap_CS_fsm_state55;
    sc_signal< sc_logic > grp_fu_155_ce;
    sc_signal< sc_logic > grp_fu_160_ce;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_pp0_stage0;
    static const sc_lv<8> ap_ST_fsm_state55;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<19> ap_const_lv19_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<64> ap_const_lv64_406FE00000000000;
    static const sc_lv<19> ap_const_lv19_54600;
    static const sc_lv<19> ap_const_lv19_1;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_34;
    static const sc_lv<32> ap_const_lv32_3E;
    static const sc_lv<12> ap_const_lv12_C01;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<11> ap_const_lv11_3FF;
    static const sc_lv<32> ap_const_lv32_35;
    static const sc_lv<32> ap_const_lv32_3C;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_7;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state55();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state10_pp0_stage0_iter3();
    void thread_ap_block_state11_pp0_stage0_iter4();
    void thread_ap_block_state12_pp0_stage0_iter5();
    void thread_ap_block_state13_pp0_stage0_iter6();
    void thread_ap_block_state14_pp0_stage0_iter7();
    void thread_ap_block_state15_pp0_stage0_iter8();
    void thread_ap_block_state16_pp0_stage0_iter9();
    void thread_ap_block_state17_pp0_stage0_iter10();
    void thread_ap_block_state18_pp0_stage0_iter11();
    void thread_ap_block_state19_pp0_stage0_iter12();
    void thread_ap_block_state20_pp0_stage0_iter13();
    void thread_ap_block_state21_pp0_stage0_iter14();
    void thread_ap_block_state22_pp0_stage0_iter15();
    void thread_ap_block_state23_pp0_stage0_iter16();
    void thread_ap_block_state24_pp0_stage0_iter17();
    void thread_ap_block_state25_pp0_stage0_iter18();
    void thread_ap_block_state26_pp0_stage0_iter19();
    void thread_ap_block_state27_pp0_stage0_iter20();
    void thread_ap_block_state28_pp0_stage0_iter21();
    void thread_ap_block_state29_pp0_stage0_iter22();
    void thread_ap_block_state30_pp0_stage0_iter23();
    void thread_ap_block_state31_pp0_stage0_iter24();
    void thread_ap_block_state32_pp0_stage0_iter25();
    void thread_ap_block_state33_pp0_stage0_iter26();
    void thread_ap_block_state34_pp0_stage0_iter27();
    void thread_ap_block_state35_pp0_stage0_iter28();
    void thread_ap_block_state36_pp0_stage0_iter29();
    void thread_ap_block_state37_pp0_stage0_iter30();
    void thread_ap_block_state38_pp0_stage0_iter31();
    void thread_ap_block_state39_pp0_stage0_iter32();
    void thread_ap_block_state40_pp0_stage0_iter33();
    void thread_ap_block_state41_pp0_stage0_iter34();
    void thread_ap_block_state42_pp0_stage0_iter35();
    void thread_ap_block_state43_pp0_stage0_iter36();
    void thread_ap_block_state44_pp0_stage0_iter37();
    void thread_ap_block_state45_pp0_stage0_iter38();
    void thread_ap_block_state46_pp0_stage0_iter39();
    void thread_ap_block_state47_pp0_stage0_iter40();
    void thread_ap_block_state48_pp0_stage0_iter41();
    void thread_ap_block_state49_pp0_stage0_iter42();
    void thread_ap_block_state50_pp0_stage0_iter43();
    void thread_ap_block_state51_pp0_stage0_iter44();
    void thread_ap_block_state52_pp0_stage0_iter45();
    void thread_ap_block_state53_pp0_stage0_iter46();
    void thread_ap_block_state54_pp0_stage0_iter47();
    void thread_ap_block_state7_pp0_stage0_iter0();
    void thread_ap_block_state8_pp0_stage0_iter1();
    void thread_ap_block_state9_pp0_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter0_state7();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_exitcond_flatten_fu_164_p2();
    void thread_gray_data_stream_V_blk_n();
    void thread_gray_data_stream_V_din();
    void thread_gray_data_stream_V_write();
    void thread_grp_fu_151_ce();
    void thread_grp_fu_151_p0();
    void thread_grp_fu_155_ce();
    void thread_grp_fu_160_ce();
    void thread_indvar_flatten_next_fu_170_p2();
    void thread_isNeg_fu_225_p3();
    void thread_loc_V_1_fu_197_p1();
    void thread_loc_V_fu_187_p4();
    void thread_max_blk_n();
    void thread_max_read();
    void thread_min_blk_n();
    void thread_min_read();
    void thread_nor_data_stream_V_blk_n();
    void thread_nor_data_stream_V_din();
    void thread_nor_data_stream_V_write();
    void thread_p_Val2_i_i_i_fu_305_p2();
    void thread_p_Val2_s_fu_176_p1();
    void thread_sh_assign_1_fu_243_p3();
    void thread_sh_assign_1_i_i_cast_fu_251_p1();
    void thread_sh_assign_fu_219_p2();
    void thread_sim_data_stream_V_blk_n();
    void thread_sim_data_stream_V_read();
    void thread_tmp_19_fu_275_p3();
    void thread_tmp_59_i_i_cast_i_fu_239_p1();
    void thread_tmp_59_i_i_i_fu_233_p2();
    void thread_tmp_5_fu_283_p1();
    void thread_tmp_60_i_i_cast_i_fu_259_p1();
    void thread_tmp_60_i_i_i_fu_255_p1();
    void thread_tmp_61_i_i_i_fu_263_p2();
    void thread_tmp_62_i_i_i_fu_269_p2();
    void thread_tmp_6_fu_287_p4();
    void thread_tmp_7_fu_297_p3();
    void thread_tmp_i_i_cast_i_fu_211_p1();
    void thread_tmp_i_i_i_cast_i_fu_215_p1();
    void thread_tmp_i_i_i_fu_201_p4();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
