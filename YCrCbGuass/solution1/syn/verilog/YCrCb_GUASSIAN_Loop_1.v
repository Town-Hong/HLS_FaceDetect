// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module YCrCb_GUASSIAN_Loop_1 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        Cr_Img_data_stream_0_V_dout,
        Cr_Img_data_stream_0_V_empty_n,
        Cr_Img_data_stream_0_V_read,
        Cb_Img_data_stream_0_V_dout,
        Cb_Img_data_stream_0_V_empty_n,
        Cb_Img_data_stream_0_V_read,
        Sim_data_stream_0_V_din,
        Sim_data_stream_0_V_full_n,
        Sim_data_stream_0_V_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state63 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [7:0] Cr_Img_data_stream_0_V_dout;
input   Cr_Img_data_stream_0_V_empty_n;
output   Cr_Img_data_stream_0_V_read;
input  [7:0] Cb_Img_data_stream_0_V_dout;
input   Cb_Img_data_stream_0_V_empty_n;
output   Cb_Img_data_stream_0_V_read;
output  [31:0] Sim_data_stream_0_V_din;
input   Sim_data_stream_0_V_full_n;
output   Sim_data_stream_0_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg Cr_Img_data_stream_0_V_read;
reg Cb_Img_data_stream_0_V_read;
reg Sim_data_stream_0_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    Cr_Img_data_stream_0_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_flatten_reg_185;
reg    Cb_Img_data_stream_0_V_blk_n;
reg    Sim_data_stream_0_V_blk_n;
reg    ap_enable_reg_pp0_iter60;
reg   [0:0] ap_reg_pp0_iter59_exitcond_flatten_reg_185;
reg   [18:0] indvar_flatten_reg_85;
wire   [0:0] exitcond_flatten_fu_165_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_state14_pp0_stage0_iter12;
wire    ap_block_state15_pp0_stage0_iter13;
wire    ap_block_state16_pp0_stage0_iter14;
wire    ap_block_state17_pp0_stage0_iter15;
wire    ap_block_state18_pp0_stage0_iter16;
wire    ap_block_state19_pp0_stage0_iter17;
wire    ap_block_state20_pp0_stage0_iter18;
wire    ap_block_state21_pp0_stage0_iter19;
wire    ap_block_state22_pp0_stage0_iter20;
wire    ap_block_state23_pp0_stage0_iter21;
wire    ap_block_state24_pp0_stage0_iter22;
wire    ap_block_state25_pp0_stage0_iter23;
wire    ap_block_state26_pp0_stage0_iter24;
wire    ap_block_state27_pp0_stage0_iter25;
wire    ap_block_state28_pp0_stage0_iter26;
wire    ap_block_state29_pp0_stage0_iter27;
wire    ap_block_state30_pp0_stage0_iter28;
wire    ap_block_state31_pp0_stage0_iter29;
wire    ap_block_state32_pp0_stage0_iter30;
wire    ap_block_state33_pp0_stage0_iter31;
wire    ap_block_state34_pp0_stage0_iter32;
wire    ap_block_state35_pp0_stage0_iter33;
wire    ap_block_state36_pp0_stage0_iter34;
wire    ap_block_state37_pp0_stage0_iter35;
wire    ap_block_state38_pp0_stage0_iter36;
wire    ap_block_state39_pp0_stage0_iter37;
wire    ap_block_state40_pp0_stage0_iter38;
wire    ap_block_state41_pp0_stage0_iter39;
wire    ap_block_state42_pp0_stage0_iter40;
wire    ap_block_state43_pp0_stage0_iter41;
wire    ap_block_state44_pp0_stage0_iter42;
wire    ap_block_state45_pp0_stage0_iter43;
wire    ap_block_state46_pp0_stage0_iter44;
wire    ap_block_state47_pp0_stage0_iter45;
wire    ap_block_state48_pp0_stage0_iter46;
wire    ap_block_state49_pp0_stage0_iter47;
wire    ap_block_state50_pp0_stage0_iter48;
wire    ap_block_state51_pp0_stage0_iter49;
wire    ap_block_state52_pp0_stage0_iter50;
wire    ap_block_state53_pp0_stage0_iter51;
wire    ap_block_state54_pp0_stage0_iter52;
wire    ap_block_state55_pp0_stage0_iter53;
wire    ap_block_state56_pp0_stage0_iter54;
wire    ap_block_state57_pp0_stage0_iter55;
wire    ap_block_state58_pp0_stage0_iter56;
wire    ap_block_state59_pp0_stage0_iter57;
wire    ap_block_state60_pp0_stage0_iter58;
wire    ap_block_state61_pp0_stage0_iter59;
reg    ap_block_state62_pp0_stage0_iter60;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] ap_reg_pp0_iter1_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter2_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter3_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter4_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter5_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter6_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter7_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter8_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter9_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter10_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter11_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter12_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter13_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter14_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter15_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter16_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter17_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter18_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter19_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter20_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter21_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter22_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter23_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter24_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter25_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter26_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter27_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter28_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter29_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter30_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter31_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter32_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter33_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter34_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter35_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter36_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter37_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter38_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter39_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter40_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter41_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter42_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter43_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter44_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter45_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter46_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter47_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter48_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter49_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter50_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter51_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter52_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter53_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter54_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter55_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter56_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter57_exitcond_flatten_reg_185;
reg   [0:0] ap_reg_pp0_iter58_exitcond_flatten_reg_185;
wire   [18:0] indvar_flatten_next_fu_171_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [7:0] tmp_reg_194;
reg   [7:0] tmp_26_reg_199;
wire   [63:0] grp_fu_154_p1;
reg   [63:0] cr_reg_214;
wire   [63:0] grp_fu_157_p1;
reg   [63:0] cb_reg_219;
wire   [63:0] grp_fu_99_p2;
reg   [63:0] tmp_s_reg_224;
reg   [63:0] ap_reg_pp0_iter13_tmp_s_reg_224;
reg   [63:0] ap_reg_pp0_iter14_tmp_s_reg_224;
reg   [63:0] ap_reg_pp0_iter15_tmp_s_reg_224;
reg   [63:0] ap_reg_pp0_iter16_tmp_s_reg_224;
reg   [63:0] ap_reg_pp0_iter17_tmp_s_reg_224;
reg   [63:0] ap_reg_pp0_iter18_tmp_s_reg_224;
reg   [63:0] ap_reg_pp0_iter19_tmp_s_reg_224;
reg   [63:0] ap_reg_pp0_iter20_tmp_s_reg_224;
reg   [63:0] ap_reg_pp0_iter21_tmp_s_reg_224;
reg   [63:0] ap_reg_pp0_iter22_tmp_s_reg_224;
reg   [63:0] ap_reg_pp0_iter23_tmp_s_reg_224;
wire   [63:0] grp_fu_104_p2;
reg   [63:0] tmp_17_reg_231;
reg   [63:0] ap_reg_pp0_iter13_tmp_17_reg_231;
reg   [63:0] ap_reg_pp0_iter14_tmp_17_reg_231;
reg   [63:0] ap_reg_pp0_iter15_tmp_17_reg_231;
reg   [63:0] ap_reg_pp0_iter16_tmp_17_reg_231;
reg   [63:0] ap_reg_pp0_iter17_tmp_17_reg_231;
reg   [63:0] ap_reg_pp0_iter18_tmp_17_reg_231;
reg   [63:0] ap_reg_pp0_iter19_tmp_17_reg_231;
reg   [63:0] ap_reg_pp0_iter20_tmp_17_reg_231;
reg   [63:0] ap_reg_pp0_iter21_tmp_17_reg_231;
reg   [63:0] ap_reg_pp0_iter22_tmp_17_reg_231;
reg   [63:0] ap_reg_pp0_iter23_tmp_17_reg_231;
wire   [63:0] grp_fu_121_p2;
reg   [63:0] tmp_16_reg_238;
wire   [63:0] grp_fu_126_p2;
reg   [63:0] tmp_18_reg_243;
wire   [63:0] grp_fu_131_p2;
reg   [63:0] tmp_21_reg_248;
wire   [63:0] grp_fu_136_p2;
reg   [63:0] tmp_22_reg_253;
wire   [63:0] grp_fu_109_p2;
reg   [63:0] tmp_19_reg_258;
wire   [63:0] grp_fu_113_p2;
reg   [63:0] tmp_23_reg_263;
wire   [63:0] grp_fu_141_p2;
reg   [63:0] tmp_20_reg_268;
wire   [63:0] grp_fu_145_p2;
reg   [63:0] tmp_24_reg_273;
wire   [63:0] grp_fu_117_p2;
reg   [63:0] tmp_25_reg_278;
wire   [63:0] grp_fu_149_p2;
reg   [63:0] res_reg_283;
wire   [63:0] grp_fu_160_p2;
reg   [63:0] tmp_11_reg_288;
wire   [31:0] tmp_10_fu_96_p1;
reg   [31:0] tmp_10_reg_293;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_enable_reg_pp0_iter48;
reg    ap_enable_reg_pp0_iter49;
reg    ap_enable_reg_pp0_iter50;
reg    ap_enable_reg_pp0_iter51;
reg    ap_enable_reg_pp0_iter52;
reg    ap_enable_reg_pp0_iter53;
reg    ap_enable_reg_pp0_iter54;
reg    ap_enable_reg_pp0_iter55;
reg    ap_enable_reg_pp0_iter56;
reg    ap_enable_reg_pp0_iter57;
reg    ap_enable_reg_pp0_iter58;
reg    ap_enable_reg_pp0_iter59;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] grp_fu_154_p0;
wire   [31:0] grp_fu_157_p0;
reg    grp_fu_99_ce;
reg    grp_fu_104_ce;
reg    grp_fu_109_ce;
reg    grp_fu_113_ce;
reg    grp_fu_117_ce;
reg    grp_fu_121_ce;
reg    grp_fu_126_ce;
reg    grp_fu_131_ce;
reg    grp_fu_136_ce;
reg    grp_fu_141_ce;
reg    grp_fu_145_ce;
reg    grp_fu_149_ce;
reg    grp_fu_154_ce;
reg    grp_fu_157_ce;
reg    grp_fu_160_ce;
wire    ap_CS_fsm_state63;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter60 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter48 = 1'b0;
#0 ap_enable_reg_pp0_iter49 = 1'b0;
#0 ap_enable_reg_pp0_iter50 = 1'b0;
#0 ap_enable_reg_pp0_iter51 = 1'b0;
#0 ap_enable_reg_pp0_iter52 = 1'b0;
#0 ap_enable_reg_pp0_iter53 = 1'b0;
#0 ap_enable_reg_pp0_iter54 = 1'b0;
#0 ap_enable_reg_pp0_iter55 = 1'b0;
#0 ap_enable_reg_pp0_iter56 = 1'b0;
#0 ap_enable_reg_pp0_iter57 = 1'b0;
#0 ap_enable_reg_pp0_iter58 = 1'b0;
#0 ap_enable_reg_pp0_iter59 = 1'b0;
end

ImgProcess_Top_fpfYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
ImgProcess_Top_fpfYi_U40(
    .din0(tmp_11_reg_288),
    .dout(tmp_10_fu_96_p1)
);

ImgProcess_Top_dag8j #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ImgProcess_Top_dag8j_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(cr_reg_214),
    .din1(64'd13861335968010419464),
    .ce(grp_fu_99_ce),
    .dout(grp_fu_99_p2)
);

ImgProcess_Top_dag8j #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ImgProcess_Top_dag8j_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(cb_reg_219),
    .din1(64'd13863084515194806521),
    .ce(grp_fu_104_ce),
    .dout(grp_fu_104_p2)
);

ImgProcess_Top_dag8j #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ImgProcess_Top_dag8j_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_16_reg_238),
    .din1(tmp_18_reg_243),
    .ce(grp_fu_109_ce),
    .dout(grp_fu_109_p2)
);

ImgProcess_Top_dag8j #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ImgProcess_Top_dag8j_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_21_reg_248),
    .din1(tmp_22_reg_253),
    .ce(grp_fu_113_ce),
    .dout(grp_fu_113_p2)
);

ImgProcess_Top_dag8j #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ImgProcess_Top_dag8j_U45(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_20_reg_268),
    .din1(tmp_24_reg_273),
    .ce(grp_fu_117_ce),
    .dout(grp_fu_117_p2)
);

ImgProcess_Top_dmhbi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ImgProcess_Top_dmhbi_U46(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_s_reg_224),
    .din1(64'd4639838093585262261),
    .ce(grp_fu_121_ce),
    .dout(grp_fu_121_p2)
);

ImgProcess_Top_dmhbi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ImgProcess_Top_dmhbi_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_17_reg_231),
    .din1(64'd13846397556193929200),
    .ce(grp_fu_126_ce),
    .dout(grp_fu_126_p2)
);

ImgProcess_Top_dmhbi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ImgProcess_Top_dmhbi_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_s_reg_224),
    .din1(64'd13846397556193929200),
    .ce(grp_fu_131_ce),
    .dout(grp_fu_131_p2)
);

ImgProcess_Top_dmhbi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ImgProcess_Top_dmhbi_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_17_reg_231),
    .din1(64'd4643975726484787980),
    .ce(grp_fu_136_ce),
    .dout(grp_fu_136_p2)
);

ImgProcess_Top_dmhbi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ImgProcess_Top_dmhbi_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_19_reg_258),
    .din1(ap_reg_pp0_iter23_tmp_s_reg_224),
    .ce(grp_fu_141_ce),
    .dout(grp_fu_141_p2)
);

ImgProcess_Top_dmhbi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ImgProcess_Top_dmhbi_U51(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_23_reg_263),
    .din1(ap_reg_pp0_iter23_tmp_17_reg_231),
    .ce(grp_fu_145_ce),
    .dout(grp_fu_145_p2)
);

ImgProcess_Top_dmhbi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ImgProcess_Top_dmhbi_U52(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_25_reg_278),
    .din1(64'd13755663698827166883),
    .ce(grp_fu_149_ce),
    .dout(grp_fu_149_p2)
);

ImgProcess_Top_uiibs #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
ImgProcess_Top_uiibs_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_154_p0),
    .ce(grp_fu_154_ce),
    .dout(grp_fu_154_p1)
);

ImgProcess_Top_uiibs #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
ImgProcess_Top_uiibs_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_157_p0),
    .ce(grp_fu_157_ce),
    .dout(grp_fu_157_p1)
);

ImgProcess_Top_dejbC #(
    .ID( 1 ),
    .NUM_STAGE( 18 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ImgProcess_Top_dejbC_U55(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(64'd0),
    .din1(res_reg_283),
    .ce(grp_fu_160_ce),
    .dout(grp_fu_160_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state63)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter51 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter52 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter53 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter54 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter54 <= ap_enable_reg_pp0_iter53;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter55 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter55 <= ap_enable_reg_pp0_iter54;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter56 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter56 <= ap_enable_reg_pp0_iter55;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter57 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter57 <= ap_enable_reg_pp0_iter56;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter58 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter58 <= ap_enable_reg_pp0_iter57;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter59 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter59 <= ap_enable_reg_pp0_iter58;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter60 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter60 <= ap_enable_reg_pp0_iter59;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter60 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_165_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_85 <= indvar_flatten_next_fu_171_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_85 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_reg_pp0_iter10_exitcond_flatten_reg_185 <= ap_reg_pp0_iter9_exitcond_flatten_reg_185;
        ap_reg_pp0_iter11_exitcond_flatten_reg_185 <= ap_reg_pp0_iter10_exitcond_flatten_reg_185;
        ap_reg_pp0_iter12_exitcond_flatten_reg_185 <= ap_reg_pp0_iter11_exitcond_flatten_reg_185;
        ap_reg_pp0_iter13_exitcond_flatten_reg_185 <= ap_reg_pp0_iter12_exitcond_flatten_reg_185;
        ap_reg_pp0_iter13_tmp_17_reg_231 <= tmp_17_reg_231;
        ap_reg_pp0_iter13_tmp_s_reg_224 <= tmp_s_reg_224;
        ap_reg_pp0_iter14_exitcond_flatten_reg_185 <= ap_reg_pp0_iter13_exitcond_flatten_reg_185;
        ap_reg_pp0_iter14_tmp_17_reg_231 <= ap_reg_pp0_iter13_tmp_17_reg_231;
        ap_reg_pp0_iter14_tmp_s_reg_224 <= ap_reg_pp0_iter13_tmp_s_reg_224;
        ap_reg_pp0_iter15_exitcond_flatten_reg_185 <= ap_reg_pp0_iter14_exitcond_flatten_reg_185;
        ap_reg_pp0_iter15_tmp_17_reg_231 <= ap_reg_pp0_iter14_tmp_17_reg_231;
        ap_reg_pp0_iter15_tmp_s_reg_224 <= ap_reg_pp0_iter14_tmp_s_reg_224;
        ap_reg_pp0_iter16_exitcond_flatten_reg_185 <= ap_reg_pp0_iter15_exitcond_flatten_reg_185;
        ap_reg_pp0_iter16_tmp_17_reg_231 <= ap_reg_pp0_iter15_tmp_17_reg_231;
        ap_reg_pp0_iter16_tmp_s_reg_224 <= ap_reg_pp0_iter15_tmp_s_reg_224;
        ap_reg_pp0_iter17_exitcond_flatten_reg_185 <= ap_reg_pp0_iter16_exitcond_flatten_reg_185;
        ap_reg_pp0_iter17_tmp_17_reg_231 <= ap_reg_pp0_iter16_tmp_17_reg_231;
        ap_reg_pp0_iter17_tmp_s_reg_224 <= ap_reg_pp0_iter16_tmp_s_reg_224;
        ap_reg_pp0_iter18_exitcond_flatten_reg_185 <= ap_reg_pp0_iter17_exitcond_flatten_reg_185;
        ap_reg_pp0_iter18_tmp_17_reg_231 <= ap_reg_pp0_iter17_tmp_17_reg_231;
        ap_reg_pp0_iter18_tmp_s_reg_224 <= ap_reg_pp0_iter17_tmp_s_reg_224;
        ap_reg_pp0_iter19_exitcond_flatten_reg_185 <= ap_reg_pp0_iter18_exitcond_flatten_reg_185;
        ap_reg_pp0_iter19_tmp_17_reg_231 <= ap_reg_pp0_iter18_tmp_17_reg_231;
        ap_reg_pp0_iter19_tmp_s_reg_224 <= ap_reg_pp0_iter18_tmp_s_reg_224;
        ap_reg_pp0_iter20_exitcond_flatten_reg_185 <= ap_reg_pp0_iter19_exitcond_flatten_reg_185;
        ap_reg_pp0_iter20_tmp_17_reg_231 <= ap_reg_pp0_iter19_tmp_17_reg_231;
        ap_reg_pp0_iter20_tmp_s_reg_224 <= ap_reg_pp0_iter19_tmp_s_reg_224;
        ap_reg_pp0_iter21_exitcond_flatten_reg_185 <= ap_reg_pp0_iter20_exitcond_flatten_reg_185;
        ap_reg_pp0_iter21_tmp_17_reg_231 <= ap_reg_pp0_iter20_tmp_17_reg_231;
        ap_reg_pp0_iter21_tmp_s_reg_224 <= ap_reg_pp0_iter20_tmp_s_reg_224;
        ap_reg_pp0_iter22_exitcond_flatten_reg_185 <= ap_reg_pp0_iter21_exitcond_flatten_reg_185;
        ap_reg_pp0_iter22_tmp_17_reg_231 <= ap_reg_pp0_iter21_tmp_17_reg_231;
        ap_reg_pp0_iter22_tmp_s_reg_224 <= ap_reg_pp0_iter21_tmp_s_reg_224;
        ap_reg_pp0_iter23_exitcond_flatten_reg_185 <= ap_reg_pp0_iter22_exitcond_flatten_reg_185;
        ap_reg_pp0_iter23_tmp_17_reg_231 <= ap_reg_pp0_iter22_tmp_17_reg_231;
        ap_reg_pp0_iter23_tmp_s_reg_224 <= ap_reg_pp0_iter22_tmp_s_reg_224;
        ap_reg_pp0_iter24_exitcond_flatten_reg_185 <= ap_reg_pp0_iter23_exitcond_flatten_reg_185;
        ap_reg_pp0_iter25_exitcond_flatten_reg_185 <= ap_reg_pp0_iter24_exitcond_flatten_reg_185;
        ap_reg_pp0_iter26_exitcond_flatten_reg_185 <= ap_reg_pp0_iter25_exitcond_flatten_reg_185;
        ap_reg_pp0_iter27_exitcond_flatten_reg_185 <= ap_reg_pp0_iter26_exitcond_flatten_reg_185;
        ap_reg_pp0_iter28_exitcond_flatten_reg_185 <= ap_reg_pp0_iter27_exitcond_flatten_reg_185;
        ap_reg_pp0_iter29_exitcond_flatten_reg_185 <= ap_reg_pp0_iter28_exitcond_flatten_reg_185;
        ap_reg_pp0_iter2_exitcond_flatten_reg_185 <= ap_reg_pp0_iter1_exitcond_flatten_reg_185;
        ap_reg_pp0_iter30_exitcond_flatten_reg_185 <= ap_reg_pp0_iter29_exitcond_flatten_reg_185;
        ap_reg_pp0_iter31_exitcond_flatten_reg_185 <= ap_reg_pp0_iter30_exitcond_flatten_reg_185;
        ap_reg_pp0_iter32_exitcond_flatten_reg_185 <= ap_reg_pp0_iter31_exitcond_flatten_reg_185;
        ap_reg_pp0_iter33_exitcond_flatten_reg_185 <= ap_reg_pp0_iter32_exitcond_flatten_reg_185;
        ap_reg_pp0_iter34_exitcond_flatten_reg_185 <= ap_reg_pp0_iter33_exitcond_flatten_reg_185;
        ap_reg_pp0_iter35_exitcond_flatten_reg_185 <= ap_reg_pp0_iter34_exitcond_flatten_reg_185;
        ap_reg_pp0_iter36_exitcond_flatten_reg_185 <= ap_reg_pp0_iter35_exitcond_flatten_reg_185;
        ap_reg_pp0_iter37_exitcond_flatten_reg_185 <= ap_reg_pp0_iter36_exitcond_flatten_reg_185;
        ap_reg_pp0_iter38_exitcond_flatten_reg_185 <= ap_reg_pp0_iter37_exitcond_flatten_reg_185;
        ap_reg_pp0_iter39_exitcond_flatten_reg_185 <= ap_reg_pp0_iter38_exitcond_flatten_reg_185;
        ap_reg_pp0_iter3_exitcond_flatten_reg_185 <= ap_reg_pp0_iter2_exitcond_flatten_reg_185;
        ap_reg_pp0_iter40_exitcond_flatten_reg_185 <= ap_reg_pp0_iter39_exitcond_flatten_reg_185;
        ap_reg_pp0_iter41_exitcond_flatten_reg_185 <= ap_reg_pp0_iter40_exitcond_flatten_reg_185;
        ap_reg_pp0_iter42_exitcond_flatten_reg_185 <= ap_reg_pp0_iter41_exitcond_flatten_reg_185;
        ap_reg_pp0_iter43_exitcond_flatten_reg_185 <= ap_reg_pp0_iter42_exitcond_flatten_reg_185;
        ap_reg_pp0_iter44_exitcond_flatten_reg_185 <= ap_reg_pp0_iter43_exitcond_flatten_reg_185;
        ap_reg_pp0_iter45_exitcond_flatten_reg_185 <= ap_reg_pp0_iter44_exitcond_flatten_reg_185;
        ap_reg_pp0_iter46_exitcond_flatten_reg_185 <= ap_reg_pp0_iter45_exitcond_flatten_reg_185;
        ap_reg_pp0_iter47_exitcond_flatten_reg_185 <= ap_reg_pp0_iter46_exitcond_flatten_reg_185;
        ap_reg_pp0_iter48_exitcond_flatten_reg_185 <= ap_reg_pp0_iter47_exitcond_flatten_reg_185;
        ap_reg_pp0_iter49_exitcond_flatten_reg_185 <= ap_reg_pp0_iter48_exitcond_flatten_reg_185;
        ap_reg_pp0_iter4_exitcond_flatten_reg_185 <= ap_reg_pp0_iter3_exitcond_flatten_reg_185;
        ap_reg_pp0_iter50_exitcond_flatten_reg_185 <= ap_reg_pp0_iter49_exitcond_flatten_reg_185;
        ap_reg_pp0_iter51_exitcond_flatten_reg_185 <= ap_reg_pp0_iter50_exitcond_flatten_reg_185;
        ap_reg_pp0_iter52_exitcond_flatten_reg_185 <= ap_reg_pp0_iter51_exitcond_flatten_reg_185;
        ap_reg_pp0_iter53_exitcond_flatten_reg_185 <= ap_reg_pp0_iter52_exitcond_flatten_reg_185;
        ap_reg_pp0_iter54_exitcond_flatten_reg_185 <= ap_reg_pp0_iter53_exitcond_flatten_reg_185;
        ap_reg_pp0_iter55_exitcond_flatten_reg_185 <= ap_reg_pp0_iter54_exitcond_flatten_reg_185;
        ap_reg_pp0_iter56_exitcond_flatten_reg_185 <= ap_reg_pp0_iter55_exitcond_flatten_reg_185;
        ap_reg_pp0_iter57_exitcond_flatten_reg_185 <= ap_reg_pp0_iter56_exitcond_flatten_reg_185;
        ap_reg_pp0_iter58_exitcond_flatten_reg_185 <= ap_reg_pp0_iter57_exitcond_flatten_reg_185;
        ap_reg_pp0_iter59_exitcond_flatten_reg_185 <= ap_reg_pp0_iter58_exitcond_flatten_reg_185;
        ap_reg_pp0_iter5_exitcond_flatten_reg_185 <= ap_reg_pp0_iter4_exitcond_flatten_reg_185;
        ap_reg_pp0_iter6_exitcond_flatten_reg_185 <= ap_reg_pp0_iter5_exitcond_flatten_reg_185;
        ap_reg_pp0_iter7_exitcond_flatten_reg_185 <= ap_reg_pp0_iter6_exitcond_flatten_reg_185;
        ap_reg_pp0_iter8_exitcond_flatten_reg_185 <= ap_reg_pp0_iter7_exitcond_flatten_reg_185;
        ap_reg_pp0_iter9_exitcond_flatten_reg_185 <= ap_reg_pp0_iter8_exitcond_flatten_reg_185;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_reg_pp0_iter1_exitcond_flatten_reg_185 <= exitcond_flatten_reg_185;
        exitcond_flatten_reg_185 <= exitcond_flatten_fu_165_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter6_exitcond_flatten_reg_185 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cb_reg_219 <= grp_fu_157_p1;
        cr_reg_214 <= grp_fu_154_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter39_exitcond_flatten_reg_185 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        res_reg_283 <= grp_fu_149_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter58_exitcond_flatten_reg_185 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_10_reg_293 <= tmp_10_fu_96_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter57_exitcond_flatten_reg_185 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_11_reg_288 <= grp_fu_160_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter17_exitcond_flatten_reg_185 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_16_reg_238 <= grp_fu_121_p2;
        tmp_18_reg_243 <= grp_fu_126_p2;
        tmp_21_reg_248 <= grp_fu_131_p2;
        tmp_22_reg_253 <= grp_fu_136_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter11_exitcond_flatten_reg_185 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_17_reg_231 <= grp_fu_104_p2;
        tmp_s_reg_224 <= grp_fu_99_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter22_exitcond_flatten_reg_185 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_19_reg_258 <= grp_fu_109_p2;
        tmp_23_reg_263 <= grp_fu_113_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter28_exitcond_flatten_reg_185 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_20_reg_268 <= grp_fu_141_p2;
        tmp_24_reg_273 <= grp_fu_145_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter33_exitcond_flatten_reg_185 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_25_reg_278 <= grp_fu_117_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_185 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_26_reg_199 <= Cb_Img_data_stream_0_V_dout;
        tmp_reg_194 <= Cr_Img_data_stream_0_V_dout;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_185 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Cb_Img_data_stream_0_V_blk_n = Cb_Img_data_stream_0_V_empty_n;
    end else begin
        Cb_Img_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_185 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Cb_Img_data_stream_0_V_read = 1'b1;
    end else begin
        Cb_Img_data_stream_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_185 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Cr_Img_data_stream_0_V_blk_n = Cr_Img_data_stream_0_V_empty_n;
    end else begin
        Cr_Img_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_185 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Cr_Img_data_stream_0_V_read = 1'b1;
    end else begin
        Cr_Img_data_stream_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter59_exitcond_flatten_reg_185 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter60 == 1'b1))) begin
        Sim_data_stream_0_V_blk_n = Sim_data_stream_0_V_full_n;
    end else begin
        Sim_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter59_exitcond_flatten_reg_185 == 1'd0) & (ap_enable_reg_pp0_iter60 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Sim_data_stream_0_V_write = 1'b1;
    end else begin
        Sim_data_stream_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_165_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter60 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter59 == 1'b0) & (ap_enable_reg_pp0_iter58 == 1'b0) & (ap_enable_reg_pp0_iter57 == 1'b0) & (ap_enable_reg_pp0_iter56 == 1'b0) & (ap_enable_reg_pp0_iter55 == 1'b0) & (ap_enable_reg_pp0_iter54 == 1'b0) & (ap_enable_reg_pp0_iter53 == 1'b0) & (ap_enable_reg_pp0_iter52 == 1'b0) & (ap_enable_reg_pp0_iter51 == 1'b0) & (ap_enable_reg_pp0_iter50 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_104_ce = 1'b1;
    end else begin
        grp_fu_104_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_109_ce = 1'b1;
    end else begin
        grp_fu_109_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_113_ce = 1'b1;
    end else begin
        grp_fu_113_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_117_ce = 1'b1;
    end else begin
        grp_fu_117_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_121_ce = 1'b1;
    end else begin
        grp_fu_121_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_126_ce = 1'b1;
    end else begin
        grp_fu_126_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_131_ce = 1'b1;
    end else begin
        grp_fu_131_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_136_ce = 1'b1;
    end else begin
        grp_fu_136_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_141_ce = 1'b1;
    end else begin
        grp_fu_141_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_145_ce = 1'b1;
    end else begin
        grp_fu_145_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_149_ce = 1'b1;
    end else begin
        grp_fu_149_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_154_ce = 1'b1;
    end else begin
        grp_fu_154_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_157_ce = 1'b1;
    end else begin
        grp_fu_157_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_160_ce = 1'b1;
    end else begin
        grp_fu_160_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_99_ce = 1'b1;
    end else begin
        grp_fu_99_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond_flatten_fu_165_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter59 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter60 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter59 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter60 == 1'b1)) | ((exitcond_flatten_fu_165_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Sim_data_stream_0_V_din = tmp_10_reg_293;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_reg_pp0_iter59_exitcond_flatten_reg_185 == 1'd0) & (1'b0 == Sim_data_stream_0_V_full_n) & (ap_enable_reg_pp0_iter60 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_flatten_reg_185 == 1'd0) & (1'b0 == Cb_Img_data_stream_0_V_empty_n)) | ((exitcond_flatten_reg_185 == 1'd0) & (1'b0 == Cr_Img_data_stream_0_V_empty_n)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_reg_pp0_iter59_exitcond_flatten_reg_185 == 1'd0) & (1'b0 == Sim_data_stream_0_V_full_n) & (ap_enable_reg_pp0_iter60 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_flatten_reg_185 == 1'd0) & (1'b0 == Cb_Img_data_stream_0_V_empty_n)) | ((exitcond_flatten_reg_185 == 1'd0) & (1'b0 == Cr_Img_data_stream_0_V_empty_n)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_reg_pp0_iter59_exitcond_flatten_reg_185 == 1'd0) & (1'b0 == Sim_data_stream_0_V_full_n) & (ap_enable_reg_pp0_iter60 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_flatten_reg_185 == 1'd0) & (1'b0 == Cb_Img_data_stream_0_V_empty_n)) | ((exitcond_flatten_reg_185 == 1'd0) & (1'b0 == Cr_Img_data_stream_0_V_empty_n)))));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (((exitcond_flatten_reg_185 == 1'd0) & (1'b0 == Cb_Img_data_stream_0_V_empty_n)) | ((exitcond_flatten_reg_185 == 1'd0) & (1'b0 == Cr_Img_data_stream_0_V_empty_n)));
end

assign ap_block_state40_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter47 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter48 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter49 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage0_iter50 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter51 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage0_iter52 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter53 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage0_iter54 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter55 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage0_iter56 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage0_iter57 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage0_iter58 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter59 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state62_pp0_stage0_iter60 = ((ap_reg_pp0_iter59_exitcond_flatten_reg_185 == 1'd0) & (1'b0 == Sim_data_stream_0_V_full_n));
end

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign exitcond_flatten_fu_165_p2 = ((indvar_flatten_reg_85 == 19'd345600) ? 1'b1 : 1'b0);

assign grp_fu_154_p0 = tmp_reg_194;

assign grp_fu_157_p0 = tmp_26_reg_199;

assign indvar_flatten_next_fu_171_p2 = (indvar_flatten_reg_85 + 19'd1);

assign start_out = real_start;

endmodule //YCrCb_GUASSIAN_Loop_1
