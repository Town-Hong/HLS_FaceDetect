// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module erode_dilate (
        img_data_stream_V_dout,
        img_data_stream_V_empty_n,
        img_data_stream_V_read,
        res_data_stream_V_din,
        res_data_stream_V_full_n,
        res_data_stream_V_write,
        ap_clk,
        ap_rst,
        ap_done,
        ap_start,
        ap_ready,
        ap_idle,
        ap_continue
);


input  [7:0] img_data_stream_V_dout;
input   img_data_stream_V_empty_n;
output   img_data_stream_V_read;
output  [7:0] res_data_stream_V_din;
input   res_data_stream_V_full_n;
output   res_data_stream_V_write;
input   ap_clk;
input   ap_rst;
output   ap_done;
input   ap_start;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    Erode_U0_ap_start;
wire    Erode_U0_ap_done;
wire    Erode_U0_ap_continue;
wire    Erode_U0_ap_idle;
wire    Erode_U0_ap_ready;
wire    Erode_U0_start_out;
wire    Erode_U0_start_write;
wire    Erode_U0_p_src_data_stream_V_read;
wire   [7:0] Erode_U0_p_dst_data_stream_V_din;
wire    Erode_U0_p_dst_data_stream_V_write;
wire    Dilate_U0_ap_start;
wire    Dilate_U0_ap_done;
wire    Dilate_U0_ap_continue;
wire    Dilate_U0_ap_idle;
wire    Dilate_U0_ap_ready;
wire    Dilate_U0_p_src_data_stream_V_read;
wire   [7:0] Dilate_U0_p_dst_data_stream_V_din;
wire    Dilate_U0_p_dst_data_stream_V_write;
wire    ap_sync_continue;
wire    tmp_img_data_stream_s_full_n;
wire   [7:0] tmp_img_data_stream_s_dout;
wire    tmp_img_data_stream_s_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
wire   [0:0] start_for_Dilate_U0_din;
wire    start_for_Dilate_U0_full_n;
wire   [0:0] start_for_Dilate_U0_dout;
wire    start_for_Dilate_U0_empty_n;
wire    Dilate_U0_start_full_n;
wire    Dilate_U0_start_write;

Erode Erode_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Erode_U0_ap_start),
    .start_full_n(start_for_Dilate_U0_full_n),
    .ap_done(Erode_U0_ap_done),
    .ap_continue(Erode_U0_ap_continue),
    .ap_idle(Erode_U0_ap_idle),
    .ap_ready(Erode_U0_ap_ready),
    .start_out(Erode_U0_start_out),
    .start_write(Erode_U0_start_write),
    .p_src_data_stream_V_dout(img_data_stream_V_dout),
    .p_src_data_stream_V_empty_n(img_data_stream_V_empty_n),
    .p_src_data_stream_V_read(Erode_U0_p_src_data_stream_V_read),
    .p_dst_data_stream_V_din(Erode_U0_p_dst_data_stream_V_din),
    .p_dst_data_stream_V_full_n(tmp_img_data_stream_s_full_n),
    .p_dst_data_stream_V_write(Erode_U0_p_dst_data_stream_V_write)
);

Dilate Dilate_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Dilate_U0_ap_start),
    .ap_done(Dilate_U0_ap_done),
    .ap_continue(Dilate_U0_ap_continue),
    .ap_idle(Dilate_U0_ap_idle),
    .ap_ready(Dilate_U0_ap_ready),
    .p_src_data_stream_V_dout(tmp_img_data_stream_s_dout),
    .p_src_data_stream_V_empty_n(tmp_img_data_stream_s_empty_n),
    .p_src_data_stream_V_read(Dilate_U0_p_src_data_stream_V_read),
    .p_dst_data_stream_V_din(Dilate_U0_p_dst_data_stream_V_din),
    .p_dst_data_stream_V_full_n(res_data_stream_V_full_n),
    .p_dst_data_stream_V_write(Dilate_U0_p_dst_data_stream_V_write)
);

fifo_w8_d1_A tmp_img_data_stream_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Erode_U0_p_dst_data_stream_V_din),
    .if_full_n(tmp_img_data_stream_s_full_n),
    .if_write(Erode_U0_p_dst_data_stream_V_write),
    .if_dout(tmp_img_data_stream_s_dout),
    .if_empty_n(tmp_img_data_stream_s_empty_n),
    .if_read(Dilate_U0_p_src_data_stream_V_read)
);

start_for_Dilate_U0 start_for_Dilate_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_Dilate_U0_din),
    .if_full_n(start_for_Dilate_U0_full_n),
    .if_write(Erode_U0_start_write),
    .if_dout(start_for_Dilate_U0_dout),
    .if_empty_n(start_for_Dilate_U0_empty_n),
    .if_read(Dilate_U0_ap_ready)
);

assign Dilate_U0_ap_continue = ap_continue;

assign Dilate_U0_ap_start = start_for_Dilate_U0_empty_n;

assign Dilate_U0_start_full_n = 1'b1;

assign Dilate_U0_start_write = 1'b0;

assign Erode_U0_ap_continue = 1'b1;

assign Erode_U0_ap_start = ap_start;

assign ap_done = Dilate_U0_ap_done;

assign ap_idle = (Erode_U0_ap_idle & Dilate_U0_ap_idle);

assign ap_ready = Erode_U0_ap_ready;

assign ap_sync_continue = ap_continue;

assign ap_sync_done = Dilate_U0_ap_done;

assign ap_sync_ready = Erode_U0_ap_ready;

assign img_data_stream_V_read = Erode_U0_p_src_data_stream_V_read;

assign res_data_stream_V_din = Dilate_U0_p_dst_data_stream_V_din;

assign res_data_stream_V_write = Dilate_U0_p_dst_data_stream_V_write;

assign start_for_Dilate_U0_din = 1'b1;

endmodule //erode_dilate
