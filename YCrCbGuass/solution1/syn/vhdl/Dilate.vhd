-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Dilate is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of Dilate is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv10_2D2 : STD_LOGIC_VECTOR (9 downto 0) := "1011010010";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_2D0 : STD_LOGIC_VECTOR (9 downto 0) := "1011010000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv9_1E2 : STD_LOGIC_VECTOR (8 downto 0) := "111100010";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv10_1E0 : STD_LOGIC_VECTOR (9 downto 0) := "0111100000";
    constant ap_const_lv9_1DF : STD_LOGIC_VECTOR (8 downto 0) := "111011111";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal or_cond_i_i_i_reg_804 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_or_cond_i_i_i_reg_804 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_766 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_757 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal or_cond_i_i_reg_825 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_or_cond_i_i_reg_825 : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_7_reg_215 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond389_i_i_fu_226_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_V_fu_232_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_V_reg_752 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_s_fu_238_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_219_not_fu_244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_219_not_reg_761 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_reg_771 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_249_2_fu_272_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_249_2_reg_775 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_reg_779 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_assign_13_1_t_fu_288_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_13_1_t_reg_785 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_13_2_t_fu_294_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_13_2_t_reg_790 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond388_i_i_fu_304_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond388_i_i_reg_795 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_predicate_op94_read_state5 : BOOLEAN;
    signal ap_predicate_op102_read_state5 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_reg_pp0_iter1_exitcond388_i_i_reg_795 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_exitcond388_i_i_reg_795 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_exitcond388_i_i_reg_795 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_exitcond388_i_i_reg_795 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_310_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal or_cond_i_i_i_fu_364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fu_386_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_reg_808 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_58_fu_394_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_58_reg_813 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter1_tmp_58_reg_813 : STD_LOGIC_VECTOR (1 downto 0);
    signal brmerge_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_818 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_brmerge_reg_818 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_fu_403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_or_cond_i_i_reg_825 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_or_cond_i_i_reg_825 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_or_cond_i_i_reg_825 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_or_cond_i_i_reg_825 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_buf_0_val_3_addr_reg_829 : STD_LOGIC_VECTOR (8 downto 0);
    signal k_buf_0_val_4_addr_reg_835 : STD_LOGIC_VECTOR (8 downto 0);
    signal k_buf_0_val_5_addr_reg_841 : STD_LOGIC_VECTOR (8 downto 0);
    signal col_buf_0_val_0_0_fu_440_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_reg_847 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter3_col_buf_0_val_0_0_reg_847 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter4_col_buf_0_val_0_0_reg_847 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter5_col_buf_0_val_0_0_reg_847 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_26_fu_511_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_26_reg_854 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter3_src_kernel_win_0_va_26_reg_854 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter4_src_kernel_win_0_va_26_reg_854 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_27_fu_529_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_27_reg_861 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_0_i_i_i_059_i_7_fu_561_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_0_i_i_i_059_i_7_reg_868 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_0_i_i_i_059_i_9_fu_604_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_0_i_i_i_059_i_9_reg_874 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_295_1_2_fu_612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_295_1_2_reg_879 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_0_i_i_i_059_i_2_fu_660_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_0_i_i_i_059_i_2_reg_884 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal k_buf_0_val_3_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal k_buf_0_val_3_ce0 : STD_LOGIC;
    signal k_buf_0_val_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_ce1 : STD_LOGIC;
    signal k_buf_0_val_3_we1 : STD_LOGIC;
    signal k_buf_0_val_4_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal k_buf_0_val_4_ce0 : STD_LOGIC;
    signal k_buf_0_val_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_ce1 : STD_LOGIC;
    signal k_buf_0_val_4_we1 : STD_LOGIC;
    signal k_buf_0_val_4_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal k_buf_0_val_5_ce0 : STD_LOGIC;
    signal k_buf_0_val_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_ce1 : STD_LOGIC;
    signal k_buf_0_val_5_we1 : STD_LOGIC;
    signal k_buf_0_val_5_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_204 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal tmp_19_fu_408_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal src_kernel_win_0_va_fu_96 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_19_fu_100 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_20_fu_104 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_21_fu_108 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_22_fu_112 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_23_fu_116 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_24_fu_120 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_s_fu_124 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_fu_478_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_4_fu_128 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_fu_459_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_250_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_54_fu_284_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_55_fu_316_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_7_cast_fu_300_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ImagLoc_x_fu_332_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_56_fu_344_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_fu_370_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ImagLoc_x_cast_fu_338_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_assign_2_cast_cast_fu_378_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp2_fu_326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_assign_2_t_fu_423_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_35_fu_428_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_36_fu_447_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_37_fu_466_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_38_fu_500_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_39_fu_518_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_295_0_1_fu_542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_0_i_i_i_059_i_s_fu_548_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_295_0_2_fu_556_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_295_1_fu_586_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_0_i_i_i_059_i_8_fu_591_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_295_1_1_fu_598_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_0_i_i_i_059_i_3_fu_635_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_295_2_fu_640_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_0_i_i_i_059_i_1_fu_646_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_295_2_1_fu_654_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_295_2_2_fu_680_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_337 : BOOLEAN;

    component ImgProcess_Top_muxdS IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component Erode_k_buf_0_val_3 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_3_U : component Erode_k_buf_0_val_3
    generic map (
        DataWidth => 8,
        AddressRange => 480,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_3_address0,
        ce0 => k_buf_0_val_3_ce0,
        q0 => k_buf_0_val_3_q0,
        address1 => k_buf_0_val_3_addr_reg_829,
        ce1 => k_buf_0_val_3_ce1,
        we1 => k_buf_0_val_3_we1,
        d1 => p_src_data_stream_V_dout);

    k_buf_0_val_4_U : component Erode_k_buf_0_val_3
    generic map (
        DataWidth => 8,
        AddressRange => 480,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_4_address0,
        ce0 => k_buf_0_val_4_ce0,
        q0 => k_buf_0_val_4_q0,
        address1 => k_buf_0_val_4_addr_reg_835,
        ce1 => k_buf_0_val_4_ce1,
        we1 => k_buf_0_val_4_we1,
        d1 => k_buf_0_val_4_d1);

    k_buf_0_val_5_U : component Erode_k_buf_0_val_3
    generic map (
        DataWidth => 8,
        AddressRange => 480,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_5_address0,
        ce0 => k_buf_0_val_5_ce0,
        q0 => k_buf_0_val_5_q0,
        address1 => k_buf_0_val_5_addr_reg_841,
        ce1 => k_buf_0_val_5_ce1,
        we1 => k_buf_0_val_5_we1,
        d1 => k_buf_0_val_5_d1);

    ImgProcess_Top_muxdS_U143 : component ImgProcess_Top_muxdS
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => src_kernel_win_0_va_24_fu_120,
        din1 => ap_const_lv8_0,
        din2 => ap_const_lv8_0,
        din3 => col_assign_2_t_fu_423_p2,
        dout => tmp_35_fu_428_p5);

    ImgProcess_Top_muxdS_U144 : component ImgProcess_Top_muxdS
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_4_fu_128,
        din1 => ap_const_lv8_0,
        din2 => ap_const_lv8_0,
        din3 => col_assign_2_t_fu_423_p2,
        dout => tmp_36_fu_447_p5);

    ImgProcess_Top_muxdS_U145 : component ImgProcess_Top_muxdS
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_s_fu_124,
        din1 => ap_const_lv8_0,
        din2 => ap_const_lv8_0,
        din3 => col_assign_2_t_fu_423_p2,
        dout => tmp_37_fu_466_p5);

    ImgProcess_Top_muxdS_U146 : component ImgProcess_Top_muxdS
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_440_p3,
        din1 => col_buf_0_val_1_0_fu_459_p3,
        din2 => col_buf_0_val_2_0_fu_478_p3,
        din3 => row_assign_13_1_t_reg_785,
        dout => tmp_38_fu_500_p5);

    ImgProcess_Top_muxdS_U147 : component ImgProcess_Top_muxdS
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_440_p3,
        din1 => col_buf_0_val_1_0_fu_459_p3,
        din2 => col_buf_0_val_2_0_fu_478_p3,
        din3 => row_assign_13_2_t_reg_790,
        dout => tmp_39_fu_518_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((exitcond389_i_i_fu_226_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((exitcond389_i_i_fu_226_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                elsif (((exitcond389_i_i_fu_226_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    t_V_7_reg_215_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_i_fu_304_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_7_reg_215 <= j_V_fu_310_p2;
            elsif (((exitcond389_i_i_fu_226_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                t_V_7_reg_215 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    t_V_reg_204_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                t_V_reg_204 <= i_V_reg_752;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_204 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_reg_pp0_iter1_brmerge_reg_818 <= brmerge_reg_818;
                ap_reg_pp0_iter1_exitcond388_i_i_reg_795 <= exitcond388_i_i_reg_795;
                ap_reg_pp0_iter1_or_cond_i_i_i_reg_804 <= or_cond_i_i_i_reg_804;
                ap_reg_pp0_iter1_or_cond_i_i_reg_825 <= or_cond_i_i_reg_825;
                ap_reg_pp0_iter1_tmp_58_reg_813 <= tmp_58_reg_813;
                exitcond388_i_i_reg_795 <= exitcond388_i_i_fu_304_p2;
                k_buf_0_val_3_addr_reg_829 <= tmp_19_fu_408_p1(9 - 1 downto 0);
                k_buf_0_val_4_addr_reg_835 <= tmp_19_fu_408_p1(9 - 1 downto 0);
                k_buf_0_val_5_addr_reg_841 <= tmp_19_fu_408_p1(9 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_reg_pp0_iter2_exitcond388_i_i_reg_795 <= ap_reg_pp0_iter1_exitcond388_i_i_reg_795;
                ap_reg_pp0_iter2_or_cond_i_i_reg_825 <= ap_reg_pp0_iter1_or_cond_i_i_reg_825;
                ap_reg_pp0_iter3_col_buf_0_val_0_0_reg_847 <= col_buf_0_val_0_0_reg_847;
                ap_reg_pp0_iter3_exitcond388_i_i_reg_795 <= ap_reg_pp0_iter2_exitcond388_i_i_reg_795;
                ap_reg_pp0_iter3_or_cond_i_i_reg_825 <= ap_reg_pp0_iter2_or_cond_i_i_reg_825;
                ap_reg_pp0_iter3_src_kernel_win_0_va_26_reg_854 <= src_kernel_win_0_va_26_reg_854;
                ap_reg_pp0_iter4_col_buf_0_val_0_0_reg_847 <= ap_reg_pp0_iter3_col_buf_0_val_0_0_reg_847;
                ap_reg_pp0_iter4_exitcond388_i_i_reg_795 <= ap_reg_pp0_iter3_exitcond388_i_i_reg_795;
                ap_reg_pp0_iter4_or_cond_i_i_reg_825 <= ap_reg_pp0_iter3_or_cond_i_i_reg_825;
                ap_reg_pp0_iter4_src_kernel_win_0_va_26_reg_854 <= ap_reg_pp0_iter3_src_kernel_win_0_va_26_reg_854;
                ap_reg_pp0_iter5_col_buf_0_val_0_0_reg_847 <= ap_reg_pp0_iter4_col_buf_0_val_0_0_reg_847;
                ap_reg_pp0_iter5_or_cond_i_i_reg_825 <= ap_reg_pp0_iter4_or_cond_i_i_reg_825;
                col_buf_0_val_0_0_reg_847 <= col_buf_0_val_0_0_fu_440_p3;
                src_kernel_win_0_va_26_reg_854 <= src_kernel_win_0_va_26_fu_511_p3;
                src_kernel_win_0_va_27_reg_861 <= src_kernel_win_0_va_27_fu_529_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_i_fu_304_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                brmerge_reg_818 <= brmerge_fu_398_p2;
                or_cond_i_i_i_reg_804 <= or_cond_i_i_i_fu_364_p2;
                or_cond_i_i_reg_825 <= or_cond_i_i_fu_403_p2;
                tmp_58_reg_813 <= tmp_58_fu_394_p1;
                x_reg_808 <= x_fu_386_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_752 <= i_V_fu_232_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond389_i_i_fu_226_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_reg_766 <= icmp_fu_260_p2;
                row_assign_13_1_t_reg_785 <= row_assign_13_1_t_fu_288_p2;
                row_assign_13_2_t_reg_790 <= row_assign_13_2_t_fu_294_p2;
                tmp_13_reg_771 <= tmp_13_fu_266_p2;
                tmp_14_reg_779 <= tmp_14_fu_278_p2;
                tmp_219_not_reg_761 <= tmp_219_not_fu_244_p2;
                tmp_249_2_reg_775 <= tmp_249_2_fu_272_p2;
                tmp_s_reg_757 <= tmp_s_fu_238_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_predicate_op102_read_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                right_border_buf_0_4_fu_128 <= col_buf_0_val_1_0_fu_459_p3;
                right_border_buf_0_s_fu_124 <= col_buf_0_val_2_0_fu_478_p3;
                src_kernel_win_0_va_24_fu_120 <= col_buf_0_val_0_0_fu_440_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter4_exitcond388_i_i_reg_795 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_19_fu_100 <= src_kernel_win_0_va_fu_96;
                src_kernel_win_0_va_fu_96 <= ap_reg_pp0_iter4_col_buf_0_val_0_0_reg_847;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter3_exitcond388_i_i_reg_795 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_20_fu_104 <= ap_reg_pp0_iter3_src_kernel_win_0_va_26_reg_854;
                src_kernel_win_0_va_21_fu_108 <= src_kernel_win_0_va_20_fu_104;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter2_exitcond388_i_i_reg_795 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_22_fu_112 <= src_kernel_win_0_va_27_reg_861;
                src_kernel_win_0_va_23_fu_116 <= src_kernel_win_0_va_22_fu_112;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter4_or_cond_i_i_reg_825 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                temp_0_i_i_i_059_i_2_reg_884 <= temp_0_i_i_i_059_i_2_fu_660_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter2_or_cond_i_i_reg_825 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                temp_0_i_i_i_059_i_7_reg_868 <= temp_0_i_i_i_059_i_7_fu_561_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter3_or_cond_i_i_reg_825 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                temp_0_i_i_i_059_i_9_reg_874 <= temp_0_i_i_i_059_i_9_fu_604_p3;
                tmp_295_1_2_reg_879 <= tmp_295_1_2_fu_612_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter6, exitcond389_i_i_fu_226_p2, ap_CS_fsm_state2, exitcond388_i_i_fu_304_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond389_i_i_fu_226_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((exitcond388_i_i_fu_304_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and not(((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) or ((exitcond388_i_i_fu_304_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ImagLoc_x_cast_fu_338_p2 <= std_logic_vector(signed(ap_const_lv9_1FF) + signed(t_V_7_reg_215));
    ImagLoc_x_fu_332_p2 <= std_logic_vector(signed(ap_const_lv10_3FF) + signed(t_V_7_cast_fu_300_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(3);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter6, ap_reg_pp0_iter5_or_cond_i_i_reg_825, ap_predicate_op94_read_state5, ap_predicate_op102_read_state5)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_reg_pp0_iter5_or_cond_i_i_reg_825 = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op102_read_state5 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op94_read_state5 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter6, ap_reg_pp0_iter5_or_cond_i_i_reg_825, ap_predicate_op94_read_state5, ap_predicate_op102_read_state5)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_reg_pp0_iter5_or_cond_i_i_reg_825 = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op102_read_state5 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op94_read_state5 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter6, ap_reg_pp0_iter5_or_cond_i_i_reg_825, ap_predicate_op94_read_state5, ap_predicate_op102_read_state5)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_reg_pp0_iter5_or_cond_i_i_reg_825 = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op102_read_state5 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op94_read_state5 = ap_const_boolean_1)))));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter2_assign_proc : process(p_src_data_stream_V_empty_n, ap_predicate_op94_read_state5, ap_predicate_op102_read_state5)
    begin
                ap_block_state5_pp0_stage0_iter2 <= (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op102_read_state5 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op94_read_state5 = ap_const_boolean_1)));
    end process;

        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_pp0_stage0_iter6_assign_proc : process(p_dst_data_stream_V_full_n, ap_reg_pp0_iter5_or_cond_i_i_reg_825)
    begin
                ap_block_state9_pp0_stage0_iter6 <= ((ap_reg_pp0_iter5_or_cond_i_i_reg_825 = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_337_assign_proc : process(ap_reg_pp0_iter1_or_cond_i_i_i_reg_804, icmp_reg_766, tmp_13_reg_771)
    begin
                ap_condition_337 <= ((icmp_reg_766 = ap_const_lv1_0) and (tmp_13_reg_771 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_i_reg_804 = ap_const_lv1_1));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(exitcond388_i_i_fu_304_p2)
    begin
        if ((exitcond388_i_i_fu_304_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, exitcond389_i_i_fu_226_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond389_i_i_fu_226_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op102_read_state5_assign_proc : process(ap_reg_pp0_iter1_or_cond_i_i_i_reg_804, icmp_reg_766, tmp_s_reg_757)
    begin
                ap_predicate_op102_read_state5 <= ((tmp_s_reg_757 = ap_const_lv1_1) and (icmp_reg_766 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_i_reg_804 = ap_const_lv1_1));
    end process;


    ap_predicate_op94_read_state5_assign_proc : process(ap_reg_pp0_iter1_or_cond_i_i_i_reg_804, icmp_reg_766)
    begin
                ap_predicate_op94_read_state5 <= ((icmp_reg_766 = ap_const_lv1_0) and (ap_reg_pp0_iter1_or_cond_i_i_i_reg_804 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(exitcond389_i_i_fu_226_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond389_i_i_fu_226_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge_fu_398_p2 <= (tmp_219_not_reg_761 or tmp_18_fu_358_p2);
    col_assign_2_t_fu_423_p2 <= (ap_reg_pp0_iter1_tmp_58_reg_813 xor ap_const_lv2_3);
    col_buf_0_val_0_0_fu_440_p3 <= 
        k_buf_0_val_3_q0 when (ap_reg_pp0_iter1_brmerge_reg_818(0) = '1') else 
        tmp_35_fu_428_p5;
    col_buf_0_val_1_0_fu_459_p3 <= 
        k_buf_0_val_4_q0 when (ap_reg_pp0_iter1_brmerge_reg_818(0) = '1') else 
        tmp_36_fu_447_p5;
    col_buf_0_val_2_0_fu_478_p3 <= 
        k_buf_0_val_5_q0 when (ap_reg_pp0_iter1_brmerge_reg_818(0) = '1') else 
        tmp_37_fu_466_p5;
    exitcond388_i_i_fu_304_p2 <= "1" when (t_V_7_reg_215 = ap_const_lv9_1E2) else "0";
    exitcond389_i_i_fu_226_p2 <= "1" when (t_V_reg_204 = ap_const_lv10_2D2) else "0";
    i_V_fu_232_p2 <= std_logic_vector(unsigned(t_V_reg_204) + unsigned(ap_const_lv10_1));
    icmp2_fu_326_p2 <= "0" when (tmp_55_fu_316_p4 = ap_const_lv8_0) else "1";
    icmp_fu_260_p2 <= "0" when (tmp_fu_250_p4 = ap_const_lv9_0) else "1";
    j_V_fu_310_p2 <= std_logic_vector(unsigned(t_V_7_reg_215) + unsigned(ap_const_lv9_1));
    k_buf_0_val_3_address0 <= tmp_19_fu_408_p1(9 - 1 downto 0);

    k_buf_0_val_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_reg_pp0_iter1_or_cond_i_i_i_reg_804, icmp_reg_766, tmp_249_2_reg_775, ap_predicate_op102_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_reg_766 = ap_const_lv1_0) and (tmp_249_2_reg_775 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_i_reg_804 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op102_read_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_3_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_we1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_reg_pp0_iter1_or_cond_i_i_i_reg_804, icmp_reg_766, tmp_249_2_reg_775, ap_predicate_op102_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_reg_766 = ap_const_lv1_0) and (tmp_249_2_reg_775 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_i_reg_804 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op102_read_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_3_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_4_address0 <= tmp_19_fu_408_p1(9 - 1 downto 0);

    k_buf_0_val_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_reg_pp0_iter1_or_cond_i_i_i_reg_804, icmp_reg_766, tmp_13_reg_771, ap_predicate_op102_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_reg_766 = ap_const_lv1_0) and (tmp_13_reg_771 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_i_reg_804 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op102_read_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_4_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_d1_assign_proc : process(p_src_data_stream_V_dout, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_predicate_op102_read_state5, k_buf_0_val_3_q0, ap_condition_337)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((ap_predicate_op102_read_state5 = ap_const_boolean_1)) then 
                k_buf_0_val_4_d1 <= k_buf_0_val_3_q0;
            elsif ((ap_const_boolean_1 = ap_condition_337)) then 
                k_buf_0_val_4_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_4_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_4_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_4_we1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_reg_pp0_iter1_or_cond_i_i_i_reg_804, icmp_reg_766, tmp_13_reg_771, ap_predicate_op102_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_reg_766 = ap_const_lv1_0) and (tmp_13_reg_771 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_i_reg_804 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op102_read_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_4_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_5_address0 <= tmp_19_fu_408_p1(9 - 1 downto 0);

    k_buf_0_val_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_reg_pp0_iter1_or_cond_i_i_i_reg_804, icmp_reg_766, tmp_13_reg_771, ap_predicate_op102_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_reg_766 = ap_const_lv1_0) and (tmp_13_reg_771 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_i_reg_804 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op102_read_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_d1_assign_proc : process(p_src_data_stream_V_dout, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_predicate_op102_read_state5, k_buf_0_val_4_q0, ap_condition_337)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((ap_predicate_op102_read_state5 = ap_const_boolean_1)) then 
                k_buf_0_val_5_d1 <= k_buf_0_val_4_q0;
            elsif ((ap_const_boolean_1 = ap_condition_337)) then 
                k_buf_0_val_5_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_5_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_5_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_5_we1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_reg_pp0_iter1_or_cond_i_i_i_reg_804, icmp_reg_766, tmp_13_reg_771, ap_predicate_op102_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_reg_766 = ap_const_lv1_0) and (tmp_13_reg_771 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_i_reg_804 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op102_read_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    or_cond_i_i_fu_403_p2 <= (icmp_reg_766 and icmp2_fu_326_p2);
    or_cond_i_i_i_fu_364_p2 <= (tmp_18_fu_358_p2 and rev_fu_352_p2);
    p_assign_2_cast_cast_fu_378_p3 <= 
        ap_const_lv9_0 when (tmp_57_fu_370_p3(0) = '1') else 
        ap_const_lv9_1DF;

    p_dst_data_stream_V_blk_n_assign_proc : process(p_dst_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter6, ap_reg_pp0_iter5_or_cond_i_i_reg_825)
    begin
        if (((ap_reg_pp0_iter5_or_cond_i_i_reg_825 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            p_dst_data_stream_V_blk_n <= p_dst_data_stream_V_full_n;
        else 
            p_dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_V_din <= 
        ap_reg_pp0_iter5_col_buf_0_val_0_0_reg_847 when (tmp_295_2_2_fu_680_p2(0) = '1') else 
        temp_0_i_i_i_059_i_2_reg_884;

    p_dst_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter6, ap_reg_pp0_iter5_or_cond_i_i_reg_825, ap_block_pp0_stage0_11001)
    begin
        if (((ap_reg_pp0_iter5_or_cond_i_i_reg_825 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_src_data_stream_V_blk_n_assign_proc : process(p_src_data_stream_V_empty_n, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_reg_pp0_iter1_or_cond_i_i_i_reg_804, icmp_reg_766, tmp_s_reg_757)
    begin
        if ((((tmp_s_reg_757 = ap_const_lv1_1) and (icmp_reg_766 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_i_reg_804 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((icmp_reg_766 = ap_const_lv1_0) and (ap_reg_pp0_iter1_or_cond_i_i_i_reg_804 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            p_src_data_stream_V_blk_n <= p_src_data_stream_V_empty_n;
        else 
            p_src_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_V_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op94_read_state5, ap_predicate_op102_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_predicate_op102_read_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op94_read_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    rev_fu_352_p2 <= (tmp_56_fu_344_p3 xor ap_const_lv1_1);
    row_assign_13_1_t_fu_288_p2 <= (tmp_54_fu_284_p1 xor ap_const_lv2_1);
    row_assign_13_2_t_fu_294_p2 <= std_logic_vector(signed(ap_const_lv2_2) - signed(tmp_54_fu_284_p1));
    src_kernel_win_0_va_26_fu_511_p3 <= 
        tmp_38_fu_500_p5 when (tmp_14_reg_779(0) = '1') else 
        col_buf_0_val_1_0_fu_459_p3;
    src_kernel_win_0_va_27_fu_529_p3 <= 
        tmp_39_fu_518_p5 when (tmp_14_reg_779(0) = '1') else 
        col_buf_0_val_2_0_fu_478_p3;
    t_V_7_cast_fu_300_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_7_reg_215),10));
    temp_0_i_i_i_059_i_1_fu_646_p3 <= 
        src_kernel_win_0_va_19_fu_100 when (tmp_295_2_fu_640_p2(0) = '1') else 
        temp_0_i_i_i_059_i_3_fu_635_p3;
    temp_0_i_i_i_059_i_2_fu_660_p3 <= 
        src_kernel_win_0_va_fu_96 when (tmp_295_2_1_fu_654_p2(0) = '1') else 
        temp_0_i_i_i_059_i_1_fu_646_p3;
    temp_0_i_i_i_059_i_3_fu_635_p3 <= 
        ap_reg_pp0_iter4_src_kernel_win_0_va_26_reg_854 when (tmp_295_1_2_reg_879(0) = '1') else 
        temp_0_i_i_i_059_i_9_reg_874;
    temp_0_i_i_i_059_i_7_fu_561_p3 <= 
        src_kernel_win_0_va_27_reg_861 when (tmp_295_0_2_fu_556_p2(0) = '1') else 
        temp_0_i_i_i_059_i_s_fu_548_p3;
    temp_0_i_i_i_059_i_8_fu_591_p3 <= 
        src_kernel_win_0_va_21_fu_108 when (tmp_295_1_fu_586_p2(0) = '1') else 
        temp_0_i_i_i_059_i_7_reg_868;
    temp_0_i_i_i_059_i_9_fu_604_p3 <= 
        src_kernel_win_0_va_20_fu_104 when (tmp_295_1_1_fu_598_p2(0) = '1') else 
        temp_0_i_i_i_059_i_8_fu_591_p3;
    temp_0_i_i_i_059_i_s_fu_548_p3 <= 
        src_kernel_win_0_va_22_fu_112 when (tmp_295_0_1_fu_542_p2(0) = '1') else 
        src_kernel_win_0_va_23_fu_116;
    tmp_13_fu_266_p2 <= "1" when (t_V_reg_204 = ap_const_lv10_0) else "0";
    tmp_14_fu_278_p2 <= "1" when (unsigned(t_V_reg_204) > unsigned(ap_const_lv10_2D0)) else "0";
    tmp_18_fu_358_p2 <= "1" when (signed(ImagLoc_x_fu_332_p2) < signed(ap_const_lv10_1E0)) else "0";
    tmp_19_fu_408_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_reg_808),64));
    tmp_219_not_fu_244_p2 <= (tmp_s_fu_238_p2 xor ap_const_lv1_1);
    tmp_249_2_fu_272_p2 <= "1" when (t_V_reg_204 = ap_const_lv10_1) else "0";
    tmp_295_0_1_fu_542_p2 <= "1" when (unsigned(src_kernel_win_0_va_22_fu_112) > unsigned(src_kernel_win_0_va_23_fu_116)) else "0";
    tmp_295_0_2_fu_556_p2 <= "1" when (unsigned(src_kernel_win_0_va_27_reg_861) > unsigned(temp_0_i_i_i_059_i_s_fu_548_p3)) else "0";
    tmp_295_1_1_fu_598_p2 <= "1" when (unsigned(src_kernel_win_0_va_20_fu_104) > unsigned(temp_0_i_i_i_059_i_8_fu_591_p3)) else "0";
    tmp_295_1_2_fu_612_p2 <= "1" when (unsigned(ap_reg_pp0_iter3_src_kernel_win_0_va_26_reg_854) > unsigned(temp_0_i_i_i_059_i_9_fu_604_p3)) else "0";
    tmp_295_1_fu_586_p2 <= "1" when (unsigned(src_kernel_win_0_va_21_fu_108) > unsigned(temp_0_i_i_i_059_i_7_reg_868)) else "0";
    tmp_295_2_1_fu_654_p2 <= "1" when (unsigned(src_kernel_win_0_va_fu_96) > unsigned(temp_0_i_i_i_059_i_1_fu_646_p3)) else "0";
    tmp_295_2_2_fu_680_p2 <= "1" when (unsigned(ap_reg_pp0_iter5_col_buf_0_val_0_0_reg_847) > unsigned(temp_0_i_i_i_059_i_2_reg_884)) else "0";
    tmp_295_2_fu_640_p2 <= "1" when (unsigned(src_kernel_win_0_va_19_fu_100) > unsigned(temp_0_i_i_i_059_i_3_fu_635_p3)) else "0";
    tmp_54_fu_284_p1 <= t_V_reg_204(2 - 1 downto 0);
    tmp_55_fu_316_p4 <= t_V_7_reg_215(8 downto 1);
    tmp_56_fu_344_p3 <= ImagLoc_x_fu_332_p2(9 downto 9);
    tmp_57_fu_370_p3 <= ImagLoc_x_fu_332_p2(9 downto 9);
    tmp_58_fu_394_p1 <= x_fu_386_p3(2 - 1 downto 0);
    tmp_fu_250_p4 <= t_V_reg_204(9 downto 1);
    tmp_s_fu_238_p2 <= "1" when (unsigned(t_V_reg_204) < unsigned(ap_const_lv10_2D0)) else "0";
    x_fu_386_p3 <= 
        ImagLoc_x_cast_fu_338_p2 when (or_cond_i_i_i_fu_364_p2(0) = '1') else 
        p_assign_2_cast_cast_fu_378_p3;
end behav;
