-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity YCrCb_GUASSIAN is
port (
    rows : IN STD_LOGIC_VECTOR (31 downto 0);
    cols : IN STD_LOGIC_VECTOR (31 downto 0);
    src_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    src_data_stream_0_V_empty_n : IN STD_LOGIC;
    src_data_stream_0_V_read : OUT STD_LOGIC;
    src_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    src_data_stream_1_V_empty_n : IN STD_LOGIC;
    src_data_stream_1_V_read : OUT STD_LOGIC;
    src_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    src_data_stream_2_V_empty_n : IN STD_LOGIC;
    src_data_stream_2_V_read : OUT STD_LOGIC;
    res_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    res_data_stream_V_full_n : IN STD_LOGIC;
    res_data_stream_V_write : OUT STD_LOGIC;
    nor_data_stream_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    nor_data_stream_V_full_n : IN STD_LOGIC;
    nor_data_stream_V_write : OUT STD_LOGIC;
    threshold : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    rows_ap_vld : IN STD_LOGIC;
    cols_ap_vld : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    threshold_ap_vld : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of YCrCb_GUASSIAN is 
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';

    signal YCrCb_GUASSIAN_Block_2_U0_ap_start : STD_LOGIC;
    signal YCrCb_GUASSIAN_Block_2_U0_ap_done : STD_LOGIC;
    signal YCrCb_GUASSIAN_Block_2_U0_ap_continue : STD_LOGIC;
    signal YCrCb_GUASSIAN_Block_2_U0_ap_idle : STD_LOGIC;
    signal YCrCb_GUASSIAN_Block_2_U0_ap_ready : STD_LOGIC;
    signal YCrCb_GUASSIAN_Block_2_U0_nor_copy1_rows_V_out_din : STD_LOGIC_VECTOR (10 downto 0);
    signal YCrCb_GUASSIAN_Block_2_U0_nor_copy1_rows_V_out_write : STD_LOGIC;
    signal YCrCb_GUASSIAN_Block_2_U0_nor_copy1_cols_V_out_din : STD_LOGIC_VECTOR (9 downto 0);
    signal YCrCb_GUASSIAN_Block_2_U0_nor_copy1_cols_V_out_write : STD_LOGIC;
    signal YCrCb_GUASSIAN_Block_2_U0_Sim_rows_V_out_din : STD_LOGIC_VECTOR (10 downto 0);
    signal YCrCb_GUASSIAN_Block_2_U0_Sim_rows_V_out_write : STD_LOGIC;
    signal YCrCb_GUASSIAN_Block_2_U0_Sim_cols_V_out_din : STD_LOGIC_VECTOR (9 downto 0);
    signal YCrCb_GUASSIAN_Block_2_U0_Sim_cols_V_out_write : STD_LOGIC;
    signal CvtColor_U0_ap_start : STD_LOGIC;
    signal CvtColor_U0_ap_done : STD_LOGIC;
    signal CvtColor_U0_ap_continue : STD_LOGIC;
    signal CvtColor_U0_ap_idle : STD_LOGIC;
    signal CvtColor_U0_ap_ready : STD_LOGIC;
    signal CvtColor_U0_start_out : STD_LOGIC;
    signal CvtColor_U0_start_write : STD_LOGIC;
    signal CvtColor_U0_src_mat_data_stream_s_read : STD_LOGIC;
    signal CvtColor_U0_src_mat_data_stream_1_read : STD_LOGIC;
    signal CvtColor_U0_src_mat_data_stream_2_read : STD_LOGIC;
    signal CvtColor_U0_YCrCb_IMG_data_strea_i_din : STD_LOGIC_VECTOR (7 downto 0);
    signal CvtColor_U0_YCrCb_IMG_data_strea_i_write : STD_LOGIC;
    signal CvtColor_U0_YCrCb_IMG_data_strea_1_i_din : STD_LOGIC_VECTOR (7 downto 0);
    signal CvtColor_U0_YCrCb_IMG_data_strea_1_i_write : STD_LOGIC;
    signal CvtColor_U0_YCrCb_IMG_data_strea_2_i_din : STD_LOGIC_VECTOR (7 downto 0);
    signal CvtColor_U0_YCrCb_IMG_data_strea_2_i_write : STD_LOGIC;
    signal Split_U0_ap_start : STD_LOGIC;
    signal Split_U0_ap_done : STD_LOGIC;
    signal Split_U0_ap_continue : STD_LOGIC;
    signal Split_U0_ap_idle : STD_LOGIC;
    signal Split_U0_ap_ready : STD_LOGIC;
    signal Split_U0_start_out : STD_LOGIC;
    signal Split_U0_start_write : STD_LOGIC;
    signal Split_U0_src_data_stream_0_V_read : STD_LOGIC;
    signal Split_U0_src_data_stream_1_V_read : STD_LOGIC;
    signal Split_U0_src_data_stream_2_V_read : STD_LOGIC;
    signal Split_U0_dst0_data_stream_V : STD_LOGIC_VECTOR (7 downto 0);
    signal Split_U0_dst0_data_stream_V_ap_vld : STD_LOGIC;
    signal Split_U0_dst1_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Split_U0_dst1_data_stream_V_write : STD_LOGIC;
    signal Split_U0_dst2_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Split_U0_dst2_data_stream_V_write : STD_LOGIC;
    signal YCrCb_GUASSIAN_Loop_1_U0_ap_start : STD_LOGIC;
    signal YCrCb_GUASSIAN_Loop_1_U0_ap_done : STD_LOGIC;
    signal YCrCb_GUASSIAN_Loop_1_U0_ap_continue : STD_LOGIC;
    signal YCrCb_GUASSIAN_Loop_1_U0_ap_idle : STD_LOGIC;
    signal YCrCb_GUASSIAN_Loop_1_U0_ap_ready : STD_LOGIC;
    signal YCrCb_GUASSIAN_Loop_1_U0_start_out : STD_LOGIC;
    signal YCrCb_GUASSIAN_Loop_1_U0_start_write : STD_LOGIC;
    signal YCrCb_GUASSIAN_Loop_1_U0_Cr_Img_data_stream_0_V_read : STD_LOGIC;
    signal YCrCb_GUASSIAN_Loop_1_U0_Cb_Img_data_stream_0_V_read : STD_LOGIC;
    signal YCrCb_GUASSIAN_Loop_1_U0_Sim_data_stream_0_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal YCrCb_GUASSIAN_Loop_1_U0_Sim_data_stream_0_V_write : STD_LOGIC;
    signal Duplicate349_U0_ap_start : STD_LOGIC;
    signal Duplicate349_U0_start_full_n : STD_LOGIC;
    signal Duplicate349_U0_ap_done : STD_LOGIC;
    signal Duplicate349_U0_ap_continue : STD_LOGIC;
    signal Duplicate349_U0_ap_idle : STD_LOGIC;
    signal Duplicate349_U0_ap_ready : STD_LOGIC;
    signal Duplicate349_U0_start_out : STD_LOGIC;
    signal Duplicate349_U0_start_write : STD_LOGIC;
    signal Duplicate349_U0_src_rows_V_read : STD_LOGIC;
    signal Duplicate349_U0_src_cols_V_read : STD_LOGIC;
    signal Duplicate349_U0_src_data_stream_V_read : STD_LOGIC;
    signal Duplicate349_U0_dst1_data_stream_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Duplicate349_U0_dst1_data_stream_V_write : STD_LOGIC;
    signal Duplicate349_U0_dst2_data_stream_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Duplicate349_U0_dst2_data_stream_V_write : STD_LOGIC;
    signal MinMaxLoc_U0_ap_start : STD_LOGIC;
    signal MinMaxLoc_U0_ap_done : STD_LOGIC;
    signal MinMaxLoc_U0_ap_continue : STD_LOGIC;
    signal MinMaxLoc_U0_ap_idle : STD_LOGIC;
    signal MinMaxLoc_U0_ap_ready : STD_LOGIC;
    signal MinMaxLoc_U0_src_data_stream_V_read : STD_LOGIC;
    signal MinMaxLoc_U0_min_val_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal MinMaxLoc_U0_min_val_out_write : STD_LOGIC;
    signal MinMaxLoc_U0_max_val_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal MinMaxLoc_U0_max_val_out_write : STD_LOGIC;
    signal normalized_U0_ap_start : STD_LOGIC;
    signal normalized_U0_start_full_n : STD_LOGIC;
    signal normalized_U0_start_out : STD_LOGIC;
    signal normalized_U0_start_write : STD_LOGIC;
    signal normalized_U0_sim_data_stream_V_read : STD_LOGIC;
    signal normalized_U0_nor_data_stream_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal normalized_U0_nor_data_stream_V_write : STD_LOGIC;
    signal normalized_U0_gray_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal normalized_U0_gray_data_stream_V_write : STD_LOGIC;
    signal normalized_U0_max_read : STD_LOGIC;
    signal normalized_U0_min_read : STD_LOGIC;
    signal normalized_U0_ap_done : STD_LOGIC;
    signal normalized_U0_ap_ready : STD_LOGIC;
    signal normalized_U0_ap_idle : STD_LOGIC;
    signal normalized_U0_ap_continue : STD_LOGIC;
    signal Duplicate_U0_ap_start : STD_LOGIC;
    signal Duplicate_U0_ap_done : STD_LOGIC;
    signal Duplicate_U0_ap_continue : STD_LOGIC;
    signal Duplicate_U0_ap_idle : STD_LOGIC;
    signal Duplicate_U0_ap_ready : STD_LOGIC;
    signal Duplicate_U0_start_out : STD_LOGIC;
    signal Duplicate_U0_start_write : STD_LOGIC;
    signal Duplicate_U0_src_rows_V_read : STD_LOGIC;
    signal Duplicate_U0_src_cols_V_read : STD_LOGIC;
    signal Duplicate_U0_src_data_stream_V_read : STD_LOGIC;
    signal Duplicate_U0_dst1_data_stream_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Duplicate_U0_dst1_data_stream_V_write : STD_LOGIC;
    signal Duplicate_U0_dst2_data_stream_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Duplicate_U0_dst2_data_stream_V_write : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal otsu_threshold_U0_ap_start : STD_LOGIC;
    signal otsu_threshold_U0_ap_done : STD_LOGIC;
    signal otsu_threshold_U0_ap_continue : STD_LOGIC;
    signal otsu_threshold_U0_ap_idle : STD_LOGIC;
    signal otsu_threshold_U0_ap_ready : STD_LOGIC;
    signal otsu_threshold_U0_start_out : STD_LOGIC;
    signal otsu_threshold_U0_start_write : STD_LOGIC;
    signal otsu_threshold_U0_gray_data_stream_V_read : STD_LOGIC;
    signal otsu_threshold_U0_ret_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal otsu_threshold_U0_ret_out_write : STD_LOGIC;
    signal otsu_threshold_U0_ret_out1_din : STD_LOGIC_VECTOR (63 downto 0);
    signal otsu_threshold_U0_ret_out1_write : STD_LOGIC;
    signal YCrCb_GUASSIAN_Block_U0_ap_start : STD_LOGIC;
    signal YCrCb_GUASSIAN_Block_U0_ap_done : STD_LOGIC;
    signal YCrCb_GUASSIAN_Block_U0_ap_continue : STD_LOGIC;
    signal YCrCb_GUASSIAN_Block_U0_ap_idle : STD_LOGIC;
    signal YCrCb_GUASSIAN_Block_U0_ap_ready : STD_LOGIC;
    signal YCrCb_GUASSIAN_Block_U0_tmp3_read : STD_LOGIC;
    signal YCrCb_GUASSIAN_Block_U0_threshold : STD_LOGIC_VECTOR (63 downto 0);
    signal YCrCb_GUASSIAN_Block_U0_threshold_ap_vld : STD_LOGIC;
    signal YCrCb_GUASSIAN_Loop_U0_ap_start : STD_LOGIC;
    signal YCrCb_GUASSIAN_Loop_U0_ap_done : STD_LOGIC;
    signal YCrCb_GUASSIAN_Loop_U0_ap_continue : STD_LOGIC;
    signal YCrCb_GUASSIAN_Loop_U0_ap_idle : STD_LOGIC;
    signal YCrCb_GUASSIAN_Loop_U0_ap_ready : STD_LOGIC;
    signal YCrCb_GUASSIAN_Loop_U0_start_out : STD_LOGIC;
    signal YCrCb_GUASSIAN_Loop_U0_start_write : STD_LOGIC;
    signal YCrCb_GUASSIAN_Loop_U0_nor_copy2_data_stream_0_V_read : STD_LOGIC;
    signal YCrCb_GUASSIAN_Loop_U0_tmp3_read : STD_LOGIC;
    signal YCrCb_GUASSIAN_Loop_U0_origin_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal YCrCb_GUASSIAN_Loop_U0_origin_data_stream_0_V_write : STD_LOGIC;
    signal erode_dilate_U0_img_data_stream_V_read : STD_LOGIC;
    signal erode_dilate_U0_res_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal erode_dilate_U0_res_data_stream_V_write : STD_LOGIC;
    signal erode_dilate_U0_ap_done : STD_LOGIC;
    signal erode_dilate_U0_ap_start : STD_LOGIC;
    signal erode_dilate_U0_ap_ready : STD_LOGIC;
    signal erode_dilate_U0_ap_idle : STD_LOGIC;
    signal erode_dilate_U0_ap_continue : STD_LOGIC;
    signal nor_copy1_rows_V_c_i_full_n : STD_LOGIC;
    signal nor_copy1_rows_V_c_i_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal nor_copy1_rows_V_c_i_empty_n : STD_LOGIC;
    signal nor_copy1_cols_V_c_i_full_n : STD_LOGIC;
    signal nor_copy1_cols_V_c_i_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal nor_copy1_cols_V_c_i_empty_n : STD_LOGIC;
    signal Sim_rows_V_c_i_full_n : STD_LOGIC;
    signal Sim_rows_V_c_i_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal Sim_rows_V_c_i_empty_n : STD_LOGIC;
    signal Sim_cols_V_c_i_full_n : STD_LOGIC;
    signal Sim_cols_V_c_i_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal Sim_cols_V_c_i_empty_n : STD_LOGIC;
    signal YCrCb_IMG_data_strea_full_n : STD_LOGIC;
    signal YCrCb_IMG_data_strea_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal YCrCb_IMG_data_strea_empty_n : STD_LOGIC;
    signal YCrCb_IMG_data_strea_1_full_n : STD_LOGIC;
    signal YCrCb_IMG_data_strea_1_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal YCrCb_IMG_data_strea_1_empty_n : STD_LOGIC;
    signal YCrCb_IMG_data_strea_2_full_n : STD_LOGIC;
    signal YCrCb_IMG_data_strea_2_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal YCrCb_IMG_data_strea_2_empty_n : STD_LOGIC;
    signal Cr_Img_data_stream_0_full_n : STD_LOGIC;
    signal Cr_Img_data_stream_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal Cr_Img_data_stream_0_empty_n : STD_LOGIC;
    signal Cb_Img_data_stream_0_full_n : STD_LOGIC;
    signal Cb_Img_data_stream_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal Cb_Img_data_stream_0_empty_n : STD_LOGIC;
    signal Sim_data_stream_0_V_full_n : STD_LOGIC;
    signal Sim_data_stream_0_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal Sim_data_stream_0_V_empty_n : STD_LOGIC;
    signal Sim_copy1_data_strea_full_n : STD_LOGIC;
    signal Sim_copy1_data_strea_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal Sim_copy1_data_strea_empty_n : STD_LOGIC;
    signal Sim_copy2_data_strea_full_n : STD_LOGIC;
    signal Sim_copy2_data_strea_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal Sim_copy2_data_strea_empty_n : STD_LOGIC;
    signal min_c_i_full_n : STD_LOGIC;
    signal min_c_i_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal min_c_i_empty_n : STD_LOGIC;
    signal max_c_i_full_n : STD_LOGIC;
    signal max_c_i_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal max_c_i_empty_n : STD_LOGIC;
    signal nor_copy1_data_strea_full_n : STD_LOGIC;
    signal nor_copy1_data_strea_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal nor_copy1_data_strea_empty_n : STD_LOGIC;
    signal gray_data_stream_0_s_full_n : STD_LOGIC;
    signal gray_data_stream_0_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal gray_data_stream_0_s_empty_n : STD_LOGIC;
    signal nor_copy2_data_strea_full_n : STD_LOGIC;
    signal nor_copy2_data_strea_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal nor_copy2_data_strea_empty_n : STD_LOGIC;
    signal tmp3_c_i_full_n : STD_LOGIC;
    signal tmp3_c_i_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp3_c_i_empty_n : STD_LOGIC;
    signal tmp3_c5_i_full_n : STD_LOGIC;
    signal tmp3_c5_i_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp3_c5_i_empty_n : STD_LOGIC;
    signal origin_data_stream_0_full_n : STD_LOGIC;
    signal origin_data_stream_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal origin_data_stream_0_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal YCrCb_GUASSIAN_Block_2_U0_start_full_n : STD_LOGIC;
    signal YCrCb_GUASSIAN_Block_2_U0_start_write : STD_LOGIC;
    signal start_for_Split_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Split_U0_full_n : STD_LOGIC;
    signal start_for_Split_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Split_U0_empty_n : STD_LOGIC;
    signal start_for_YCrCb_GUASSIAN_Loop_1_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_YCrCb_GUASSIAN_Loop_1_U0_full_n : STD_LOGIC;
    signal start_for_YCrCb_GUASSIAN_Loop_1_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_YCrCb_GUASSIAN_Loop_1_U0_empty_n : STD_LOGIC;
    signal start_for_Duplicate349_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Duplicate349_U0_full_n : STD_LOGIC;
    signal start_for_Duplicate349_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Duplicate349_U0_empty_n : STD_LOGIC;
    signal start_for_MinMaxLoc_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_MinMaxLoc_U0_full_n : STD_LOGIC;
    signal start_for_MinMaxLoc_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_MinMaxLoc_U0_empty_n : STD_LOGIC;
    signal start_for_normalized_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_normalized_U0_full_n : STD_LOGIC;
    signal start_for_normalized_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_normalized_U0_empty_n : STD_LOGIC;
    signal MinMaxLoc_U0_start_full_n : STD_LOGIC;
    signal MinMaxLoc_U0_start_write : STD_LOGIC;
    signal start_for_Duplicate_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Duplicate_U0_full_n : STD_LOGIC;
    signal start_for_Duplicate_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Duplicate_U0_empty_n : STD_LOGIC;
    signal start_for_otsu_threshold_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_otsu_threshold_U0_full_n : STD_LOGIC;
    signal start_for_otsu_threshold_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_otsu_threshold_U0_empty_n : STD_LOGIC;
    signal start_for_YCrCb_GUASSIAN_Loop_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_YCrCb_GUASSIAN_Loop_U0_full_n : STD_LOGIC;
    signal start_for_YCrCb_GUASSIAN_Loop_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_YCrCb_GUASSIAN_Loop_U0_empty_n : STD_LOGIC;
    signal start_for_YCrCb_GUASSIAN_Block_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_YCrCb_GUASSIAN_Block_U0_full_n : STD_LOGIC;
    signal start_for_YCrCb_GUASSIAN_Block_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_YCrCb_GUASSIAN_Block_U0_empty_n : STD_LOGIC;
    signal YCrCb_GUASSIAN_Block_U0_start_full_n : STD_LOGIC;
    signal YCrCb_GUASSIAN_Block_U0_start_write : STD_LOGIC;
    signal start_for_erode_dilate_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_erode_dilate_U0_full_n : STD_LOGIC;
    signal start_for_erode_dilate_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_erode_dilate_U0_empty_n : STD_LOGIC;
    signal erode_dilate_U0_start_full_n : STD_LOGIC;
    signal erode_dilate_U0_start_write : STD_LOGIC;

    component YCrCb_GUASSIAN_Block_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        nor_copy1_rows_V_out_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        nor_copy1_rows_V_out_full_n : IN STD_LOGIC;
        nor_copy1_rows_V_out_write : OUT STD_LOGIC;
        nor_copy1_cols_V_out_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        nor_copy1_cols_V_out_full_n : IN STD_LOGIC;
        nor_copy1_cols_V_out_write : OUT STD_LOGIC;
        Sim_rows_V_out_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        Sim_rows_V_out_full_n : IN STD_LOGIC;
        Sim_rows_V_out_write : OUT STD_LOGIC;
        Sim_cols_V_out_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        Sim_cols_V_out_full_n : IN STD_LOGIC;
        Sim_cols_V_out_write : OUT STD_LOGIC );
    end component;


    component CvtColor IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        rows : IN STD_LOGIC_VECTOR (31 downto 0);
        cols : IN STD_LOGIC_VECTOR (31 downto 0);
        src_mat_data_stream_s_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_mat_data_stream_s_empty_n : IN STD_LOGIC;
        src_mat_data_stream_s_read : OUT STD_LOGIC;
        src_mat_data_stream_1_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_mat_data_stream_1_empty_n : IN STD_LOGIC;
        src_mat_data_stream_1_read : OUT STD_LOGIC;
        src_mat_data_stream_2_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_mat_data_stream_2_empty_n : IN STD_LOGIC;
        src_mat_data_stream_2_read : OUT STD_LOGIC;
        YCrCb_IMG_data_strea_i_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        YCrCb_IMG_data_strea_i_full_n : IN STD_LOGIC;
        YCrCb_IMG_data_strea_i_write : OUT STD_LOGIC;
        YCrCb_IMG_data_strea_1_i_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        YCrCb_IMG_data_strea_1_i_full_n : IN STD_LOGIC;
        YCrCb_IMG_data_strea_1_i_write : OUT STD_LOGIC;
        YCrCb_IMG_data_strea_2_i_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        YCrCb_IMG_data_strea_2_i_full_n : IN STD_LOGIC;
        YCrCb_IMG_data_strea_2_i_write : OUT STD_LOGIC );
    end component;


    component Split IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        src_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_0_V_empty_n : IN STD_LOGIC;
        src_data_stream_0_V_read : OUT STD_LOGIC;
        src_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_1_V_empty_n : IN STD_LOGIC;
        src_data_stream_1_V_read : OUT STD_LOGIC;
        src_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_2_V_empty_n : IN STD_LOGIC;
        src_data_stream_2_V_read : OUT STD_LOGIC;
        dst0_data_stream_V : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst0_data_stream_V_ap_vld : OUT STD_LOGIC;
        dst1_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst1_data_stream_V_full_n : IN STD_LOGIC;
        dst1_data_stream_V_write : OUT STD_LOGIC;
        dst2_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst2_data_stream_V_full_n : IN STD_LOGIC;
        dst2_data_stream_V_write : OUT STD_LOGIC );
    end component;


    component YCrCb_GUASSIAN_Loop_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        Cr_Img_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        Cr_Img_data_stream_0_V_empty_n : IN STD_LOGIC;
        Cr_Img_data_stream_0_V_read : OUT STD_LOGIC;
        Cb_Img_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        Cb_Img_data_stream_0_V_empty_n : IN STD_LOGIC;
        Cb_Img_data_stream_0_V_read : OUT STD_LOGIC;
        Sim_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        Sim_data_stream_0_V_full_n : IN STD_LOGIC;
        Sim_data_stream_0_V_write : OUT STD_LOGIC );
    end component;


    component Duplicate349 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        src_rows_V_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        src_rows_V_empty_n : IN STD_LOGIC;
        src_rows_V_read : OUT STD_LOGIC;
        src_cols_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        src_cols_V_empty_n : IN STD_LOGIC;
        src_cols_V_read : OUT STD_LOGIC;
        src_data_stream_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        src_data_stream_V_empty_n : IN STD_LOGIC;
        src_data_stream_V_read : OUT STD_LOGIC;
        dst1_data_stream_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        dst1_data_stream_V_full_n : IN STD_LOGIC;
        dst1_data_stream_V_write : OUT STD_LOGIC;
        dst2_data_stream_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        dst2_data_stream_V_full_n : IN STD_LOGIC;
        dst2_data_stream_V_write : OUT STD_LOGIC );
    end component;


    component MinMaxLoc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_data_stream_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        src_data_stream_V_empty_n : IN STD_LOGIC;
        src_data_stream_V_read : OUT STD_LOGIC;
        min_val_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        min_val_out_full_n : IN STD_LOGIC;
        min_val_out_write : OUT STD_LOGIC;
        max_val_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        max_val_out_full_n : IN STD_LOGIC;
        max_val_out_write : OUT STD_LOGIC );
    end component;


    component normalized IS
    port (
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        sim_data_stream_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        sim_data_stream_V_empty_n : IN STD_LOGIC;
        sim_data_stream_V_read : OUT STD_LOGIC;
        nor_data_stream_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        nor_data_stream_V_full_n : IN STD_LOGIC;
        nor_data_stream_V_write : OUT STD_LOGIC;
        gray_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        gray_data_stream_V_full_n : IN STD_LOGIC;
        gray_data_stream_V_write : OUT STD_LOGIC;
        max_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        max_empty_n : IN STD_LOGIC;
        max_read : OUT STD_LOGIC;
        min_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        min_empty_n : IN STD_LOGIC;
        min_read : OUT STD_LOGIC;
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;


    component Duplicate IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        src_rows_V_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        src_rows_V_empty_n : IN STD_LOGIC;
        src_rows_V_read : OUT STD_LOGIC;
        src_cols_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        src_cols_V_empty_n : IN STD_LOGIC;
        src_cols_V_read : OUT STD_LOGIC;
        src_data_stream_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        src_data_stream_V_empty_n : IN STD_LOGIC;
        src_data_stream_V_read : OUT STD_LOGIC;
        dst1_data_stream_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        dst1_data_stream_V_full_n : IN STD_LOGIC;
        dst1_data_stream_V_write : OUT STD_LOGIC;
        dst2_data_stream_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        dst2_data_stream_V_full_n : IN STD_LOGIC;
        dst2_data_stream_V_write : OUT STD_LOGIC );
    end component;


    component otsu_threshold IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        gray_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        gray_data_stream_V_empty_n : IN STD_LOGIC;
        gray_data_stream_V_read : OUT STD_LOGIC;
        ret_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        ret_out_full_n : IN STD_LOGIC;
        ret_out_write : OUT STD_LOGIC;
        ret_out1_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        ret_out1_full_n : IN STD_LOGIC;
        ret_out1_write : OUT STD_LOGIC );
    end component;


    component YCrCb_GUASSIAN_Block IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        tmp3_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        tmp3_empty_n : IN STD_LOGIC;
        tmp3_read : OUT STD_LOGIC;
        threshold : OUT STD_LOGIC_VECTOR (63 downto 0);
        threshold_ap_vld : OUT STD_LOGIC );
    end component;


    component YCrCb_GUASSIAN_Loop_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        nor_copy2_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        nor_copy2_data_stream_0_V_empty_n : IN STD_LOGIC;
        nor_copy2_data_stream_0_V_read : OUT STD_LOGIC;
        tmp3_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        tmp3_empty_n : IN STD_LOGIC;
        tmp3_read : OUT STD_LOGIC;
        origin_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        origin_data_stream_0_V_full_n : IN STD_LOGIC;
        origin_data_stream_0_V_write : OUT STD_LOGIC );
    end component;


    component erode_dilate IS
    port (
        img_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_V_empty_n : IN STD_LOGIC;
        img_data_stream_V_read : OUT STD_LOGIC;
        res_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        res_data_stream_V_full_n : IN STD_LOGIC;
        res_data_stream_V_write : OUT STD_LOGIC;
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;


    component fifo_w11_d6_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (10 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (10 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w10_d6_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w11_d3_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (10 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (10 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w10_d3_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w8_d1_A_x IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w32_d1_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w64_d1_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Split_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_YCrCb_GBew IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_DuplicaCeG IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_MinMaxLDeQ IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_normaliEe0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_DuplicaFfa IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_otsu_thGfk IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_YCrCb_GHfu IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_YCrCb_GIfE IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_erode_dJfO IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    YCrCb_GUASSIAN_Block_2_U0 : component YCrCb_GUASSIAN_Block_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => YCrCb_GUASSIAN_Block_2_U0_ap_start,
        ap_done => YCrCb_GUASSIAN_Block_2_U0_ap_done,
        ap_continue => YCrCb_GUASSIAN_Block_2_U0_ap_continue,
        ap_idle => YCrCb_GUASSIAN_Block_2_U0_ap_idle,
        ap_ready => YCrCb_GUASSIAN_Block_2_U0_ap_ready,
        nor_copy1_rows_V_out_din => YCrCb_GUASSIAN_Block_2_U0_nor_copy1_rows_V_out_din,
        nor_copy1_rows_V_out_full_n => nor_copy1_rows_V_c_i_full_n,
        nor_copy1_rows_V_out_write => YCrCb_GUASSIAN_Block_2_U0_nor_copy1_rows_V_out_write,
        nor_copy1_cols_V_out_din => YCrCb_GUASSIAN_Block_2_U0_nor_copy1_cols_V_out_din,
        nor_copy1_cols_V_out_full_n => nor_copy1_cols_V_c_i_full_n,
        nor_copy1_cols_V_out_write => YCrCb_GUASSIAN_Block_2_U0_nor_copy1_cols_V_out_write,
        Sim_rows_V_out_din => YCrCb_GUASSIAN_Block_2_U0_Sim_rows_V_out_din,
        Sim_rows_V_out_full_n => Sim_rows_V_c_i_full_n,
        Sim_rows_V_out_write => YCrCb_GUASSIAN_Block_2_U0_Sim_rows_V_out_write,
        Sim_cols_V_out_din => YCrCb_GUASSIAN_Block_2_U0_Sim_cols_V_out_din,
        Sim_cols_V_out_full_n => Sim_cols_V_c_i_full_n,
        Sim_cols_V_out_write => YCrCb_GUASSIAN_Block_2_U0_Sim_cols_V_out_write);

    CvtColor_U0 : component CvtColor
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => CvtColor_U0_ap_start,
        start_full_n => start_for_Split_U0_full_n,
        ap_done => CvtColor_U0_ap_done,
        ap_continue => CvtColor_U0_ap_continue,
        ap_idle => CvtColor_U0_ap_idle,
        ap_ready => CvtColor_U0_ap_ready,
        start_out => CvtColor_U0_start_out,
        start_write => CvtColor_U0_start_write,
        rows => rows,
        cols => cols,
        src_mat_data_stream_s_dout => src_data_stream_0_V_dout,
        src_mat_data_stream_s_empty_n => src_data_stream_0_V_empty_n,
        src_mat_data_stream_s_read => CvtColor_U0_src_mat_data_stream_s_read,
        src_mat_data_stream_1_dout => src_data_stream_1_V_dout,
        src_mat_data_stream_1_empty_n => src_data_stream_1_V_empty_n,
        src_mat_data_stream_1_read => CvtColor_U0_src_mat_data_stream_1_read,
        src_mat_data_stream_2_dout => src_data_stream_2_V_dout,
        src_mat_data_stream_2_empty_n => src_data_stream_2_V_empty_n,
        src_mat_data_stream_2_read => CvtColor_U0_src_mat_data_stream_2_read,
        YCrCb_IMG_data_strea_i_din => CvtColor_U0_YCrCb_IMG_data_strea_i_din,
        YCrCb_IMG_data_strea_i_full_n => YCrCb_IMG_data_strea_full_n,
        YCrCb_IMG_data_strea_i_write => CvtColor_U0_YCrCb_IMG_data_strea_i_write,
        YCrCb_IMG_data_strea_1_i_din => CvtColor_U0_YCrCb_IMG_data_strea_1_i_din,
        YCrCb_IMG_data_strea_1_i_full_n => YCrCb_IMG_data_strea_1_full_n,
        YCrCb_IMG_data_strea_1_i_write => CvtColor_U0_YCrCb_IMG_data_strea_1_i_write,
        YCrCb_IMG_data_strea_2_i_din => CvtColor_U0_YCrCb_IMG_data_strea_2_i_din,
        YCrCb_IMG_data_strea_2_i_full_n => YCrCb_IMG_data_strea_2_full_n,
        YCrCb_IMG_data_strea_2_i_write => CvtColor_U0_YCrCb_IMG_data_strea_2_i_write);

    Split_U0 : component Split
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => Split_U0_ap_start,
        start_full_n => start_for_YCrCb_GUASSIAN_Loop_1_U0_full_n,
        ap_done => Split_U0_ap_done,
        ap_continue => Split_U0_ap_continue,
        ap_idle => Split_U0_ap_idle,
        ap_ready => Split_U0_ap_ready,
        start_out => Split_U0_start_out,
        start_write => Split_U0_start_write,
        src_data_stream_0_V_dout => YCrCb_IMG_data_strea_dout,
        src_data_stream_0_V_empty_n => YCrCb_IMG_data_strea_empty_n,
        src_data_stream_0_V_read => Split_U0_src_data_stream_0_V_read,
        src_data_stream_1_V_dout => YCrCb_IMG_data_strea_1_dout,
        src_data_stream_1_V_empty_n => YCrCb_IMG_data_strea_1_empty_n,
        src_data_stream_1_V_read => Split_U0_src_data_stream_1_V_read,
        src_data_stream_2_V_dout => YCrCb_IMG_data_strea_2_dout,
        src_data_stream_2_V_empty_n => YCrCb_IMG_data_strea_2_empty_n,
        src_data_stream_2_V_read => Split_U0_src_data_stream_2_V_read,
        dst0_data_stream_V => Split_U0_dst0_data_stream_V,
        dst0_data_stream_V_ap_vld => Split_U0_dst0_data_stream_V_ap_vld,
        dst1_data_stream_V_din => Split_U0_dst1_data_stream_V_din,
        dst1_data_stream_V_full_n => Cr_Img_data_stream_0_full_n,
        dst1_data_stream_V_write => Split_U0_dst1_data_stream_V_write,
        dst2_data_stream_V_din => Split_U0_dst2_data_stream_V_din,
        dst2_data_stream_V_full_n => Cb_Img_data_stream_0_full_n,
        dst2_data_stream_V_write => Split_U0_dst2_data_stream_V_write);

    YCrCb_GUASSIAN_Loop_1_U0 : component YCrCb_GUASSIAN_Loop_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => YCrCb_GUASSIAN_Loop_1_U0_ap_start,
        start_full_n => start_for_Duplicate349_U0_full_n,
        ap_done => YCrCb_GUASSIAN_Loop_1_U0_ap_done,
        ap_continue => YCrCb_GUASSIAN_Loop_1_U0_ap_continue,
        ap_idle => YCrCb_GUASSIAN_Loop_1_U0_ap_idle,
        ap_ready => YCrCb_GUASSIAN_Loop_1_U0_ap_ready,
        start_out => YCrCb_GUASSIAN_Loop_1_U0_start_out,
        start_write => YCrCb_GUASSIAN_Loop_1_U0_start_write,
        Cr_Img_data_stream_0_V_dout => Cr_Img_data_stream_0_dout,
        Cr_Img_data_stream_0_V_empty_n => Cr_Img_data_stream_0_empty_n,
        Cr_Img_data_stream_0_V_read => YCrCb_GUASSIAN_Loop_1_U0_Cr_Img_data_stream_0_V_read,
        Cb_Img_data_stream_0_V_dout => Cb_Img_data_stream_0_dout,
        Cb_Img_data_stream_0_V_empty_n => Cb_Img_data_stream_0_empty_n,
        Cb_Img_data_stream_0_V_read => YCrCb_GUASSIAN_Loop_1_U0_Cb_Img_data_stream_0_V_read,
        Sim_data_stream_0_V_din => YCrCb_GUASSIAN_Loop_1_U0_Sim_data_stream_0_V_din,
        Sim_data_stream_0_V_full_n => Sim_data_stream_0_V_full_n,
        Sim_data_stream_0_V_write => YCrCb_GUASSIAN_Loop_1_U0_Sim_data_stream_0_V_write);

    Duplicate349_U0 : component Duplicate349
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => Duplicate349_U0_ap_start,
        start_full_n => Duplicate349_U0_start_full_n,
        ap_done => Duplicate349_U0_ap_done,
        ap_continue => Duplicate349_U0_ap_continue,
        ap_idle => Duplicate349_U0_ap_idle,
        ap_ready => Duplicate349_U0_ap_ready,
        start_out => Duplicate349_U0_start_out,
        start_write => Duplicate349_U0_start_write,
        src_rows_V_dout => Sim_rows_V_c_i_dout,
        src_rows_V_empty_n => Sim_rows_V_c_i_empty_n,
        src_rows_V_read => Duplicate349_U0_src_rows_V_read,
        src_cols_V_dout => Sim_cols_V_c_i_dout,
        src_cols_V_empty_n => Sim_cols_V_c_i_empty_n,
        src_cols_V_read => Duplicate349_U0_src_cols_V_read,
        src_data_stream_V_dout => Sim_data_stream_0_V_dout,
        src_data_stream_V_empty_n => Sim_data_stream_0_V_empty_n,
        src_data_stream_V_read => Duplicate349_U0_src_data_stream_V_read,
        dst1_data_stream_V_din => Duplicate349_U0_dst1_data_stream_V_din,
        dst1_data_stream_V_full_n => Sim_copy1_data_strea_full_n,
        dst1_data_stream_V_write => Duplicate349_U0_dst1_data_stream_V_write,
        dst2_data_stream_V_din => Duplicate349_U0_dst2_data_stream_V_din,
        dst2_data_stream_V_full_n => Sim_copy2_data_strea_full_n,
        dst2_data_stream_V_write => Duplicate349_U0_dst2_data_stream_V_write);

    MinMaxLoc_U0 : component MinMaxLoc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => MinMaxLoc_U0_ap_start,
        ap_done => MinMaxLoc_U0_ap_done,
        ap_continue => MinMaxLoc_U0_ap_continue,
        ap_idle => MinMaxLoc_U0_ap_idle,
        ap_ready => MinMaxLoc_U0_ap_ready,
        src_data_stream_V_dout => Sim_copy1_data_strea_dout,
        src_data_stream_V_empty_n => Sim_copy1_data_strea_empty_n,
        src_data_stream_V_read => MinMaxLoc_U0_src_data_stream_V_read,
        min_val_out_din => MinMaxLoc_U0_min_val_out_din,
        min_val_out_full_n => min_c_i_full_n,
        min_val_out_write => MinMaxLoc_U0_min_val_out_write,
        max_val_out_din => MinMaxLoc_U0_max_val_out_din,
        max_val_out_full_n => max_c_i_full_n,
        max_val_out_write => MinMaxLoc_U0_max_val_out_write);

    normalized_U0 : component normalized
    port map (
        ap_start => normalized_U0_ap_start,
        start_full_n => normalized_U0_start_full_n,
        start_out => normalized_U0_start_out,
        start_write => normalized_U0_start_write,
        sim_data_stream_V_dout => Sim_copy2_data_strea_dout,
        sim_data_stream_V_empty_n => Sim_copy2_data_strea_empty_n,
        sim_data_stream_V_read => normalized_U0_sim_data_stream_V_read,
        nor_data_stream_V_din => normalized_U0_nor_data_stream_V_din,
        nor_data_stream_V_full_n => nor_copy1_data_strea_full_n,
        nor_data_stream_V_write => normalized_U0_nor_data_stream_V_write,
        gray_data_stream_V_din => normalized_U0_gray_data_stream_V_din,
        gray_data_stream_V_full_n => gray_data_stream_0_s_full_n,
        gray_data_stream_V_write => normalized_U0_gray_data_stream_V_write,
        max_dout => max_c_i_dout,
        max_empty_n => max_c_i_empty_n,
        max_read => normalized_U0_max_read,
        min_dout => min_c_i_dout,
        min_empty_n => min_c_i_empty_n,
        min_read => normalized_U0_min_read,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_done => normalized_U0_ap_done,
        ap_ready => normalized_U0_ap_ready,
        ap_idle => normalized_U0_ap_idle,
        ap_continue => normalized_U0_ap_continue);

    Duplicate_U0 : component Duplicate
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => Duplicate_U0_ap_start,
        start_full_n => start_for_YCrCb_GUASSIAN_Loop_U0_full_n,
        ap_done => Duplicate_U0_ap_done,
        ap_continue => Duplicate_U0_ap_continue,
        ap_idle => Duplicate_U0_ap_idle,
        ap_ready => Duplicate_U0_ap_ready,
        start_out => Duplicate_U0_start_out,
        start_write => Duplicate_U0_start_write,
        src_rows_V_dout => nor_copy1_rows_V_c_i_dout,
        src_rows_V_empty_n => nor_copy1_rows_V_c_i_empty_n,
        src_rows_V_read => Duplicate_U0_src_rows_V_read,
        src_cols_V_dout => nor_copy1_cols_V_c_i_dout,
        src_cols_V_empty_n => nor_copy1_cols_V_c_i_empty_n,
        src_cols_V_read => Duplicate_U0_src_cols_V_read,
        src_data_stream_V_dout => nor_copy1_data_strea_dout,
        src_data_stream_V_empty_n => nor_copy1_data_strea_empty_n,
        src_data_stream_V_read => Duplicate_U0_src_data_stream_V_read,
        dst1_data_stream_V_din => Duplicate_U0_dst1_data_stream_V_din,
        dst1_data_stream_V_full_n => nor_data_stream_V_full_n,
        dst1_data_stream_V_write => Duplicate_U0_dst1_data_stream_V_write,
        dst2_data_stream_V_din => Duplicate_U0_dst2_data_stream_V_din,
        dst2_data_stream_V_full_n => nor_copy2_data_strea_full_n,
        dst2_data_stream_V_write => Duplicate_U0_dst2_data_stream_V_write);

    otsu_threshold_U0 : component otsu_threshold
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => otsu_threshold_U0_ap_start,
        start_full_n => start_for_YCrCb_GUASSIAN_Block_U0_full_n,
        ap_done => otsu_threshold_U0_ap_done,
        ap_continue => otsu_threshold_U0_ap_continue,
        ap_idle => otsu_threshold_U0_ap_idle,
        ap_ready => otsu_threshold_U0_ap_ready,
        start_out => otsu_threshold_U0_start_out,
        start_write => otsu_threshold_U0_start_write,
        gray_data_stream_V_dout => gray_data_stream_0_s_dout,
        gray_data_stream_V_empty_n => gray_data_stream_0_s_empty_n,
        gray_data_stream_V_read => otsu_threshold_U0_gray_data_stream_V_read,
        ret_out_din => otsu_threshold_U0_ret_out_din,
        ret_out_full_n => tmp3_c_i_full_n,
        ret_out_write => otsu_threshold_U0_ret_out_write,
        ret_out1_din => otsu_threshold_U0_ret_out1_din,
        ret_out1_full_n => tmp3_c5_i_full_n,
        ret_out1_write => otsu_threshold_U0_ret_out1_write);

    YCrCb_GUASSIAN_Block_U0 : component YCrCb_GUASSIAN_Block
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => YCrCb_GUASSIAN_Block_U0_ap_start,
        ap_done => YCrCb_GUASSIAN_Block_U0_ap_done,
        ap_continue => YCrCb_GUASSIAN_Block_U0_ap_continue,
        ap_idle => YCrCb_GUASSIAN_Block_U0_ap_idle,
        ap_ready => YCrCb_GUASSIAN_Block_U0_ap_ready,
        tmp3_dout => tmp3_c_i_dout,
        tmp3_empty_n => tmp3_c_i_empty_n,
        tmp3_read => YCrCb_GUASSIAN_Block_U0_tmp3_read,
        threshold => YCrCb_GUASSIAN_Block_U0_threshold,
        threshold_ap_vld => YCrCb_GUASSIAN_Block_U0_threshold_ap_vld);

    YCrCb_GUASSIAN_Loop_U0 : component YCrCb_GUASSIAN_Loop_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => YCrCb_GUASSIAN_Loop_U0_ap_start,
        start_full_n => start_for_erode_dilate_U0_full_n,
        ap_done => YCrCb_GUASSIAN_Loop_U0_ap_done,
        ap_continue => YCrCb_GUASSIAN_Loop_U0_ap_continue,
        ap_idle => YCrCb_GUASSIAN_Loop_U0_ap_idle,
        ap_ready => YCrCb_GUASSIAN_Loop_U0_ap_ready,
        start_out => YCrCb_GUASSIAN_Loop_U0_start_out,
        start_write => YCrCb_GUASSIAN_Loop_U0_start_write,
        nor_copy2_data_stream_0_V_dout => nor_copy2_data_strea_dout,
        nor_copy2_data_stream_0_V_empty_n => nor_copy2_data_strea_empty_n,
        nor_copy2_data_stream_0_V_read => YCrCb_GUASSIAN_Loop_U0_nor_copy2_data_stream_0_V_read,
        tmp3_dout => tmp3_c5_i_dout,
        tmp3_empty_n => tmp3_c5_i_empty_n,
        tmp3_read => YCrCb_GUASSIAN_Loop_U0_tmp3_read,
        origin_data_stream_0_V_din => YCrCb_GUASSIAN_Loop_U0_origin_data_stream_0_V_din,
        origin_data_stream_0_V_full_n => origin_data_stream_0_full_n,
        origin_data_stream_0_V_write => YCrCb_GUASSIAN_Loop_U0_origin_data_stream_0_V_write);

    erode_dilate_U0 : component erode_dilate
    port map (
        img_data_stream_V_dout => origin_data_stream_0_dout,
        img_data_stream_V_empty_n => origin_data_stream_0_empty_n,
        img_data_stream_V_read => erode_dilate_U0_img_data_stream_V_read,
        res_data_stream_V_din => erode_dilate_U0_res_data_stream_V_din,
        res_data_stream_V_full_n => res_data_stream_V_full_n,
        res_data_stream_V_write => erode_dilate_U0_res_data_stream_V_write,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_done => erode_dilate_U0_ap_done,
        ap_start => erode_dilate_U0_ap_start,
        ap_ready => erode_dilate_U0_ap_ready,
        ap_idle => erode_dilate_U0_ap_idle,
        ap_continue => erode_dilate_U0_ap_continue);

    nor_copy1_rows_V_c_i_U : component fifo_w11_d6_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => YCrCb_GUASSIAN_Block_2_U0_nor_copy1_rows_V_out_din,
        if_full_n => nor_copy1_rows_V_c_i_full_n,
        if_write => YCrCb_GUASSIAN_Block_2_U0_nor_copy1_rows_V_out_write,
        if_dout => nor_copy1_rows_V_c_i_dout,
        if_empty_n => nor_copy1_rows_V_c_i_empty_n,
        if_read => Duplicate_U0_src_rows_V_read);

    nor_copy1_cols_V_c_i_U : component fifo_w10_d6_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => YCrCb_GUASSIAN_Block_2_U0_nor_copy1_cols_V_out_din,
        if_full_n => nor_copy1_cols_V_c_i_full_n,
        if_write => YCrCb_GUASSIAN_Block_2_U0_nor_copy1_cols_V_out_write,
        if_dout => nor_copy1_cols_V_c_i_dout,
        if_empty_n => nor_copy1_cols_V_c_i_empty_n,
        if_read => Duplicate_U0_src_cols_V_read);

    Sim_rows_V_c_i_U : component fifo_w11_d3_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => YCrCb_GUASSIAN_Block_2_U0_Sim_rows_V_out_din,
        if_full_n => Sim_rows_V_c_i_full_n,
        if_write => YCrCb_GUASSIAN_Block_2_U0_Sim_rows_V_out_write,
        if_dout => Sim_rows_V_c_i_dout,
        if_empty_n => Sim_rows_V_c_i_empty_n,
        if_read => Duplicate349_U0_src_rows_V_read);

    Sim_cols_V_c_i_U : component fifo_w10_d3_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => YCrCb_GUASSIAN_Block_2_U0_Sim_cols_V_out_din,
        if_full_n => Sim_cols_V_c_i_full_n,
        if_write => YCrCb_GUASSIAN_Block_2_U0_Sim_cols_V_out_write,
        if_dout => Sim_cols_V_c_i_dout,
        if_empty_n => Sim_cols_V_c_i_empty_n,
        if_read => Duplicate349_U0_src_cols_V_read);

    YCrCb_IMG_data_strea_U : component fifo_w8_d1_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => CvtColor_U0_YCrCb_IMG_data_strea_i_din,
        if_full_n => YCrCb_IMG_data_strea_full_n,
        if_write => CvtColor_U0_YCrCb_IMG_data_strea_i_write,
        if_dout => YCrCb_IMG_data_strea_dout,
        if_empty_n => YCrCb_IMG_data_strea_empty_n,
        if_read => Split_U0_src_data_stream_0_V_read);

    YCrCb_IMG_data_strea_1_U : component fifo_w8_d1_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => CvtColor_U0_YCrCb_IMG_data_strea_1_i_din,
        if_full_n => YCrCb_IMG_data_strea_1_full_n,
        if_write => CvtColor_U0_YCrCb_IMG_data_strea_1_i_write,
        if_dout => YCrCb_IMG_data_strea_1_dout,
        if_empty_n => YCrCb_IMG_data_strea_1_empty_n,
        if_read => Split_U0_src_data_stream_1_V_read);

    YCrCb_IMG_data_strea_2_U : component fifo_w8_d1_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => CvtColor_U0_YCrCb_IMG_data_strea_2_i_din,
        if_full_n => YCrCb_IMG_data_strea_2_full_n,
        if_write => CvtColor_U0_YCrCb_IMG_data_strea_2_i_write,
        if_dout => YCrCb_IMG_data_strea_2_dout,
        if_empty_n => YCrCb_IMG_data_strea_2_empty_n,
        if_read => Split_U0_src_data_stream_2_V_read);

    Cr_Img_data_stream_0_U : component fifo_w8_d1_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Split_U0_dst1_data_stream_V_din,
        if_full_n => Cr_Img_data_stream_0_full_n,
        if_write => Split_U0_dst1_data_stream_V_write,
        if_dout => Cr_Img_data_stream_0_dout,
        if_empty_n => Cr_Img_data_stream_0_empty_n,
        if_read => YCrCb_GUASSIAN_Loop_1_U0_Cr_Img_data_stream_0_V_read);

    Cb_Img_data_stream_0_U : component fifo_w8_d1_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Split_U0_dst2_data_stream_V_din,
        if_full_n => Cb_Img_data_stream_0_full_n,
        if_write => Split_U0_dst2_data_stream_V_write,
        if_dout => Cb_Img_data_stream_0_dout,
        if_empty_n => Cb_Img_data_stream_0_empty_n,
        if_read => YCrCb_GUASSIAN_Loop_1_U0_Cb_Img_data_stream_0_V_read);

    Sim_data_stream_0_V_U : component fifo_w32_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => YCrCb_GUASSIAN_Loop_1_U0_Sim_data_stream_0_V_din,
        if_full_n => Sim_data_stream_0_V_full_n,
        if_write => YCrCb_GUASSIAN_Loop_1_U0_Sim_data_stream_0_V_write,
        if_dout => Sim_data_stream_0_V_dout,
        if_empty_n => Sim_data_stream_0_V_empty_n,
        if_read => Duplicate349_U0_src_data_stream_V_read);

    Sim_copy1_data_strea_U : component fifo_w32_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Duplicate349_U0_dst1_data_stream_V_din,
        if_full_n => Sim_copy1_data_strea_full_n,
        if_write => Duplicate349_U0_dst1_data_stream_V_write,
        if_dout => Sim_copy1_data_strea_dout,
        if_empty_n => Sim_copy1_data_strea_empty_n,
        if_read => MinMaxLoc_U0_src_data_stream_V_read);

    Sim_copy2_data_strea_U : component fifo_w32_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Duplicate349_U0_dst2_data_stream_V_din,
        if_full_n => Sim_copy2_data_strea_full_n,
        if_write => Duplicate349_U0_dst2_data_stream_V_write,
        if_dout => Sim_copy2_data_strea_dout,
        if_empty_n => Sim_copy2_data_strea_empty_n,
        if_read => normalized_U0_sim_data_stream_V_read);

    min_c_i_U : component fifo_w64_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => MinMaxLoc_U0_min_val_out_din,
        if_full_n => min_c_i_full_n,
        if_write => MinMaxLoc_U0_min_val_out_write,
        if_dout => min_c_i_dout,
        if_empty_n => min_c_i_empty_n,
        if_read => normalized_U0_min_read);

    max_c_i_U : component fifo_w64_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => MinMaxLoc_U0_max_val_out_din,
        if_full_n => max_c_i_full_n,
        if_write => MinMaxLoc_U0_max_val_out_write,
        if_dout => max_c_i_dout,
        if_empty_n => max_c_i_empty_n,
        if_read => normalized_U0_max_read);

    nor_copy1_data_strea_U : component fifo_w32_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => normalized_U0_nor_data_stream_V_din,
        if_full_n => nor_copy1_data_strea_full_n,
        if_write => normalized_U0_nor_data_stream_V_write,
        if_dout => nor_copy1_data_strea_dout,
        if_empty_n => nor_copy1_data_strea_empty_n,
        if_read => Duplicate_U0_src_data_stream_V_read);

    gray_data_stream_0_s_U : component fifo_w8_d1_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => normalized_U0_gray_data_stream_V_din,
        if_full_n => gray_data_stream_0_s_full_n,
        if_write => normalized_U0_gray_data_stream_V_write,
        if_dout => gray_data_stream_0_s_dout,
        if_empty_n => gray_data_stream_0_s_empty_n,
        if_read => otsu_threshold_U0_gray_data_stream_V_read);

    nor_copy2_data_strea_U : component fifo_w32_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Duplicate_U0_dst2_data_stream_V_din,
        if_full_n => nor_copy2_data_strea_full_n,
        if_write => Duplicate_U0_dst2_data_stream_V_write,
        if_dout => nor_copy2_data_strea_dout,
        if_empty_n => nor_copy2_data_strea_empty_n,
        if_read => YCrCb_GUASSIAN_Loop_U0_nor_copy2_data_stream_0_V_read);

    tmp3_c_i_U : component fifo_w64_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => otsu_threshold_U0_ret_out_din,
        if_full_n => tmp3_c_i_full_n,
        if_write => otsu_threshold_U0_ret_out_write,
        if_dout => tmp3_c_i_dout,
        if_empty_n => tmp3_c_i_empty_n,
        if_read => YCrCb_GUASSIAN_Block_U0_tmp3_read);

    tmp3_c5_i_U : component fifo_w64_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => otsu_threshold_U0_ret_out1_din,
        if_full_n => tmp3_c5_i_full_n,
        if_write => otsu_threshold_U0_ret_out1_write,
        if_dout => tmp3_c5_i_dout,
        if_empty_n => tmp3_c5_i_empty_n,
        if_read => YCrCb_GUASSIAN_Loop_U0_tmp3_read);

    origin_data_stream_0_U : component fifo_w8_d1_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => YCrCb_GUASSIAN_Loop_U0_origin_data_stream_0_V_din,
        if_full_n => origin_data_stream_0_full_n,
        if_write => YCrCb_GUASSIAN_Loop_U0_origin_data_stream_0_V_write,
        if_dout => origin_data_stream_0_dout,
        if_empty_n => origin_data_stream_0_empty_n,
        if_read => erode_dilate_U0_img_data_stream_V_read);

    start_for_Split_U0_U : component start_for_Split_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Split_U0_din,
        if_full_n => start_for_Split_U0_full_n,
        if_write => CvtColor_U0_start_write,
        if_dout => start_for_Split_U0_dout,
        if_empty_n => start_for_Split_U0_empty_n,
        if_read => Split_U0_ap_ready);

    start_for_YCrCb_GBew_U : component start_for_YCrCb_GBew
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_YCrCb_GUASSIAN_Loop_1_U0_din,
        if_full_n => start_for_YCrCb_GUASSIAN_Loop_1_U0_full_n,
        if_write => Split_U0_start_write,
        if_dout => start_for_YCrCb_GUASSIAN_Loop_1_U0_dout,
        if_empty_n => start_for_YCrCb_GUASSIAN_Loop_1_U0_empty_n,
        if_read => YCrCb_GUASSIAN_Loop_1_U0_ap_ready);

    start_for_DuplicaCeG_U : component start_for_DuplicaCeG
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Duplicate349_U0_din,
        if_full_n => start_for_Duplicate349_U0_full_n,
        if_write => YCrCb_GUASSIAN_Loop_1_U0_start_write,
        if_dout => start_for_Duplicate349_U0_dout,
        if_empty_n => start_for_Duplicate349_U0_empty_n,
        if_read => Duplicate349_U0_ap_ready);

    start_for_MinMaxLDeQ_U : component start_for_MinMaxLDeQ
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_MinMaxLoc_U0_din,
        if_full_n => start_for_MinMaxLoc_U0_full_n,
        if_write => Duplicate349_U0_start_write,
        if_dout => start_for_MinMaxLoc_U0_dout,
        if_empty_n => start_for_MinMaxLoc_U0_empty_n,
        if_read => MinMaxLoc_U0_ap_ready);

    start_for_normaliEe0_U : component start_for_normaliEe0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_normalized_U0_din,
        if_full_n => start_for_normalized_U0_full_n,
        if_write => Duplicate349_U0_start_write,
        if_dout => start_for_normalized_U0_dout,
        if_empty_n => start_for_normalized_U0_empty_n,
        if_read => normalized_U0_ap_ready);

    start_for_DuplicaFfa_U : component start_for_DuplicaFfa
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Duplicate_U0_din,
        if_full_n => start_for_Duplicate_U0_full_n,
        if_write => normalized_U0_start_write,
        if_dout => start_for_Duplicate_U0_dout,
        if_empty_n => start_for_Duplicate_U0_empty_n,
        if_read => Duplicate_U0_ap_ready);

    start_for_otsu_thGfk_U : component start_for_otsu_thGfk
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_otsu_threshold_U0_din,
        if_full_n => start_for_otsu_threshold_U0_full_n,
        if_write => normalized_U0_start_write,
        if_dout => start_for_otsu_threshold_U0_dout,
        if_empty_n => start_for_otsu_threshold_U0_empty_n,
        if_read => otsu_threshold_U0_ap_ready);

    start_for_YCrCb_GHfu_U : component start_for_YCrCb_GHfu
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_YCrCb_GUASSIAN_Loop_U0_din,
        if_full_n => start_for_YCrCb_GUASSIAN_Loop_U0_full_n,
        if_write => Duplicate_U0_start_write,
        if_dout => start_for_YCrCb_GUASSIAN_Loop_U0_dout,
        if_empty_n => start_for_YCrCb_GUASSIAN_Loop_U0_empty_n,
        if_read => YCrCb_GUASSIAN_Loop_U0_ap_ready);

    start_for_YCrCb_GIfE_U : component start_for_YCrCb_GIfE
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_YCrCb_GUASSIAN_Block_U0_din,
        if_full_n => start_for_YCrCb_GUASSIAN_Block_U0_full_n,
        if_write => otsu_threshold_U0_start_write,
        if_dout => start_for_YCrCb_GUASSIAN_Block_U0_dout,
        if_empty_n => start_for_YCrCb_GUASSIAN_Block_U0_empty_n,
        if_read => YCrCb_GUASSIAN_Block_U0_ap_ready);

    start_for_erode_dJfO_U : component start_for_erode_dJfO
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_erode_dilate_U0_din,
        if_full_n => start_for_erode_dilate_U0_full_n,
        if_write => YCrCb_GUASSIAN_Loop_U0_start_write,
        if_dout => start_for_erode_dilate_U0_dout,
        if_empty_n => start_for_erode_dilate_U0_empty_n,
        if_read => erode_dilate_U0_ap_ready);




    CvtColor_U0_ap_continue <= ap_const_logic_1;
    CvtColor_U0_ap_start <= (ap_start);
    Duplicate349_U0_ap_continue <= ap_const_logic_1;
    Duplicate349_U0_ap_start <= start_for_Duplicate349_U0_empty_n;
    Duplicate349_U0_start_full_n <= (start_for_normalized_U0_full_n and start_for_MinMaxLoc_U0_full_n);
    Duplicate_U0_ap_continue <= ap_sync_continue;
    Duplicate_U0_ap_start <= start_for_Duplicate_U0_empty_n;
    MinMaxLoc_U0_ap_continue <= ap_const_logic_1;
    MinMaxLoc_U0_ap_start <= start_for_MinMaxLoc_U0_empty_n;
    MinMaxLoc_U0_start_full_n <= ap_const_logic_1;
    MinMaxLoc_U0_start_write <= ap_const_logic_0;
    Split_U0_ap_continue <= ap_const_logic_1;
    Split_U0_ap_start <= start_for_Split_U0_empty_n;
    YCrCb_GUASSIAN_Block_2_U0_ap_continue <= ap_const_logic_1;
    YCrCb_GUASSIAN_Block_2_U0_ap_start <= ap_start;
    YCrCb_GUASSIAN_Block_2_U0_start_full_n <= ap_const_logic_1;
    YCrCb_GUASSIAN_Block_2_U0_start_write <= ap_const_logic_0;
    YCrCb_GUASSIAN_Block_U0_ap_continue <= ap_sync_continue;
    YCrCb_GUASSIAN_Block_U0_ap_start <= start_for_YCrCb_GUASSIAN_Block_U0_empty_n;
    YCrCb_GUASSIAN_Block_U0_start_full_n <= ap_const_logic_1;
    YCrCb_GUASSIAN_Block_U0_start_write <= ap_const_logic_0;
    YCrCb_GUASSIAN_Loop_1_U0_ap_continue <= ap_const_logic_1;
    YCrCb_GUASSIAN_Loop_1_U0_ap_start <= start_for_YCrCb_GUASSIAN_Loop_1_U0_empty_n;
    YCrCb_GUASSIAN_Loop_U0_ap_continue <= ap_const_logic_1;
    YCrCb_GUASSIAN_Loop_U0_ap_start <= start_for_YCrCb_GUASSIAN_Loop_U0_empty_n;
    ap_done <= ap_sync_done;
    ap_idle <= (otsu_threshold_U0_ap_idle and normalized_U0_ap_idle and erode_dilate_U0_ap_idle and YCrCb_GUASSIAN_Loop_U0_ap_idle and YCrCb_GUASSIAN_Loop_1_U0_ap_idle and YCrCb_GUASSIAN_Block_U0_ap_idle and YCrCb_GUASSIAN_Block_2_U0_ap_idle and Split_U0_ap_idle and MinMaxLoc_U0_ap_idle and Duplicate_U0_ap_idle and Duplicate349_U0_ap_idle and CvtColor_U0_ap_idle);
    ap_ready <= CvtColor_U0_ap_ready;
    ap_sync_continue <= (ap_sync_done and ap_continue);
    ap_sync_done <= (erode_dilate_U0_ap_done and YCrCb_GUASSIAN_Block_U0_ap_done and Duplicate_U0_ap_done);
    ap_sync_ready <= CvtColor_U0_ap_ready;
    erode_dilate_U0_ap_continue <= ap_sync_continue;
    erode_dilate_U0_ap_start <= start_for_erode_dilate_U0_empty_n;
    erode_dilate_U0_start_full_n <= ap_const_logic_1;
    erode_dilate_U0_start_write <= ap_const_logic_0;
    nor_data_stream_V_din <= Duplicate_U0_dst1_data_stream_V_din;
    nor_data_stream_V_write <= Duplicate_U0_dst1_data_stream_V_write;
    normalized_U0_ap_continue <= ap_const_logic_1;
    normalized_U0_ap_start <= start_for_normalized_U0_empty_n;
    normalized_U0_start_full_n <= (start_for_otsu_threshold_U0_full_n and start_for_Duplicate_U0_full_n);
    otsu_threshold_U0_ap_continue <= ap_const_logic_1;
    otsu_threshold_U0_ap_start <= start_for_otsu_threshold_U0_empty_n;
    res_data_stream_V_din <= erode_dilate_U0_res_data_stream_V_din;
    res_data_stream_V_write <= erode_dilate_U0_res_data_stream_V_write;
    src_data_stream_0_V_read <= CvtColor_U0_src_mat_data_stream_s_read;
    src_data_stream_1_V_read <= CvtColor_U0_src_mat_data_stream_1_read;
    src_data_stream_2_V_read <= CvtColor_U0_src_mat_data_stream_2_read;
    start_for_Duplicate349_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Duplicate_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_MinMaxLoc_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Split_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_YCrCb_GUASSIAN_Block_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_YCrCb_GUASSIAN_Loop_1_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_YCrCb_GUASSIAN_Loop_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_erode_dilate_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_normalized_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_otsu_threshold_U0_din <= (0=>ap_const_logic_1, others=>'-');
    threshold <= YCrCb_GUASSIAN_Block_U0_threshold;
    threshold_ap_vld <= YCrCb_GUASSIAN_Block_U0_threshold_ap_vld;
end behav;
